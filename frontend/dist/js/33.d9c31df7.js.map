{"version":3,"file":"js/33.d9c31df7.js","mappings":"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mBACA8P,kBACAC,mBACA0B,kBACA7J,YACAjB,cACAC,WACAgK,OACA/J,QACAvE,YACAE,gBACAuO,WACAhK,mBACAC,sBACAmJ,gBACA1N,gBACAV,gBACAsB,eACAX,mBACAC,iBACAC,YACAC,gBACAC,gBACAa,cACAkP,eACA1M,kBACAG,gBACAE,iBACAoC,cACA0F,kBACAjN,cACA0E,oBACAC,oBACAC,mBACA8M,cACAvN,WACAxD,aACA6F,eACA1D,cACAE,WACAsM,iBACAzO,iBACA+B,mBACAC,mBACAmC,eACAyK,cACA5K,WACAE,eACAK,iBACArC,WACAI,gBACAD,eACAT,qBACAE,oBACAM,0BAGAQ,eACA+L,kBACA7L,eACAK,mBACAK,kBACAH,iBACAN,eACAE,qBACAU,yBACAF,kBACAZ,sBACAK,uBACAE,qBACAG,sBAEAuK,sBACAC,wBACAC,iBACAjQ,UACAmR,mBACAC,mBACAC,qBACAC,qBACArR,gBACAI,mBACAuR,yBAGApR,eACAE,sBACAa,mBACAE,mBACAnB,mBACAU,mBAEJ,GGt3CF,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS2S,GAAQ,CAAC,YAAY,qBAEzF,S","sources":["webpack://logtool-frontend/./src/views/Logs.vue","webpack://logtool-frontend/./src/components/DeviceLogDrawer.vue","webpack://logtool-frontend/./src/components/DeviceLogDrawer.vue?86db","webpack://logtool-frontend/./src/views/Logs.vue?e192"],"sourcesContent":["<template>\n  <div class=\"logs-container\">\n    <!-- 日志上传卡片 -->\n    <el-card class=\"upload-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>日志上传</span>\n        </div>\n      </template>\n      <div class=\"upload-actions\">\n        <el-button \n          type=\"primary\" \n          @click=\"showUploadDialog = true\"\n        >\n          <el-icon><UploadFilled /></el-icon>\n          上传日志\n        </el-button>\n      </div>\n    </el-card>\n    \n    <!-- 设备分组日志列表 -->\n    <el-card class=\"list-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>日志解析</span>\n          <div class=\"header-actions\">\n            <!-- 仅看自己按钮 -->\n            <div class=\"header-section only-own-section\">\n              <el-checkbox v-model=\"onlyOwn\" @change=\"applyOnlyOwn\" label=\"仅看自己\" />\n            </div>\n\n            <!-- 重置按钮 -->\n            <div class=\"header-section reset-section\">\n              <el-button plain size=\"small\" @click=\"resetAllFilters\">重置</el-button>\n            </div>\n\n            <!-- 刷新按钮 -->\n            <div class=\"header-section refresh-section\">\n              <el-button plain size=\"small\" @click=\"loadDeviceGroups\">\n                <el-icon><Refresh /></el-icon>\n                刷新\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </template>\n      \n      <el-table\n        :data=\"deviceGroups\"\n        :loading=\"deviceGroupsLoading\"\n        style=\"width: 100%\"\n        v-loading=\"deviceGroupsLoading\"\n      >\n        <el-table-column prop=\"device_id\" label=\"设备编号\" width=\"160\">\n          <template #default=\"{ row }\">\n            <el-button \n              type=\"text\" \n              @click=\"openDeviceDrawer(row.device_id)\"\n              style=\"color: #409eff; text-decoration: underline;\"\n            >\n              {{ row.device_id }}\n            </el-button>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"hospital\" label=\"医院名称\" width=\"200\">\n          <template #default=\"{ row }\">\n            {{ row.hospital || '-' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"log_count\" label=\"日志数量\" width=\"100\" align=\"center\" />\n        <el-table-column prop=\"latest_upload_time\" label=\"更新时间\" width=\"150\">\n          <template #default=\"{ row }\">\n            {{ formatDate(row.latest_upload_time) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"操作\" width=\"300\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button \n              size=\"small\" \n              type=\"primary\"\n              @click=\"openDeviceDrawer(row.device_id)\"\n            >\n              查看手术\n            </el-button>\n            \n            <el-button \n              size=\"small\" \n              type=\"success\"\n              @click=\"openDeviceDrawer(row.device_id)\"\n            >\n              数据上传\n            </el-button>\n            \n            <el-button \n              size=\"small\" \n              type=\"warning\"\n              @click=\"openDeviceDrawer(row.device_id)\"\n            >\n              日志上传\n            </el-button>\n            \n            <el-button \n              size=\"small\" \n              type=\"info\"\n              @click=\"openDeviceDrawer(row.device_id)\"\n            >\n              关注\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 设备详细日志抽屉 -->\n    <DeviceLogDrawer\n      :model-value=\"showDeviceDrawer\"\n      @update:model-value=\"showDeviceDrawer = $event\"\n      :device-id=\"selectedDeviceId\"\n    />\n\n    <!-- 上传日志弹窗 -->\n    <el-dialog v-model=\"showUploadDialog\" title=\"上传日志\" width=\"700px\" append-to-body>\n\n      <el-upload\n        ref=\"uploadRef\"\n        :action=\"uploadUrl\"\n        :headers=\"uploadHeaders\"\n        :before-upload=\"beforeUpload\"\n        :on-success=\"onUploadSuccess\"\n        :on-error=\"onUploadError\"\n        :on-exceed=\"onExceed\"\n        :on-change=\"onFileChange\"\n        :on-remove=\"onFileRemove\"\n        :on-progress=\"onUploadProgress\"\n        :auto-upload=\"false\"\n        :show-file-list=\"false\"\n        :multiple=\"true\"\n        :limit=\"50\"\n        accept=\".medbot\"\n        name=\"file\"\n        :disabled=\"uploading\"\n      >\n        <el-button type=\"primary\" :disabled=\"uploading\">\n          <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n          选择文件\n        </el-button>\n        <template #tip>\n          <div class=\"el-upload__tip\">\n            <div v-if=\"!uploading\">\n              支持上传 .medbot 文件，最多50个文件，总大小不超过200MB，上传后将自动解密并解析\n            </div>\n            <div v-else class=\"parsing-tip\">\n              <el-icon class=\"is-loading\"><Refresh /></el-icon>\n              文件上传中，上传完成后才能进行下一次上传操作\n            </div>\n          </div>\n        </template>\n      </el-upload>\n\n      <!-- 自定义文件列表 -->\n      <div v-if=\"uploadFileList && uploadFileList.length > 0\" class=\"custom-file-list\">\n        <div class=\"file-list-header\">\n          <span>已选择的文件 ({{ uploadFileList.length }})</span>\n          <el-button type=\"text\" size=\"small\" @click=\"clearUpload\" :disabled=\"uploading\">\n            清空\n          </el-button>\n        </div>\n        <div class=\"file-items\">\n          <div \n            v-for=\"(file, index) in uploadFileList\" \n            :key=\"index\" \n            class=\"file-item\"\n          >\n            <el-icon><Document /></el-icon>\n            <span class=\"file-name\">{{ file.name || file.originalname }}</span>\n            <span class=\"file-size\">{{ file.sizeText }}</span>\n            <el-button \n              type=\"text\" \n              size=\"small\" \n              @click=\"removeFile(index)\"\n              :disabled=\"uploading\"\n            >\n              <el-icon><Delete /></el-icon>\n            </el-button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 密钥输入区域 -->\n      <div class=\"key-input-section\">\n        <div class=\"key-input-row\">\n          <el-input\n            v-model=\"decryptKey\"\n            placeholder=\"请输入解密密钥（MAC地址格式，如：00-01-05-77-6a-09）\"\n            style=\"width: 300px;\"\n            clearable\n            @blur=\"validateKeyFormat\"\n          >\n            <template #prefix>\n              <el-icon><Key /></el-icon>\n            </template>\n          </el-input>\n          \n          <el-button \n            type=\"primary\" \n            plain \n            @click=\"autoFillDeviceId\"\n            :disabled=\"!decryptKey.trim()\"\n          >\n            自动填充设备编号\n          </el-button>\n          \n          <span class=\"key-separator\">或</span>\n          \n          <el-upload\n            ref=\"keyUploadRef\"\n            :auto-upload=\"false\"\n            :show-file-list=\"false\"\n            accept=\".txt\"\n            :before-upload=\"beforeKeyUpload\"\n            :on-change=\"onKeyFileChange\"\n          >\n            <el-button type=\"primary\" plain>\n              <el-icon><Upload /></el-icon>\n              上传密钥文件\n            </el-button>\n          </el-upload>\n        </div>\n        \n        <div v-if=\"keyFileName\" class=\"key-file-info\">\n          <el-tag type=\"success\" size=\"small\">\n            <el-icon><Document /></el-icon>\n            {{ keyFileName }}\n          </el-tag>\n        </div>\n        \n        <div v-if=\"keyError\" class=\"key-error\">\n          <el-tag type=\"danger\" size=\"small\">\n            {{ keyError }}\n          </el-tag>\n        </div>\n      </div>\n\n      <!-- 设备编号输入区域 -->\n      <div class=\"device-input-section\">\n        <div class=\"device-input-row\">\n          <el-input\n            v-model=\"deviceId\"\n            placeholder=\"设备编号（格式：数字或字母组合，例：4371-01、ABC-12，默认为0000-00）\"\n            style=\"width: 300px;\"\n            clearable\n            @blur=\"validateDeviceIdFormat\"\n          >\n            <template #prefix>\n              <el-icon><Monitor /></el-icon>\n            </template>\n          </el-input>\n          \n          <el-button \n            type=\"primary\" \n            plain \n            @click=\"autoFillKey\"\n            :disabled=\"!deviceId.trim()\"\n          >\n            自动填充密钥\n          </el-button>\n        </div>\n        \n        <div v-if=\"deviceIdError\" class=\"device-error\">\n          <el-tag type=\"danger\" size=\"small\">\n            {{ deviceIdError }}\n          </el-tag>\n        </div>\n      </div>\n\n      <template #footer>\n        <div class=\"upload-actions\">\n          <el-button @click=\"showUploadDialog = false\" :disabled=\"uploading\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"submitUpload\" \n            :loading=\"uploading\"\n            :disabled=\"uploading || !decryptKey.trim() || uploadFileList.length === 0\"\n          >\n            {{ uploading ? '解析中...' : '上传并解析' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n\n    <!-- 日志查看弹窗 -->\n    <el-dialog v-model=\"showEntriesDialog\" title=\"日志查看\" width=\"900px\">\n      <el-table :data=\"logEntries\" style=\"width: 100%\">\n        <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" />\n        <el-table-column prop=\"error_code\" label=\"故障码\" width=\"100\" />\n        <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\n        <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\n        <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\n        <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\n        <el-table-column prop=\"explanation\" label=\"日志解释\" />\n      </el-table>\n    </el-dialog>\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { Search, Monitor, Refresh, Upload, Key, Document, UploadFilled, Delete, Warning, InfoFilled, Filter } from '@element-plus/icons-vue'\nimport DeviceLogDrawer from '../components/DeviceLogDrawer.vue'\n\nexport default {\n  name: 'Logs',\n  components: {\n    DeviceLogDrawer\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    \n    // 响应式数据\n    const loading = ref(false)\n    const uploading = ref(false)\n    const showUploadDialog = ref(false)\n    const overallProgress = ref(0) // 总体进度\n    const processingStatus = ref('') // 处理状态\n    const uploadRef = ref(null)\n    const keyUploadRef = ref(null)\n    const currentPage = ref(1)\n    const pageSize = ref(20)\n    const showNameFilterPanel = ref(false)\n    const showDeviceFilterPanel = ref(false)\n    const nameTimePrefix = ref('')\n    const onlyOwn = ref(false)\n    \n    // 设备分组相关数据\n    const showDeviceDrawer = ref(false)\n    const selectedDeviceId = ref('')\n    const dateShortcuts = ref([\n      {\n        text: '本年',\n        value: () => {\n          const start = new Date(new Date().getFullYear(), 0, 1, 0, 0, 0)\n          const end = new Date(new Date().getFullYear(), 11, 31, 23, 59, 59)\n          return [start, end]\n        }\n      },\n      {\n        text: '本月',\n        value: () => {\n          const now = new Date()\n          const start = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0)\n          const end = new Date(now.getFullYear(), now.getMonth() + 1, 0, 23, 59, 59)\n          return [start, end]\n        }\n      },\n      {\n        text: '今天',\n        value: () => {\n          const now = new Date()\n          const start = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0)\n          const end = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59)\n          return [start, end]\n        }\n      }\n    ])\n    const decryptKey = ref('') // 密钥输入\n    const keyFileName = ref('') // 密钥文件名\n    const deviceId = ref('') // 设备编号\n    const filterDeviceId = ref('') // 筛选设备编号\n    const uploadFileList = ref([]) // 手动跟踪上传文件列表\n    const keyError = ref('') // 密钥格式错误提示\n    const deviceIdError = ref('') // 设备编号格式错误提示\n    \n    // 批量操作相关数据\n    const selectedLogs = ref([]) // 选中的日志\n    \n\n    \n    // 计算属性\n    const logs = computed(() => Array.isArray(store.getters['logs/logsList']) ? store.getters['logs/logsList'] : [])\n    const total = computed(() => store.getters['logs/totalCount'])\n    const deviceGroups = computed(() => Array.isArray(store.getters['logs/deviceGroupsList']) ? store.getters['logs/deviceGroupsList'] : [])\n    const deviceGroupsLoading = computed(() => store.getters['logs/isDeviceGroupsLoading'])\n    const uploadUrl = computed(() => '/api/logs/upload')\n    const uploadHeaders = computed(() => ({\n      Authorization: `Bearer ${store.state.auth.token}`,\n      'X-Decrypt-Key': decryptKey.value, // 添加密钥到请求头\n      'X-Device-ID': deviceId.value // 添加设备编号到请求头\n    }))\n    \n    // 权限相关计算属性\n    const userRole = computed(() => store.state.auth.user?.role_id)\n    const userId = computed(() => store.state.auth.user?.id)\n    \n    // 批量操作相关计算属性\n    const canBatchOperate = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canOperate(log)) &&\n             selectedLogs.value.every(log => log.status === 'parsed' || log.status === 'failed')\n    })\n    \n    // 批量查看权限（只有完成状态的文件可以查看）\n    const canBatchView = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canView(log)) &&\n             selectedLogs.value.every(log => log.status === 'parsed')\n    })\n    \n    // 批量下载权限（只有完成状态的文件可以下载）\n    const canBatchDownload = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canDownload(log)) &&\n             selectedLogs.value.every(log => log.status === 'parsed')\n    })\n    \n    // 批量重新解析权限（完成状态和解析失败的文件可以重新解析）\n    const canBatchReparse = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canReparseLog(log)) &&\n             selectedLogs.value.every(log => log.status === 'parsed' || log.status === 'parse_failed')\n    })\n    \n    // 检查选中的日志是否属于同一设备\n    const isSameDevice = computed(() => {\n      if (selectedLogs.value.length === 0) return true\n      const firstDeviceId = selectedLogs.value[0].device_id\n      return selectedLogs.value.every(log => log.device_id === firstDeviceId)\n    })\n    \n    // 获取设备检测提示信息\n    const deviceCheckMessage = computed(() => {\n      if (selectedLogs.value.length === 0) return ''\n      if (!isSameDevice.value) {\n        const deviceIds = [...new Set(selectedLogs.value.map(log => log.device_id))]\n        return `选中日志包含不同的设备: ${deviceIds.join(', ')}`\n      }\n      return ''\n    })\n    \n    // 检查是否有未完成的日志（不包括失败状态的日志，因为失败状态也可以删除）\n    const hasIncompleteLogs = computed(() => {\n      return selectedLogs.value.some(log => \n        log.status !== 'parsed' && \n        log.status !== 'failed' && \n        log.status !== 'decrypt_failed' && \n        log.status !== 'parse_failed' && \n        log.status !== 'file_error'\n      )\n    })\n    \n    // 获取未完成日志提示信息\n    const incompleteLogsMessage = computed(() => {\n      if (selectedLogs.value.length === 0) return ''\n      if (hasIncompleteLogs.value) {\n        const incompleteCount = selectedLogs.value.filter(log => \n          log.status !== 'parsed' && \n          log.status !== 'failed' && \n          log.status !== 'decrypt_failed' && \n          log.status !== 'parse_failed' && \n          log.status !== 'file_error'\n        ).length\n        return `选中的日志中有 ${incompleteCount} 个未完成解析，请等待解析完成后再操作`\n      }\n      return ''\n    })\n    \n    const canBatchDelete = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canDeleteLog(log)) &&\n             selectedLogs.value.every(log => \n               log.status === 'parsed' || \n               log.status === 'decrypt_failed' || \n               log.status === 'parse_failed' ||\n               log.status === 'file_error' ||\n               log.status === 'failed'\n             )\n    })\n    \n    // 检查是否可以删除日志\n    const canDeleteLog = (log) => {\n      \n      // 管理员可以删除任何日志\n      if (userRole.value === 1) return true\n      // 专家可以删除任何日志\n      if (userRole.value === 2) return true\n      // 普通用户只能删除自己上传的日志\n      if (userRole.value === 3) {\n        return log.uploader_id === userId.value\n      }\n      return false\n    }\n    \n    // 方法\n    const loadLogs = async () => {\n      try {\n        loading.value = true\n        const timeParams = buildTimeParams()\n        await store.dispatch('logs/fetchLogs', {\n          page: currentPage.value,\n          limit: pageSize.value,\n          device_id: filterDeviceId.value || undefined,\n          ...timeParams\n        })\n      } catch (error) {\n        ElMessage.error('加载日志失败')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 加载设备分组数据\n    const loadDeviceGroups = async () => {\n      try {\n        await store.dispatch('logs/fetchDeviceGroups', {\n          only_own: onlyOwn.value || undefined\n        })\n      } catch (error) {\n        ElMessage.error('加载设备分组失败')\n      }\n    }\n    \n    // 打开设备详细日志抽屉\n    const openDeviceDrawer = (deviceId) => {\n      selectedDeviceId.value = deviceId\n      showDeviceDrawer.value = true\n    }\n    \n\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      loadLogs()\n    }\n    \n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n      loadLogs()\n    }\n\n    const buildTimeParams = () => {\n      const tp = (nameTimePrefix.value || '').trim()\n      if (tp && /^[0-9]{4}(?:[0-9]{2}){0,3}$/.test(tp)) {\n        return { time_prefix: tp, only_own: onlyOwn.value || undefined }\n      }\n      return { only_own: onlyOwn.value || undefined }\n    }\n\n    const applyNameFilter = () => {\n      currentPage.value = 1\n      showNameFilterPanel.value = false\n      loadLogs()\n    }\n    const resetNameFilter = () => {\n      nameTimePrefix.value = ''\n      applyNameFilter()\n    }\n\n    const applyDeviceFilter = () => {\n      currentPage.value = 1\n      showDeviceFilterPanel.value = false\n      loadLogs()\n    }\n    const resetDeviceFilter = () => {\n      filterDeviceId.value = ''\n      applyDeviceFilter()\n    }\n\n    const applyOnlyOwn = () => {\n      loadDeviceGroups()\n    }\n\n    const resetAllFilters = () => {\n      onlyOwn.value = false\n      loadDeviceGroups()\n    }\n\n    \n    const submitUpload = () => {\n      if (!decryptKey.value.trim()) {\n        ElMessage.error('请输入解密密钥或上传密钥文件')\n        return\n      }\n      \n      // 验证密钥格式\n      const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\n      if (!macRegex.test(decryptKey.value)) {\n        ElMessage.error('密钥格式不正确，应为MAC地址格式（如：00-01-05-77-6a-09）')\n        return\n      }\n      \n      // 检查设备编号是否输入\n      if (!deviceId.value.trim()) {\n        ElMessage.warning('请输入设备编号，或使用默认值0000-00')\n        return\n      }\n      \n      // 验证设备编号格式 - 允许数字+字母组合\n      if (deviceId.value && deviceId.value !== '0000-00') {\n        const deviceIdRegex = /^[0-9A-Za-z]+-[0-9A-Za-z]+$/\n        if (!deviceIdRegex.test(deviceId.value)) {\n          ElMessage.error('设备编号格式不正确，应为数字或字母组合格式（如：4371-01、ABC-12、123-XY）')\n          return\n        }\n      } else {\n        // 如果没有输入设备编号，弹窗提示\n        ElMessage.warning('请输入设备编号，或使用默认值0000-00')\n        return\n      }\n      \n      if (!uploadRef.value) {\n        ElMessage.error('上传组件未初始化')\n        return\n      }\n      \n      // 使用手动跟踪的文件列表\n      if (uploadFileList.value.length === 0) {\n        ElMessage.error('请选择要上传的文件')\n        return\n      }\n      \n      if (uploadFileList.value.length > 50) {\n        ElMessage.error('最多只能上传50个文件')\n        return\n      }\n      \n      const totalSize = uploadFileList.value.reduce((sum, f) => sum + (f.size || f.raw?.size || 0), 0)\n      if (totalSize / 1024 / 1024 > 200) {\n        ElMessage.error('总文件大小不能超过200MB')\n        return\n      }\n      \n      uploadRef.value.submit()\n      // 点击上传并解析后立即关闭弹窗\n      showUploadDialog.value = false\n      // 刷新一次日志列表，展示最新的“上传中/处理中”状态\n      loadLogs()\n    }\n    \n    const beforeUpload = (file) => {\n      const isMedbotFile = file.name.endsWith('.medbot')\n      const isLt200M = file.size / 1024 / 1024 < 200\n      \n      if (!isMedbotFile) {\n        ElMessage.error('只能上传 .medbot 文件!')\n        return false\n      }\n      if (!isLt200M) {\n        ElMessage.error('单个文件大小不能超过200MB!')\n        return false\n      }\n      \n      if (!decryptKey.value.trim()) {\n        ElMessage.error('请输入解密密钥或上传密钥文件!')\n        return false\n      }\n      \n      return true\n    }\n    \n    const beforeKeyUpload = (file) => {\n      const isTxtFile = file.name.endsWith('.txt')\n      const isSystemInfoFile = file.name === 'systemInfo.txt'\n      const isLt1M = file.size / 1024 / 1024 < 1\n      \n      if (!isTxtFile) {\n        ElMessage.error('密钥文件必须是 .txt 格式!')\n        return false\n      }\n      if (!isSystemInfoFile) {\n        ElMessage.error('密钥文件名必须是 systemInfo.txt!')\n        return false\n      }\n      if (!isLt1M) {\n        ElMessage.error('密钥文件大小不能超过1MB!')\n        return false\n      }\n      return false // 阻止自动上传\n    }\n    \n    const onKeyFileChange = (file) => {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        // 在空闲时验证，避免主线程长时间占用\n        scheduleUpdate(() => {\n          const content = (e.target.result || '').trim()\n          // 验证文件内容是否为MAC地址格式\n          const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\n          if (!macRegex.test(content)) {\n            ElMessage.error('密钥文件内容格式不正确，应为MAC地址格式（如：00-01-05-77-6a-09）')\n            return\n          }\n          decryptKey.value = content\n          keyFileName.value = file.name\n          keyError.value = '' // 清除错误提示\n          ElMessage.success('密钥文件读取成功')\n        })\n      }\n      reader.readAsText(file.raw)\n    }\n    \n    const clearUpload = () => {\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles()\n      }\n      if (keyUploadRef.value) {\n        keyUploadRef.value.clearFiles()\n      }\n      uploadFileList.value = []\n      decryptKey.value = ''\n      keyFileName.value = ''\n      deviceId.value = ''\n      keyError.value = ''\n      deviceIdError.value = ''\n      // 重置上传状态和进度\n      uploading.value = false\n      overallProgress.value = 0\n    }\n\n    // 进度格式化方法\n    const progressFormat = (percentage) => {\n      if (percentage < 30) {\n        return `文件上传中 ${percentage}%`\n      } else if (percentage < 60) {\n        return `解密处理中 ${percentage}%`\n      } else if (percentage < 100) {\n        return `解析处理中 ${percentage}%`\n      } else {\n        return `处理完成 ${percentage}%`\n      }\n    }\n\n    // 防止页面刷新导致解析中断\n    const preventRefresh = () => {\n      if (uploading.value) {\n        return '解析正在进行中，刷新页面可能导致解析失败。确定要离开吗？'\n      }\n    }\n\n    // 监听页面刷新事件\n    onMounted(() => {\n      window.addEventListener('beforeunload', preventRefresh)\n    })\n    \n    const onUploadProgress = (event, file, fileList) => {\n      // 上传进度处理，显示文件上传阶段（占总进度的30%）\n      const uploadProgress = Math.floor(event.percent * 0.3) // 上传占30%\n      overallProgress.value = uploadProgress\n      \n    }\n\n    const onUploadSuccess = (response, file, fileList) => {\n      console.log('上传成功:', response)\n      \n      // 更新手动跟踪的文件列表\n      updateUploadFileList(fileList)\n      \n      // 检查是否所有文件都上传完成\n      const allUploaded = fileList.length > 0 && fileList.every(f => f.status === 'success')\n      if (allUploaded) {\n        // 所有文件上传完成，开始解密和解析阶段\n        uploading.value = true\n        overallProgress.value = 30 // 上传完成，进度到30%\n        processingStatus.value = '文件已上传，等待处理...'\n        \n        // 开始状态监控\n        startStatusMonitoring()\n      }\n    }\n    \n    // 状态监控函数\n    const startStatusMonitoring = () => {\n      let checkCount = 0\n      const maxChecks = 30 // 最多检查30次（60秒）\n      \n      const checkStatus = async () => {\n        try {\n          await loadLogs()\n          checkCount++\n          \n          // 检查是否有新上传的日志\n          const newLogs = logs.value.filter(log => \n            log.status === 'uploading' || \n            log.status === 'decrypting' || \n            log.status === 'parsing'\n          )\n          \n          if (newLogs.length > 0) {\n            // 根据状态更新进度和显示\n            const uploadingCount = newLogs.filter(log => log.status === 'uploading').length\n            const decryptingCount = newLogs.filter(log => log.status === 'decrypting').length\n            const parsingCount = newLogs.filter(log => log.status === 'parsing').length\n            \n            if (uploadingCount > 0) {\n              overallProgress.value = 30\n              processingStatus.value = '文件上传中...'\n            } else if (decryptingCount > 0) {\n              overallProgress.value = 45\n              processingStatus.value = '解密中...'\n            } else if (parsingCount > 0) {\n              overallProgress.value = 75\n              processingStatus.value = '解析中...'\n            }\n            \n            // 继续监控\n            if (checkCount < maxChecks) {\n              setTimeout(checkStatus, 2000)\n            } else {\n              // 超时处理\n              uploading.value = false\n              overallProgress.value = 0\n              processingStatus.value = ''\n              ElMessage.warning('处理超时，请刷新页面查看最新状态')\n              clearUpload()\n            }\n          } else {\n            // 所有日志都处理完成\n            const allParsed = logs.value.every(log => log.status === 'parsed')\n            const hasFailed = logs.value.some(log => \n              log.status === 'failed' || \n              log.status === 'decrypt_failed' || \n              log.status === 'parse_failed' || \n              log.status === 'file_error'\n            )\n            \n            if (allParsed) {\n              overallProgress.value = 100\n              uploading.value = false\n              processingStatus.value = ''\n              showUploadDialog.value = false\n              clearUpload()\n            } else if (hasFailed) {\n              uploading.value = false\n              overallProgress.value = 0\n              processingStatus.value = ''\n              ElMessage.error('部分日志处理失败，请检查日志详情')\n              clearUpload()\n            } else {\n              // 继续监控\n              if (checkCount < maxChecks) {\n                setTimeout(checkStatus, 2000)\n              } else {\n                uploading.value = false\n                overallProgress.value = 0\n                processingStatus.value = ''\n                ElMessage.warning('处理超时，请刷新页面查看最新状态')\n                clearUpload()\n              }\n            }\n          }\n        } catch (error) {\n          uploading.value = false\n          overallProgress.value = 0\n          processingStatus.value = ''\n          ElMessage.error('检查状态失败')\n          clearUpload()\n        }\n      }\n      \n      // 开始检查\n      setTimeout(checkStatus, 1000)\n    }\n    \n    const onUploadError = (error) => {\n      ElMessage.error('上传失败: ' + (error.message || '未知错误'))\n    }\n    \n    const onExceed = (files, fileList) => {\n      ElMessage.error('最多只能上传50个文件!')\n    }\n    \n    const onFileChange = (file, fileList) => {\n      updateUploadFileList(fileList)\n    }\n    \n    const onFileRemove = (file, fileList) => {\n      updateUploadFileList(fileList)\n    }\n\n    // 删除单个文件\n    const removeFile = (index) => {\n      uploadFileList.value.splice(index, 1)\n    }\n\n    // 空闲时批量更新文件列表并预计算显示字段，减少同步阻塞\n    const scheduleUpdate = (fn) => {\n      const idle = window.requestIdleCallback || ((cb) => setTimeout(() => cb({ timeRemaining: () => 0 }), 1))\n      idle(() => fn())\n    }\n    const updateUploadFileList = (rawList) => {\n      const normalized = (rawList || []).map(f => {\n        const size = f.size || f.raw?.size || 0\n        const sizeText = formatFileSize(size)\n        return { ...f, sizeText }\n      })\n      scheduleUpdate(() => {\n        uploadFileList.value = normalized\n      })\n    }\n    \n    const handleParse = async (row) => {\n      try {\n        row.parsing = true\n        await store.dispatch('logs/parseLog', row.id)\n        ElMessage.success('解析成功')\n        loadLogs()\n      } catch (error) {\n        ElMessage.error('解析失败')\n      } finally {\n        row.parsing = false\n      }\n    }\n\n    const canReparse = computed(() => store.getters['auth/hasPermission']?.('log:reparse'))\n\n    const handleReparse = async (row) => {\n      try {\n        if (!canReparse.value) {\n          ElMessage.error('仅管理员可重新解析')\n          return\n        }\n        row.parsing = true\n        row.status = 'parsing'\n        await store.dispatch('logs/reparseLog', row.id)\n        ElMessage.success('重新解析完成')\n        await loadLogs()\n      } catch (error) {\n        const msg = error.response?.data?.message || error.message || '重新解析失败'\n        ElMessage.error(msg)\n      } finally {\n        row.parsing = false\n      }\n    }\n    \n    const handleDownload = async (row) => {\n      try {\n        const response = await store.dispatch('logs/downloadLog', row.id)\n        \n        // 创建下载链接\n        const blob = new Blob([response.data])\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = row.filename\n        link.click()\n        window.URL.revokeObjectURL(url)\n        \n        ElMessage.success('下载成功')\n      } catch (error) {\n        ElMessage.error('下载失败')\n      }\n    }\n    \n    // 跟踪删除中ID集合\n    const deletingIds = ref(new Set())\n\n    const isDeleting = (id) => deletingIds.value.has(id)\n\n    const handleDelete = async (row) => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个日志文件吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        deletingIds.value.add(row.id)\n        await nextTick()\n        await store.dispatch('logs/deleteLog', row.id)\n        ElMessage.success('删除成功')\n        await loadLogs()\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败')\n        }\n      } finally {\n        deletingIds.value.delete(row.id)\n      }\n    }\n\n    // 跳转到日志查看页面\n    const goToLogAnalysis = (row) => {\n      // 在新页面中打开日志查看，使用batch-analysis路由\n      const routeData = router.resolve(`/batch-analysis/${row.id}`)\n      window.open(routeData.href, '_blank')\n    }\n    \n    const formatFileSize = (bytes) => {\n      if (bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n    \n    const formatDate = (dateString) => {\n      if (!dateString) return '-'\n      return new Date(dateString).toLocaleString('zh-CN')\n    }\n    \n    // 行状态：根据需求映射显示文字\n    const getRowStatusType = (row) => {\n      if (deletingIds.value.has(row.id)) return 'warning'\n      const map = {\n        uploading: 'warning',\n        decrypting: 'warning',\n        parsing: 'warning',\n        parsed: 'success',\n        failed: 'danger',\n        decrypt_failed: 'danger',\n        parse_failed: 'danger',\n        file_error: 'danger'\n      }\n      return map[row.status] || 'info'\n    }\n    const getRowStatusText = (row) => {\n      if (deletingIds.value.has(row.id)) return '删除中'\n      \n      // 根据状态返回对应的文本\n      const map = {\n        uploading: '日志上传中',\n        decrypting: '解密中',\n        parsing: '解析中',\n        parsed: '完成',\n        decrypt_failed: '解密失败',\n        parse_failed: '解析失败',\n        file_error: '文件错误',\n        failed: '处理失败'\n      }\n      \n      return map[row.status] || (row.status || '-')\n    }\n    \n\n    \n\n    \n        // 批量操作相关方法\n    const handleSelectionChange = (selection) => {\n      selectedLogs.value = selection\n      // 保存选中的日志到sessionStorage，供手术统计页面使用\n      try {\n        sessionStorage.setItem('selectedLogs', JSON.stringify(selection))\n      } catch (error) {\n        console.warn('保存选中日志到sessionStorage失败:', error)\n      }\n    }\n    \n    const clearSelection = () => {\n      selectedLogs.value = []\n    }\n    \n    // 批量查看\n    const handleBatchAnalyze = () => {\n      const logIds = selectedLogs.value.map(log => log.id).join(',')\n      // 在新页面中打开批量查看\n      const routeData = router.resolve(`/batch-analysis/${logIds}`)\n      window.open(routeData.href, '_blank')\n    }\n    \n    // 批量下载\n    const handleBatchDownload = async () => {\n      try {\n        ElMessage.info('正在打包文件，请稍候...')\n        \n        const logIds = selectedLogs.value.map(log => log.id)\n        const response = await store.dispatch('logs/batchDownloadLogs', logIds)\n        \n        // 创建下载链接\n        const blob = new Blob([response.data])\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        \n        // 生成ZIP文件名\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-')\n        link.download = `logs_batch_${timestamp}.zip`\n        \n        link.click()\n        window.URL.revokeObjectURL(url)\n        \n        ElMessage.success('批量下载完成')\n      } catch (error) {\n        console.error('批量下载失败:', error)\n        const errorMessage = error.response?.data?.message || error.message || '批量下载失败'\n        ElMessage.error(errorMessage)\n      }\n    }\n    \n    // 批量删除\n    const handleBatchDelete = async () => {\n      try {\n        // 检查是否有未完成的日志\n        if (hasIncompleteLogs.value) {\n          ElMessage.warning('请等待所有选中的日志解析完成后再进行删除操作')\n          return\n        }\n        \n        await ElMessageBox.confirm(\n          `确定要删除选中的 ${selectedLogs.value.length} 个日志文件吗？此操作不可恢复！`, \n          '批量删除确认', \n          {\n            confirmButtonText: '确定删除',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        )\n        \n        // 保存选中的日志数据，避免在验证过程中被清空\n        const selectedLogsData = [...selectedLogs.value]\n        const logIds = selectedLogsData.map(log => parseInt(log.id)).filter(id => !isNaN(id))\n        \n        if (logIds.length === 0) {\n          ElMessage.error('选中的日志ID格式不正确')\n          return\n        }\n        \n        // 将选中的日志ID添加到删除中状态\n        logIds.forEach(id => deletingIds.value.add(id))\n        await nextTick()\n        \n        // 执行批量删除\n        try {\n          await store.dispatch('logs/batchDeleteLogs', logIds)\n          // 清除删除中状态，因为任务已加入队列\n          logIds.forEach(id => deletingIds.value.delete(id))\n          loadLogs() // 重新加载日志列表\n          clearSelection() // 清空选择\n        } catch (apiError) {\n          console.error('批量删除失败:', apiError)\n          const errorMessage = apiError.response?.data?.message || apiError.message || '批量删除失败'\n          ElMessage.error(errorMessage)\n          // 删除失败时，清除删除中状态\n          logIds.forEach(id => deletingIds.value.delete(id))\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('批量删除错误:', error)\n          console.error('错误详情:', {\n            name: error.name,\n            message: error.message,\n            code: error.code,\n            response: error.response?.data,\n            status: error.response?.status,\n            statusText: error.response?.statusText,\n            config: {\n              url: error.config?.url,\n              method: error.config?.method,\n              data: error.config?.data\n            }\n          })\n          \n          let errorMessage = '批量删除失败'\n          if (error.response?.data?.message) {\n            errorMessage = error.response.data.message\n          } else if (error.message) {\n            errorMessage = error.message\n          }\n          \n          ElMessage.error(errorMessage)\n        }\n      }\n    }\n\n    // 批量重新解析（仅管理员）\n    const handleBatchReparse = async () => {\n      try {\n        if (!canReparse.value) {\n          ElMessage.error('仅管理员可批量重新解析')\n          return\n        }\n        if (!selectedLogs.value.length) {\n          ElMessage.warning('请先选择要重新解析的日志')\n          return\n        }\n        // 检查是否有未完成的日志\n        if (hasIncompleteLogs.value) {\n          ElMessage.warning('请等待所有选中的日志解析完成后再进行重新解析操作')\n          return\n        }\n        await ElMessageBox.confirm(\n          `确定对选中的 ${selectedLogs.value.length} 个日志重新解析释义吗？`,\n          '批量重新解析确认',\n          { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' }\n        )\n        const ids = selectedLogs.value.map(l => l.id)\n        // 乐观更新状态\n        selectedLogs.value.forEach(l => { l.status = 'parsing' })\n        await store.dispatch('logs/batchReparseLogs', ids)\n        await loadLogs()\n      } catch (error) {\n        if (error !== 'cancel') {\n          const msg = error.response?.data?.message || error.message || '批量重新解析失败'\n          ElMessage.error(msg)\n        }\n      }\n    }\n    \n\n    \n\n    \n    // 格式化时间戳\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    // 检查是否可以操作日志（完成状态或失败状态都可以操作）\n    const canOperate = (log) => {\n      return log.status === 'parsed' || \n             log.status === 'failed' || \n             log.status === 'decrypt_failed' || \n             log.status === 'parse_failed' || \n             log.status === 'file_error'\n    }\n    \n    // 检查是否可以查看日志（只有完成状态的文件可以查看）\n    const canView = (log) => {\n      return log.status === 'parsed'\n    }\n    \n    // 检查是否可以下载日志（只有完成状态的文件可以下载）\n    const canDownload = (log) => {\n      return log.status === 'parsed'\n    }\n    \n    // 检查是否可以重新解析（完成状态和解析失败的文件可以重新解析）\n    const canReparseLog = (log) => {\n      return log.status === 'parsed' || log.status === 'parse_failed'\n    }\n    \n\n    \n\n    \n    // 自动填充密钥\n    const autoFillKey = async () => {\n      try {\n        const response = await store.dispatch('logs/autoFillKey', deviceId.value)\n        if (response.data.key) {\n          decryptKey.value = response.data.key\n          ElMessage.success('已自动填充密钥')\n        } else {\n          ElMessage.warning('未找到该设备编号对应的密钥')\n        }\n      } catch (error) {\n        console.error('自动填充密钥错误:', error)\n        const errorMessage = error.response?.data?.message || error.message || '自动填充密钥失败'\n        ElMessage.error(errorMessage)\n      }\n    }\n\n    // 验证密钥格式\n    const validateKeyFormat = () => {\n      const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\n      if (decryptKey.value && !macRegex.test(decryptKey.value)) {\n        keyError.value = '请输入有效的MAC地址格式密钥 (如: 00-01-05-77-6a-09)'\n      } else {\n        keyError.value = ''\n      }\n    }\n\n    // 自动填充设备编号\n    const autoFillDeviceId = async () => {\n      try {\n        const response = await store.dispatch('logs/autoFillDeviceId', decryptKey.value)\n        if (response.data.device_id) {\n          deviceId.value = response.data.device_id\n          ElMessage.success('已自动填充设备编号')\n        } else {\n          ElMessage.warning('未找到该密钥对应的设备编号')\n        }\n      } catch (error) {\n        console.error('自动填充设备编号错误:', error)\n        const errorMessage = error.response?.data?.message || error.message || '自动填充设备编号失败'\n        ElMessage.error(errorMessage)\n      }\n    }\n\n    // 验证设备编号格式\n    const validateDeviceIdFormat = () => {\n      const deviceIdRegex = /^[0-9A-Za-z]+-[0-9A-Za-z]+$/\n      if (deviceId.value && !deviceIdRegex.test(deviceId.value)) {\n        deviceIdError.value = '请输入有效的设备编号格式 (如: 4371-01、ABC-12、123-XY)'\n      } else {\n        deviceIdError.value = ''\n      }\n    }\n    \n    // 生命周期\n    onMounted(() => {\n      loadDeviceGroups()\n    })\n    \n    return {\n      loading,\n      uploading,\n      showUploadDialog,\n      overallProgress,\n      processingStatus,\n      progressFormat,\n      uploadRef,\n      currentPage,\n      pageSize,\n      logs,\n      total,\n      uploadUrl,\n      uploadHeaders,\n      loadLogs,\n      handleSizeChange,\n      handleCurrentChange,\n      dateShortcuts,\n      beforeUpload,\n      submitUpload,\n      clearUpload,\n      onUploadSuccess,\n      onUploadError,\n      onExceed,\n      onFileChange,\n      onFileRemove,\n      removeFile,\n      handleParse,\n      handleDownload,\n      handleDelete,\n      handleReparse,\n      canReparse,\n      formatFileSize,\n      formatDate,\n      getRowStatusType,\n      getRowStatusText,\n      goToLogAnalysis,\n      isDeleting,\n      userRole,\n      decryptKey,\n      keyUploadRef,\n      keyFileName,\n      deviceId,\n      filterDeviceId,\n      uploadFileList,\n      beforeKeyUpload,\n      onKeyFileChange,\n      canDeleteLog,\n      canOperate,\n      canView,\n      canDownload,\n      canReparseLog,\n      keyError,\n      deviceIdError,\n      autoFillKey,\n      validateKeyFormat,\n      autoFillDeviceId,\n      validateDeviceIdFormat,\n      \n      // 批量操作相关\n      selectedLogs,\n      canBatchOperate,\n      canBatchView,\n      canBatchDownload,\n      canBatchReparse,\n      canBatchDelete,\n      isSameDevice,\n      deviceCheckMessage,\n      handleSelectionChange,\n      clearSelection,\n      handleBatchAnalyze,\n      handleBatchDownload,\n      handleBatchDelete,\n      handleBatchReparse,\n      // 列筛选\n      showNameFilterPanel,\n      showDeviceFilterPanel,\n      nameTimePrefix,\n      onlyOwn,\n      applyNameFilter,\n      resetNameFilter,\n      applyDeviceFilter,\n      resetDeviceFilter,\n      applyOnlyOwn,\n      resetAllFilters,\n      startStatusMonitoring,\n      \n      // 设备分组相关\n      deviceGroups,\n      deviceGroupsLoading,\n      showDeviceDrawer,\n      selectedDeviceId,\n      loadDeviceGroups,\n      openDeviceDrawer\n    }\n  }\n}\n</script>\n\n<style scoped>\n.logs-container {\n  height: 100%;\n}\n\n.upload-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.header-actions {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  min-width: 0;\n}\n\n.header-section {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.batch-section {\n  flex: 1 1 auto;\n  min-width: 240px;\n}\n\n.only-own-section,\n.reset-section,\n.refresh-section {\n  flex: 0 0 auto;\n}\n\n/* 统一按钮样式与对齐 */\n.only-own-section .el-button,\n.reset-section .el-button,\n.refresh-section .el-button {\n  height: 28px;\n  line-height: 26px;\n  padding: 0 12px;\n}\n\n.only-own-section .el-checkbox {\n  display: inline-flex;\n  align-items: center;\n  height: 28px;\n}\n\n.upload-actions {\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n}\n\n.key-input-section {\n  margin-top: 15px;\n}\n\n.key-input-row {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.key-separator {\n  color: #666;\n  font-size: 14px;\n}\n\n.key-file-info {\n  margin-top: 10px;\n}\n\n.key-error {\n  margin-top: 10px;\n}\n\n.device-input-section {\n  margin-top: 15px;\n}\n\n.device-input-row {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.device-error {\n  margin-top: 10px;\n}\n\n.list-card {\n  margin-bottom: 20px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.parsing-tip {\n  color: #e6a23c;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.parsing-tip .el-icon {\n  animation: rotating 2s linear infinite;\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.overall-progress {\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n}\n\n.progress-stages {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n  padding: 0 10px;\n}\n\n.stage {\n  font-size: 12px;\n  color: #909399;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n\n.stage.active {\n  color: #409eff;\n  background-color: #ecf5ff;\n  font-weight: 500;\n}\n\n.stage.completed {\n  color: #67c23a;\n  background-color: #f0f9ff;\n  font-weight: 500;\n}\n\n.processing-status {\n  margin-top: 10px;\n  text-align: center;\n}\n\n.processing-status .el-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.custom-file-list {\n  margin-top: 15px;\n  border: 1px solid #e4e7ed;\n  border-radius: 6px;\n  overflow: hidden;\n}\n\n.file-list-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: #f5f7fa;\n  border-bottom: 1px solid #e4e7ed;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.file-items {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.file-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  transition: background-color 0.2s;\n}\n\n.file-item:last-child {\n  border-bottom: none;\n}\n\n.file-item:hover {\n  background-color: #f5f7fa;\n}\n\n.file-item .el-icon {\n  margin-right: 8px;\n  color: #909399;\n}\n\n.file-name {\n  flex: 1;\n  margin-right: 10px;\n  font-size: 14px;\n  color: #303133;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.file-size {\n  margin-right: 10px;\n  font-size: 12px;\n  color: #909399;\n}\n\n.status-tip {\n  margin-top: 4px;\n  font-size: 11px;\n  color: #e6a23c;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n}\n\n.status-tip .el-icon {\n  font-size: 12px;\n}\n\n.status-progress {\n  margin-top: 4px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n}\n\n.status-progress .el-progress {\n  width: 60px;\n}\n\n/* 批量操作样式 */\n.batch-operations {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  min-width: 0;\n  flex: 1;\n}\n\n/* 搜索区域样式 */\n.search-section {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  flex-shrink: 0;\n  gap: 10px;\n}\n\n.search-input {\n  width: 200px;\n}\n\n.batch-actions {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px 12px;\n  background-color: #f0f9ff;\n  border: 1px solid #b3d8ff;\n  border-radius: 6px;\n  flex-wrap: wrap;\n  min-width: 0;\n}\n\n\n\n.info-icon {\n  color: #909399;\n  margin-left: 4px;\n  cursor: help;\n  font-size: 14px;\n}\n\n/* 响应式布局 */\n@media (max-width: 1024px) {\n  .header-actions {\n    gap: 15px;\n  }\n  \n  .batch-actions {\n    gap: 8px;\n  }\n  \n  .batch-actions .el-button {\n    font-size: 12px;\n    padding: 6px 10px;\n  }\n}\n\n@media (max-width: 768px) {\n  .card-header {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 15px;\n  }\n  \n  .header-actions {\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .search-section {\n    margin-left: 0;\n    justify-content: flex-start;\n  }\n  \n  .batch-actions {\n    justify-content: flex-start;\n  }\n  \n  .batch-actions .el-button {\n    flex: 1;\n    min-width: 120px;\n  }\n}\n\n@media (max-width: 480px) {\n  .batch-actions {\n    flex-direction: column;\n    gap: 8px;\n  }\n  \n  .batch-actions .el-button {\n    width: 100%;\n  }\n  \n  .search-section {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .search-section .search-input {\n    width: 100% !important;\n  }\n}\n\n</style> ","<template>\r\n  <el-drawer\r\n    v-model=\"visible\"\r\n    :title=\"`设备 ${deviceId} 详细日志`\"\r\n    direction=\"rtl\"\r\n    size=\"1200px\"\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <div class=\"device-log-drawer\">\r\n      <!-- 日志上传按钮 -->\r\n      <div class=\"upload-section\">\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"showUploadDialog = true\"\r\n        >\r\n          <el-icon><UploadFilled /></el-icon>\r\n          上传日志\r\n        </el-button>\r\n      </div>\r\n\r\n             <!-- 设备详细日志列表 -->\r\n       <div class=\"log-list-section\">\r\n         <!-- 批量操作和筛选区域 -->\r\n         <div class=\"filter-section\">\r\n           <!-- 批量操作组 -->\r\n           <div class=\"batch-actions\" v-if=\"selectedLogs && selectedLogs.length > 0\">\r\n             <el-button \r\n               type=\"primary\" \r\n               size=\"small\" \r\n               @click=\"handleBatchAnalyze\"\r\n               :disabled=\"!canBatchView || !isSameDevice\"\r\n               :title=\"incompleteLogsMessage || deviceCheckMessage\"\r\n             >\r\n               <el-icon><Monitor /></el-icon>\r\n               批量查看 ({{ selectedLogs.length }})\r\n             </el-button>\r\n             <el-button \r\n               type=\"success\" \r\n               size=\"small\" \r\n               @click=\"handleBatchDownload\"\r\n               :disabled=\"!canBatchDownload\"\r\n               :title=\"incompleteLogsMessage\"\r\n             >\r\n               <el-icon><Download /></el-icon>\r\n               批量下载 ({{ selectedLogs.length }})\r\n             </el-button>\r\n             <el-button \r\n               type=\"danger\" \r\n               size=\"small\" \r\n               @click=\"handleBatchDelete\"\r\n               :disabled=\"!canBatchDelete\"\r\n               :title=\"incompleteLogsMessage\"\r\n             >\r\n               <el-icon><Delete /></el-icon>\r\n               批量删除 ({{ selectedLogs.length }})\r\n             </el-button>\r\n             <el-button \r\n               type=\"warning\" \r\n               size=\"small\" \r\n               @click=\"handleBatchReparse\"\r\n               :disabled=\"selectedLogs.length === 0 || userRole !== 1 || !canBatchReparse\"\r\n               :title=\"incompleteLogsMessage\"\r\n               v-if=\"userRole === 1\"\r\n             >\r\n               <el-icon><Refresh /></el-icon>\r\n               批量重新解析 ({{ selectedLogs.length }})\r\n             </el-button>\r\n             <el-button \r\n               type=\"info\" \r\n               size=\"small\" \r\n               @click=\"clearSelection\"\r\n             >\r\n               取消选择\r\n             </el-button>\r\n           </div>\r\n\r\n           <!-- 筛选区域 -->\r\n           <div class=\"filter-controls\">\r\n             <!-- 仅看自己按钮 -->\r\n             <el-checkbox v-model=\"onlyOwn\" @change=\"applyOnlyOwn\" label=\"仅看自己\" />\r\n             \r\n             <!-- 重置按钮 -->\r\n             <el-button plain size=\"small\" @click=\"resetAllFilters\">重置</el-button>\r\n           </div>\r\n         </div>\r\n\r\n         <el-table\r\n           :data=\"deviceLogs\"\r\n           :loading=\"loading\"\r\n           style=\"width: 100%\"\r\n           v-loading=\"loading\"\r\n           @selection-change=\"handleSelectionChange\"\r\n         >\r\n          <el-table-column type=\"selection\" width=\"55\" />\r\n          <el-table-column prop=\"original_name\" label=\"日志文件名\" width=\"240\" />\r\n          <el-table-column prop=\"uploader_id\" label=\"上传用户ID\" width=\"100\" />\r\n          <el-table-column prop=\"upload_time\" label=\"上传时间\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              {{ formatDate(row.upload_time) }}\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <el-table-column label=\"状态\" width=\"120\" align=\"center\">\r\n            <template #default=\"{ row }\">\r\n              <el-tag :type=\"getRowStatusType(row)\" size=\"small\">\r\n                {{ getRowStatusText(row) }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n                     <el-table-column label=\"操作\" width=\"350\" fixed=\"right\">\r\n             <template #default=\"{ row }\">\r\n               <el-button \r\n                 size=\"small\" \r\n                 type=\"primary\"\r\n                 @click=\"goToLogAnalysis(row)\"\r\n                 :disabled=\"!canView(row)\"\r\n               >\r\n                 查看\r\n               </el-button>\r\n               \r\n               <el-button \r\n                 size=\"small\" \r\n                 type=\"info\"\r\n                 @click=\"goToLogAnalysis(row)\"\r\n                 :disabled=\"!canView(row)\"\r\n               >\r\n                 分析\r\n               </el-button>\r\n               \r\n               <el-button \r\n                 size=\"small\" \r\n                 type=\"success\"\r\n                 @click=\"handleDownload(row)\"\r\n                 :disabled=\"!canDownload(row)\"\r\n               >\r\n                 下载\r\n               </el-button>\r\n               \r\n               <el-button \r\n                 size=\"small\" \r\n                 type=\"danger\" \r\n                 @click=\"handleDelete(row)\"\r\n                 v-if=\"canDeleteLog(row)\"\r\n                 :disabled=\"!(row.status === 'parsed' || row.status === 'decrypt_failed' || row.status === 'parse_failed' || row.status === 'file_error' || row.status === 'failed')\"\r\n               >\r\n                 删除\r\n               </el-button>\r\n\r\n               <el-button \r\n                 size=\"small\" \r\n                 type=\"warning\"\r\n                 @click=\"handleReparse(row)\"\r\n                 v-if=\"canReparse\"\r\n                 :disabled=\"!canReparseLog(row) || row.parsing\"\r\n               >\r\n                 重新解析\r\n               </el-button>\r\n             </template>\r\n           </el-table-column>\r\n        </el-table>\r\n        \r\n        <!-- 分页 -->\r\n        <div class=\"pagination-wrapper\">\r\n          <el-pagination\r\n            :current-page=\"currentPage\"\r\n            :page-size=\"pageSize\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :total=\"total\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 上传日志弹窗 -->\r\n    <el-dialog v-model=\"showUploadDialog\" title=\"上传日志\" width=\"700px\" append-to-body>\r\n      <el-upload\r\n        ref=\"uploadRef\"\r\n        :action=\"uploadUrl\"\r\n        :headers=\"uploadHeaders\"\r\n        :before-upload=\"beforeUpload\"\r\n        :on-success=\"onUploadSuccess\"\r\n        :on-error=\"onUploadError\"\r\n        :on-exceed=\"onExceed\"\r\n        :on-change=\"onFileChange\"\r\n        :on-remove=\"onFileRemove\"\r\n        :on-progress=\"onUploadProgress\"\r\n        :auto-upload=\"false\"\r\n        :show-file-list=\"false\"\r\n        :multiple=\"true\"\r\n        :limit=\"50\"\r\n        accept=\".medbot\"\r\n        name=\"file\"\r\n        :disabled=\"uploading\"\r\n      >\r\n        <el-button type=\"primary\" :disabled=\"uploading\">\r\n          <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n          选择文件\r\n        </el-button>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            <div v-if=\"!uploading\">\r\n              支持上传 .medbot 文件，最多50个文件，总大小不超过200MB，上传后将自动解密并解析\r\n            </div>\r\n            <div v-else class=\"parsing-tip\">\r\n              <el-icon class=\"is-loading\"><Refresh /></el-icon>\r\n              文件上传中，上传完成后才能进行下一次上传操作\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n\r\n      <!-- 自定义文件列表 -->\r\n      <div v-if=\"uploadFileList && uploadFileList.length > 0\" class=\"custom-file-list\">\r\n        <div class=\"file-list-header\">\r\n          <span>已选择的文件 ({{ uploadFileList.length }})</span>\r\n          <el-button type=\"text\" size=\"small\" @click=\"clearUpload\" :disabled=\"uploading\">\r\n            清空\r\n          </el-button>\r\n        </div>\r\n        <div class=\"file-items\">\r\n          <div \r\n            v-for=\"(file, index) in uploadFileList\" \r\n            :key=\"index\" \r\n            class=\"file-item\"\r\n          >\r\n            <el-icon><Document /></el-icon>\r\n            <span class=\"file-name\">{{ file.name || file.originalname }}</span>\r\n            <span class=\"file-size\">{{ file.sizeText }}</span>\r\n            <el-button \r\n              type=\"text\" \r\n              size=\"small\" \r\n              @click=\"removeFile(index)\"\r\n              :disabled=\"uploading\"\r\n            >\r\n              <el-icon><Delete /></el-icon>\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 密钥输入区域 -->\r\n      <div class=\"key-input-section\">\r\n        <div class=\"key-input-row\">\r\n          <el-input\r\n            v-model=\"decryptKey\"\r\n            placeholder=\"请输入解密密钥（MAC地址格式，如：00-01-05-77-6a-09）\"\r\n            style=\"width: 300px;\"\r\n            clearable\r\n            @blur=\"validateKeyFormat\"\r\n          >\r\n            <template #prefix>\r\n              <el-icon><Key /></el-icon>\r\n            </template>\r\n          </el-input>\r\n          \r\n          <el-button \r\n            type=\"primary\" \r\n            plain \r\n            @click=\"autoFillDeviceId\"\r\n            :disabled=\"!decryptKey.trim()\"\r\n          >\r\n            自动填充设备编号\r\n          </el-button>\r\n          \r\n          <span class=\"key-separator\">或</span>\r\n          \r\n          <el-upload\r\n            ref=\"keyUploadRef\"\r\n            :auto-upload=\"false\"\r\n            :show-file-list=\"false\"\r\n            accept=\".txt\"\r\n            :before-upload=\"beforeKeyUpload\"\r\n            :on-change=\"onKeyFileChange\"\r\n          >\r\n            <el-button type=\"primary\" plain>\r\n              <el-icon><Upload /></el-icon>\r\n              上传密钥文件\r\n            </el-button>\r\n          </el-upload>\r\n        </div>\r\n        \r\n        <div v-if=\"keyFileName\" class=\"key-file-info\">\r\n          <el-tag type=\"success\" size=\"small\">\r\n            <el-icon><Document /></el-icon>\r\n            {{ keyFileName }}\r\n          </el-tag>\r\n        </div>\r\n        \r\n        <div v-if=\"keyError\" class=\"key-error\">\r\n          <el-tag type=\"danger\" size=\"small\">\r\n            {{ keyError }}\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 设备编号输入区域 -->\r\n      <div class=\"device-input-section\">\r\n        <div class=\"device-input-row\">\r\n          <el-input\r\n            v-model=\"deviceIdInput\"\r\n            :placeholder=\"`设备编号（格式：数字或字母组合，例：${props.deviceId}）`\"\r\n            style=\"width: 300px;\"\r\n            clearable\r\n            @blur=\"validateDeviceIdFormat\"\r\n          >\r\n            <template #prefix>\r\n              <el-icon><Monitor /></el-icon>\r\n            </template>\r\n          </el-input>\r\n          \r\n          <el-button \r\n            type=\"primary\" \r\n            plain \r\n            @click=\"autoFillKey\"\r\n            :disabled=\"!deviceIdInput.trim()\"\r\n          >\r\n            自动填充密钥\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div v-if=\"deviceIdError\" class=\"device-error\">\r\n          <el-tag type=\"danger\" size=\"small\">\r\n            {{ deviceIdError }}\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <div class=\"upload-actions\">\r\n          <el-button @click=\"showUploadDialog = false\" :disabled=\"uploading\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"submitUpload\" \r\n            :loading=\"uploading\"\r\n            :disabled=\"uploading || !decryptKey.trim() || uploadFileList.length === 0\"\r\n          >\r\n            {{ uploading ? '解析中...' : '上传并解析' }}\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </el-drawer>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, nextTick, watch } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Search, Monitor, Refresh, Upload, Key, Document, UploadFilled, Delete, Warning, InfoFilled, Filter, Download } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'DeviceLogDrawer',\r\n  props: {\r\n    modelValue: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    deviceId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['update:modelValue'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    \r\n    // 响应式数据\r\n    const loading = ref(false)\r\n    const uploading = ref(false)\r\n    const showUploadDialog = ref(false)\r\n    const uploadRef = ref(null)\r\n    const keyUploadRef = ref(null)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(20)\r\n    const decryptKey = ref('') // 密钥输入\r\n    const keyFileName = ref('') // 密钥文件名\r\n    const deviceIdInput = ref('') // 设备编号输入\r\n    const uploadFileList = ref([]) // 手动跟踪上传文件列表\r\n    const keyError = ref('') // 密钥格式错误提示\r\n    const deviceIdError = ref('') // 设备编号格式错误提示\r\n    \r\n    // 批量操作相关数据\r\n    const selectedLogs = ref([]) // 选中的日志\r\n    const onlyOwn = ref(false) // 仅看自己\r\n    \r\n    // 计算属性\r\n    const visible = computed({\r\n      get: () => props.modelValue,\r\n      set: (value) => emit('update:modelValue', value)\r\n    })\r\n    \r\n    const deviceLogs = computed(() => Array.isArray(store.getters['logs/logsList']) ? store.getters['logs/logsList'] : [])\r\n    const total = computed(() => store.getters['logs/totalCount'])\r\n    const uploadUrl = computed(() => '/api/logs/upload')\r\n    const uploadHeaders = computed(() => ({\r\n      Authorization: `Bearer ${store.state.auth.token}`,\r\n      'X-Decrypt-Key': decryptKey.value,\r\n      'X-Device-ID': deviceIdInput.value\r\n    }))\r\n    \r\n    // 权限相关计算属性\r\n    const userRole = computed(() => store.state.auth.user?.role_id)\r\n    const userId = computed(() => store.state.auth.user?.id)\r\n    const canReparse = computed(() => store.getters['auth/hasPermission']?.('log:reparse'))\r\n    \r\n    // 批量操作相关计算属性\r\n    const canBatchView = computed(() => {\r\n      return selectedLogs.value.length > 0 && \r\n             selectedLogs.value.every(log => canView(log)) &&\r\n             selectedLogs.value.every(log => log.status === 'parsed')\r\n    })\r\n    \r\n    const canBatchDownload = computed(() => {\r\n      return selectedLogs.value.length > 0 && \r\n             selectedLogs.value.every(log => canDownload(log)) &&\r\n             selectedLogs.value.every(log => log.status === 'parsed')\r\n    })\r\n    \r\n    const canBatchDelete = computed(() => {\r\n      return selectedLogs.value.length > 0 && \r\n             selectedLogs.value.every(log => canDeleteLog(log)) &&\r\n             selectedLogs.value.every(log => \r\n               log.status === 'parsed' || \r\n               log.status === 'decrypt_failed' || \r\n               log.status === 'parse_failed' ||\r\n               log.status === 'file_error' ||\r\n               log.status === 'failed'\r\n             )\r\n    })\r\n    \r\n    const canBatchReparse = computed(() => {\r\n      return selectedLogs.value.length > 0 && \r\n             selectedLogs.value.every(log => canReparseLog(log)) &&\r\n             selectedLogs.value.every(log => log.status === 'parsed' || log.status === 'parse_failed')\r\n    })\r\n    \r\n    const isSameDevice = computed(() => {\r\n      if (selectedLogs.value.length === 0) return true\r\n      const firstDeviceId = selectedLogs.value[0].device_id\r\n      return selectedLogs.value.every(log => log.device_id === firstDeviceId)\r\n    })\r\n    \r\n    const deviceCheckMessage = computed(() => {\r\n      if (selectedLogs.value.length === 0) return ''\r\n      if (!isSameDevice.value) {\r\n        const deviceIds = [...new Set(selectedLogs.value.map(log => log.device_id))]\r\n        return `选中日志包含不同的设备: ${deviceIds.join(', ')}`\r\n      }\r\n      return ''\r\n    })\r\n    \r\n    const hasIncompleteLogs = computed(() => {\r\n      return selectedLogs.value.some(log => \r\n        log.status !== 'parsed' && \r\n        log.status !== 'failed' && \r\n        log.status !== 'decrypt_failed' && \r\n        log.status !== 'parse_failed' && \r\n        log.status !== 'file_error'\r\n      )\r\n    })\r\n    \r\n    const incompleteLogsMessage = computed(() => {\r\n      if (selectedLogs.value.length === 0) return ''\r\n      if (hasIncompleteLogs.value) {\r\n        const incompleteCount = selectedLogs.value.filter(log => \r\n          log.status !== 'parsed' && \r\n          log.status !== 'failed' && \r\n          log.status !== 'decrypt_failed' && \r\n          log.status !== 'parse_failed' && \r\n          log.status !== 'file_error'\r\n        ).length\r\n        return `选中的日志中有 ${incompleteCount} 个未完成解析，请等待解析完成后再操作`\r\n      }\r\n      return ''\r\n    })\r\n    \r\n    // 方法\r\n    const loadDeviceLogs = async () => {\r\n      try {\r\n        loading.value = true\r\n        await store.dispatch('logs/fetchLogs', {\r\n          page: currentPage.value,\r\n          limit: pageSize.value,\r\n          device_id: props.deviceId,\r\n          only_own: onlyOwn.value || undefined\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('加载设备日志失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    const handleClose = () => {\r\n      emit('update:modelValue', false)\r\n    }\r\n    \r\n    const handleSizeChange = (size) => {\r\n      pageSize.value = size\r\n      currentPage.value = 1\r\n      loadDeviceLogs()\r\n    }\r\n    \r\n    const handleCurrentChange = (page) => {\r\n      currentPage.value = page\r\n      loadDeviceLogs()\r\n    }\r\n    \r\n    // 批量操作相关方法\r\n    const handleSelectionChange = (selection) => {\r\n      selectedLogs.value = selection\r\n    }\r\n    \r\n    const clearSelection = () => {\r\n      selectedLogs.value = []\r\n    }\r\n    \r\n    // 批量查看\r\n    const handleBatchAnalyze = () => {\r\n      const logIds = selectedLogs.value.map(log => log.id).join(',')\r\n      // 在新页面中打开批量查看\r\n      const routeData = router.resolve(`/batch-analysis/${logIds}`)\r\n      window.open(routeData.href, '_blank')\r\n    }\r\n    \r\n    // 批量下载\r\n    const handleBatchDownload = async () => {\r\n      try {\r\n        ElMessage.info('正在打包文件，请稍候...')\r\n        \r\n        const logIds = selectedLogs.value.map(log => log.id)\r\n        const response = await store.dispatch('logs/batchDownloadLogs', logIds)\r\n        \r\n        // 创建下载链接\r\n        const blob = new Blob([response.data])\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        \r\n        // 生成ZIP文件名\r\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-')\r\n        link.download = `logs_batch_${timestamp}.zip`\r\n        \r\n        link.click()\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        ElMessage.success('批量下载完成')\r\n      } catch (error) {\r\n        console.error('批量下载失败:', error)\r\n        const errorMessage = error.response?.data?.message || error.message || '批量下载失败'\r\n        ElMessage.error(errorMessage)\r\n      }\r\n    }\r\n    \r\n    // 批量删除\r\n    const handleBatchDelete = async () => {\r\n      try {\r\n        // 检查是否有未完成的日志\r\n        if (hasIncompleteLogs.value) {\r\n          ElMessage.warning('请等待所有选中的日志解析完成后再进行删除操作')\r\n          return\r\n        }\r\n        \r\n        await ElMessageBox.confirm(\r\n          `确定要删除选中的 ${selectedLogs.value.length} 个日志文件吗？此操作不可恢复！`, \r\n          '批量删除确认', \r\n          {\r\n            confirmButtonText: '确定删除',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }\r\n        )\r\n        \r\n        // 保存选中的日志数据，避免在验证过程中被清空\r\n        const selectedLogsData = [...selectedLogs.value]\r\n        const logIds = selectedLogsData.map(log => parseInt(log.id)).filter(id => !isNaN(id))\r\n        \r\n        if (logIds.length === 0) {\r\n          ElMessage.error('选中的日志ID格式不正确')\r\n          return\r\n        }\r\n        \r\n        // 执行批量删除\r\n        try {\r\n          await store.dispatch('logs/batchDeleteLogs', logIds)\r\n          loadDeviceLogs() // 重新加载日志列表\r\n          clearSelection() // 清空选择\r\n        } catch (apiError) {\r\n          console.error('批量删除失败:', apiError)\r\n          const errorMessage = apiError.response?.data?.message || apiError.message || '批量删除失败'\r\n          ElMessage.error(errorMessage)\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('批量删除错误:', error)\r\n          let errorMessage = '批量删除失败'\r\n          if (error.response?.data?.message) {\r\n            errorMessage = error.response.data.message\r\n          } else if (error.message) {\r\n            errorMessage = error.message\r\n          }\r\n          ElMessage.error(errorMessage)\r\n        }\r\n      }\r\n    }\r\n\r\n    // 批量重新解析（仅管理员）\r\n    const handleBatchReparse = async () => {\r\n      try {\r\n        if (!canReparse.value) {\r\n          ElMessage.error('仅管理员可批量重新解析')\r\n          return\r\n        }\r\n        if (!selectedLogs.value.length) {\r\n          ElMessage.warning('请先选择要重新解析的日志')\r\n          return\r\n        }\r\n        // 检查是否有未完成的日志\r\n        if (hasIncompleteLogs.value) {\r\n          ElMessage.warning('请等待所有选中的日志解析完成后再进行重新解析操作')\r\n          return\r\n        }\r\n        await ElMessageBox.confirm(\r\n          `确定对选中的 ${selectedLogs.value.length} 个日志重新解析释义吗？`,\r\n          '批量重新解析确认',\r\n          { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' }\r\n        )\r\n        const ids = selectedLogs.value.map(l => l.id)\r\n        // 乐观更新状态\r\n        selectedLogs.value.forEach(l => { l.status = 'parsing' })\r\n        await store.dispatch('logs/batchReparseLogs', ids)\r\n        await loadDeviceLogs()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          const msg = error.response?.data?.message || error.message || '批量重新解析失败'\r\n          ElMessage.error(msg)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 筛选相关方法\r\n    const applyOnlyOwn = () => {\r\n      currentPage.value = 1\r\n      loadDeviceLogs()\r\n    }\r\n    \r\n    const resetAllFilters = () => {\r\n      onlyOwn.value = false\r\n      currentPage.value = 1\r\n      loadDeviceLogs()\r\n    }\r\n    \r\n    // 上传相关方法\r\n    const submitUpload = () => {\r\n      if (!decryptKey.value.trim()) {\r\n        ElMessage.error('请输入解密密钥或上传密钥文件')\r\n        return\r\n      }\r\n      \r\n      // 验证密钥格式\r\n      const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\r\n      if (!macRegex.test(decryptKey.value)) {\r\n        ElMessage.error('密钥格式不正确，应为MAC地址格式（如：00-01-05-77-6a-09）')\r\n        return\r\n      }\r\n      \r\n      // 检查设备编号是否输入\r\n      if (!deviceIdInput.value.trim()) {\r\n        ElMessage.warning('请输入设备编号，或使用默认值0000-00')\r\n        return\r\n      }\r\n      \r\n      // 验证设备编号格式 - 允许数字+字母组合\r\n      if (deviceIdInput.value && deviceIdInput.value !== '0000-00') {\r\n        const deviceIdRegex = /^[0-9A-Za-z]+-[0-9A-Za-z]+$/\r\n        if (!deviceIdRegex.test(deviceIdInput.value)) {\r\n          ElMessage.error('设备编号格式不正确，应为数字或字母组合格式（如：4371-01、ABC-12、123-XY）')\r\n          return\r\n        }\r\n      } else {\r\n        // 如果没有输入设备编号，弹窗提示\r\n        ElMessage.warning('请输入设备编号，或使用默认值0000-00')\r\n        return\r\n      }\r\n      \r\n      if (!uploadRef.value) {\r\n        ElMessage.error('上传组件未初始化')\r\n        return\r\n      }\r\n      \r\n      // 使用手动跟踪的文件列表\r\n      if (uploadFileList.value.length === 0) {\r\n        ElMessage.error('请选择要上传的文件')\r\n        return\r\n      }\r\n      \r\n      if (uploadFileList.value.length > 50) {\r\n        ElMessage.error('最多只能上传50个文件')\r\n        return\r\n      }\r\n      \r\n      const totalSize = uploadFileList.value.reduce((sum, f) => sum + (f.size || f.raw?.size || 0), 0)\r\n      if (totalSize / 1024 / 1024 > 200) {\r\n        ElMessage.error('总文件大小不能超过200MB')\r\n        return\r\n      }\r\n      \r\n      uploadRef.value.submit()\r\n      // 点击上传并解析后立即关闭弹窗\r\n      showUploadDialog.value = false\r\n      // 刷新一次日志列表，展示最新的\"上传中/处理中\"状态\r\n      loadDeviceLogs()\r\n    }\r\n    \r\n    const beforeUpload = (file) => {\r\n      const isMedbotFile = file.name.endsWith('.medbot')\r\n      const isLt200M = file.size / 1024 / 1024 < 200\r\n      \r\n      if (!isMedbotFile) {\r\n        ElMessage.error('只能上传 .medbot 文件!')\r\n        return false\r\n      }\r\n      if (!isLt200M) {\r\n        ElMessage.error('单个文件大小不能超过200MB!')\r\n        return false\r\n      }\r\n      \r\n      if (!decryptKey.value.trim()) {\r\n        ElMessage.error('请输入解密密钥或上传密钥文件!')\r\n        return false\r\n      }\r\n      \r\n      return true\r\n    }\r\n    \r\n    const beforeKeyUpload = (file) => {\r\n      const isTxtFile = file.name.endsWith('.txt')\r\n      const isSystemInfoFile = file.name === 'systemInfo.txt'\r\n      const isLt1M = file.size / 1024 / 1024 < 1\r\n      \r\n      if (!isTxtFile) {\r\n        ElMessage.error('密钥文件必须是 .txt 格式!')\r\n        return false\r\n      }\r\n      if (!isSystemInfoFile) {\r\n        ElMessage.error('密钥文件名必须是 systemInfo.txt!')\r\n        return false\r\n      }\r\n      if (!isLt1M) {\r\n        ElMessage.error('密钥文件大小不能超过1MB!')\r\n        return false\r\n      }\r\n      return false // 阻止自动上传\r\n    }\r\n    \r\n    const onKeyFileChange = (file) => {\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        const content = (e.target.result || '').trim()\r\n        // 验证文件内容是否为MAC地址格式\r\n        const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\r\n        if (!macRegex.test(content)) {\r\n          ElMessage.error('密钥文件内容格式不正确，应为MAC地址格式（如：00-01-05-77-6a-09）')\r\n          return\r\n        }\r\n        decryptKey.value = content\r\n        keyFileName.value = file.name\r\n        keyError.value = '' // 清除错误提示\r\n        ElMessage.success('密钥文件读取成功')\r\n      }\r\n      reader.readAsText(file.raw)\r\n    }\r\n    \r\n    const clearUpload = () => {\r\n      if (uploadRef.value) {\r\n        uploadRef.value.clearFiles()\r\n      }\r\n      if (keyUploadRef.value) {\r\n        keyUploadRef.value.clearFiles()\r\n      }\r\n      uploadFileList.value = []\r\n      decryptKey.value = ''\r\n      keyFileName.value = ''\r\n      deviceIdInput.value = ''\r\n      keyError.value = ''\r\n      deviceIdError.value = ''\r\n      // 重置上传状态和进度\r\n      uploading.value = false\r\n    }\r\n    \r\n    const onUploadProgress = (event, file, fileList) => {\r\n      // 上传进度处理\r\n    }\r\n\r\n    const onUploadSuccess = (response, file, fileList) => {\r\n      console.log('上传成功:', response)\r\n      updateUploadFileList(fileList)\r\n      \r\n      // 检查是否所有文件都上传完成\r\n      const allUploaded = fileList.length > 0 && fileList.every(f => f.status === 'success')\r\n      if (allUploaded) {\r\n        uploading.value = true\r\n        ElMessage.success('文件上传成功，正在处理...')\r\n        loadDeviceLogs()\r\n      }\r\n    }\r\n    \r\n    const onUploadError = (error) => {\r\n      ElMessage.error('上传失败: ' + (error.message || '未知错误'))\r\n    }\r\n    \r\n    const onExceed = (files, fileList) => {\r\n      ElMessage.error('最多只能上传50个文件!')\r\n    }\r\n    \r\n    const onFileChange = (file, fileList) => {\r\n      updateUploadFileList(fileList)\r\n    }\r\n    \r\n    const onFileRemove = (file, fileList) => {\r\n      updateUploadFileList(fileList)\r\n    }\r\n\r\n    // 删除单个文件\r\n    const removeFile = (index) => {\r\n      uploadFileList.value.splice(index, 1)\r\n    }\r\n\r\n    const updateUploadFileList = (rawList) => {\r\n      const normalized = (rawList || []).map(f => {\r\n        const size = f.size || f.raw?.size || 0\r\n        const sizeText = formatFileSize(size)\r\n        return { ...f, sizeText }\r\n      })\r\n      uploadFileList.value = normalized\r\n    }\r\n    \r\n    // 操作相关方法\r\n    const handleDownload = async (row) => {\r\n      try {\r\n        const response = await store.dispatch('logs/downloadLog', row.id)\r\n        \r\n        // 创建下载链接\r\n        const blob = new Blob([response.data])\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = row.filename\r\n        link.click()\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        ElMessage.success('下载成功')\r\n      } catch (error) {\r\n        ElMessage.error('下载失败')\r\n      }\r\n    }\r\n    \r\n    const handleDelete = async (row) => {\r\n      try {\r\n        await ElMessageBox.confirm('确定要删除这个日志文件吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        await store.dispatch('logs/deleteLog', row.id)\r\n        ElMessage.success('删除成功')\r\n        await loadDeviceLogs()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          ElMessage.error('删除失败')\r\n        }\r\n      }\r\n    }\r\n\r\n    // 跳转到日志查看页面\r\n    const goToLogAnalysis = (row) => {\r\n      // 在新页面中打开日志查看，使用batch-analysis路由\r\n      const routeData = router.resolve(`/batch-analysis/${row.id}`)\r\n      window.open(routeData.href, '_blank')\r\n    }\r\n    \r\n    const handleReparse = async (row) => {\r\n      try {\r\n        if (!canReparse.value) {\r\n          ElMessage.error('仅管理员可重新解析')\r\n          return\r\n        }\r\n        row.parsing = true\r\n        row.status = 'parsing'\r\n        await store.dispatch('logs/reparseLog', row.id)\r\n        ElMessage.success('重新解析完成')\r\n        await loadDeviceLogs()\r\n      } catch (error) {\r\n        const msg = error.response?.data?.message || error.message || '重新解析失败'\r\n        ElMessage.error(msg)\r\n      } finally {\r\n        row.parsing = false\r\n      }\r\n    }\r\n    \r\n    // 自动填充密钥\r\n    const autoFillKey = async () => {\r\n      try {\r\n        const response = await store.dispatch('logs/autoFillKey', deviceIdInput.value)\r\n        if (response.data.key) {\r\n          decryptKey.value = response.data.key\r\n          ElMessage.success('已自动填充密钥')\r\n        } else {\r\n          ElMessage.warning('未找到该设备编号对应的密钥')\r\n        }\r\n      } catch (error) {\r\n        console.error('自动填充密钥错误:', error)\r\n        const errorMessage = error.response?.data?.message || error.message || '自动填充密钥失败'\r\n        ElMessage.error(errorMessage)\r\n      }\r\n    }\r\n\r\n    // 验证密钥格式\r\n    const validateKeyFormat = () => {\r\n      const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\r\n      if (decryptKey.value && !macRegex.test(decryptKey.value)) {\r\n        keyError.value = '请输入有效的MAC地址格式密钥 (如: 00-01-05-77-6a-09)'\r\n      } else {\r\n        keyError.value = ''\r\n      }\r\n    }\r\n\r\n    // 自动填充设备编号\r\n    const autoFillDeviceId = async () => {\r\n      try {\r\n        const response = await store.dispatch('logs/autoFillDeviceId', decryptKey.value)\r\n        if (response.data.device_id) {\r\n          deviceIdInput.value = response.data.device_id\r\n          ElMessage.success('已自动填充设备编号')\r\n        } else {\r\n          ElMessage.warning('未找到该密钥对应的设备编号')\r\n        }\r\n      } catch (error) {\r\n        console.error('自动填充设备编号错误:', error)\r\n        const errorMessage = error.response?.data?.message || error.message || '自动填充设备编号失败'\r\n        ElMessage.error(errorMessage)\r\n      }\r\n    }\r\n\r\n    // 验证设备编号格式\r\n    const validateDeviceIdFormat = () => {\r\n      const deviceIdRegex = /^[0-9A-Za-z]+-[0-9A-Za-z]+$/\r\n      if (deviceIdInput.value && !deviceIdRegex.test(deviceIdInput.value)) {\r\n        deviceIdError.value = '请输入有效的设备编号格式 (如: 4371-01、ABC-12、123-XY)'\r\n      } else {\r\n        deviceIdError.value = ''\r\n      }\r\n    }\r\n    \r\n    // 权限检查方法\r\n    const canDeleteLog = (log) => {\r\n      // 管理员可以删除任何日志\r\n      if (userRole.value === 1) return true\r\n      // 专家可以删除任何日志\r\n      if (userRole.value === 2) return true\r\n      // 普通用户只能删除自己上传的日志\r\n      if (userRole.value === 3) {\r\n        return log.uploader_id === userId.value\r\n      }\r\n      return false\r\n    }\r\n    \r\n    // 检查是否可以查看日志（只有完成状态的文件可以查看）\r\n    const canView = (log) => {\r\n      return log.status === 'parsed'\r\n    }\r\n    \r\n    // 检查是否可以下载日志（只有完成状态的文件可以下载）\r\n    const canDownload = (log) => {\r\n      return log.status === 'parsed'\r\n    }\r\n    \r\n    // 检查是否可以重新解析（完成状态和解析失败的文件可以重新解析）\r\n    const canReparseLog = (log) => {\r\n      return log.status === 'parsed' || log.status === 'parse_failed'\r\n    }\r\n    \r\n    // 行状态：根据需求映射显示文字\r\n    const getRowStatusType = (row) => {\r\n      const map = {\r\n        uploading: 'warning',\r\n        decrypting: 'warning',\r\n        parsing: 'warning',\r\n        parsed: 'success',\r\n        failed: 'danger',\r\n        decrypt_failed: 'danger',\r\n        parse_failed: 'danger',\r\n        file_error: 'danger'\r\n      }\r\n      return map[row.status] || 'info'\r\n    }\r\n    \r\n    const getRowStatusText = (row) => {\r\n      // 根据状态返回对应的文本\r\n      const map = {\r\n        uploading: '日志上传中',\r\n        decrypting: '解密中',\r\n        parsing: '解析中',\r\n        parsed: '完成',\r\n        decrypt_failed: '解密失败',\r\n        parse_failed: '解析失败',\r\n        file_error: '文件错误',\r\n        failed: '处理失败'\r\n      }\r\n      \r\n      return map[row.status] || (row.status || '-')\r\n    }\r\n    \r\n    const formatFileSize = (bytes) => {\r\n      if (bytes === 0) return '0 B'\r\n      const k = 1024\r\n      const sizes = ['B', 'KB', 'MB', 'GB']\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n    }\r\n    \r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '-'\r\n      return new Date(dateString).toLocaleString('zh-CN')\r\n    }\r\n    \r\n    // 监听deviceId变化\r\n    watch(() => props.deviceId, (newDeviceId) => {\r\n      if (newDeviceId) {\r\n        deviceIdInput.value = newDeviceId\r\n        loadDeviceLogs()\r\n      }\r\n    })\r\n    \r\n    // 生命周期\r\n    onMounted(() => {\r\n      if (props.deviceId) {\r\n        deviceIdInput.value = props.deviceId\r\n        loadDeviceLogs()\r\n      }\r\n    })\r\n    \r\n         return {\r\n       loading,\r\n       uploading,\r\n       showUploadDialog,\r\n       uploadRef,\r\n       currentPage,\r\n       pageSize,\r\n       deviceLogs,\r\n       total,\r\n       uploadUrl,\r\n       uploadHeaders,\r\n       loadDeviceLogs,\r\n       handleClose,\r\n       handleSizeChange,\r\n       handleCurrentChange,\r\n       submitUpload,\r\n       beforeUpload,\r\n       clearUpload,\r\n       onUploadSuccess,\r\n       onUploadError,\r\n       onExceed,\r\n       onFileChange,\r\n       onFileRemove,\r\n       removeFile,\r\n       handleDownload,\r\n       handleDelete,\r\n       goToLogAnalysis,\r\n       handleReparse,\r\n       canReparse,\r\n       canDeleteLog,\r\n       canView,\r\n       canDownload,\r\n       canReparseLog,\r\n       getRowStatusType,\r\n       getRowStatusText,\r\n       formatFileSize,\r\n       formatDate,\r\n       decryptKey,\r\n       keyUploadRef,\r\n       keyFileName,\r\n       deviceIdInput,\r\n       uploadFileList,\r\n       beforeKeyUpload,\r\n       onKeyFileChange,\r\n       keyError,\r\n       deviceIdError,\r\n       autoFillKey,\r\n       validateKeyFormat,\r\n       autoFillDeviceId,\r\n       validateDeviceIdFormat,\r\n       \r\n       // 批量操作相关\r\n       selectedLogs,\r\n       canBatchView,\r\n       canBatchDownload,\r\n       canBatchReparse,\r\n       canBatchDelete,\r\n       isSameDevice,\r\n       deviceCheckMessage,\r\n       handleSelectionChange,\r\n       clearSelection,\r\n       handleBatchAnalyze,\r\n       handleBatchDownload,\r\n       handleBatchDelete,\r\n       handleBatchReparse,\r\n       \r\n       // 筛选相关\r\n       onlyOwn,\r\n       applyOnlyOwn,\r\n       resetAllFilters\r\n     }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.device-log-drawer {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.upload-section {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 6px;\r\n}\r\n\r\n.log-list-section {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.pagination-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.parsing-tip {\r\n  color: #e6a23c;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.parsing-tip .el-icon {\r\n  animation: rotating 2s linear infinite;\r\n}\r\n\r\n@keyframes rotating {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.custom-file-list {\r\n  margin-top: 15px;\r\n  border: 1px solid #e4e7ed;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n}\r\n\r\n.file-list-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  background-color: #f5f7fa;\r\n  border-bottom: 1px solid #e4e7ed;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.file-items {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.file-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 15px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.file-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.file-item:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.file-item .el-icon {\r\n  margin-right: 8px;\r\n  color: #909399;\r\n}\r\n\r\n.file-name {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n  color: #303133;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.file-size {\r\n  margin-right: 10px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.key-input-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.key-input-row {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.key-separator {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.key-file-info {\r\n  margin-top: 10px;\r\n}\r\n\r\n.key-error {\r\n  margin-top: 10px;\r\n}\r\n\r\n.device-input-section {\r\n  margin-top: 15px;\r\n}\r\n\r\n.device-input-row {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n .device-error {\r\n   margin-top: 10px;\r\n }\r\n \r\n .filter-section {\r\n   margin-bottom: 20px;\r\n   padding: 15px;\r\n   background-color: #f8f9fa;\r\n   border-radius: 6px;\r\n   border: 1px solid #e9ecef;\r\n }\r\n \r\n .batch-actions {\r\n   display: flex;\r\n   align-items: center;\r\n   gap: 10px;\r\n   padding: 8px 12px;\r\n   background-color: #f0f9ff;\r\n   border: 1px solid #b3d8ff;\r\n   border-radius: 6px;\r\n   flex-wrap: wrap;\r\n   margin-bottom: 15px;\r\n }\r\n \r\n .filter-controls {\r\n   display: flex;\r\n   align-items: center;\r\n   gap: 15px;\r\n   justify-content: space-between;\r\n }\r\n \r\n .filter-controls .el-checkbox {\r\n   display: inline-flex;\r\n   align-items: center;\r\n }\r\n \r\n .filter-controls .el-button {\r\n   height: 28px;\r\n   line-height: 26px;\r\n   padding: 0 12px;\r\n }\r\n</style>\r\n","import { render } from \"./DeviceLogDrawer.vue?vue&type=template&id=1d125038&scoped=true\"\nimport script from \"./DeviceLogDrawer.vue?vue&type=script&lang=js\"\nexport * from \"./DeviceLogDrawer.vue?vue&type=script&lang=js\"\n\nimport \"./DeviceLogDrawer.vue?vue&type=style&index=0&id=1d125038&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1d125038\"]])\n\nexport default __exports__","import { render } from \"./Logs.vue?vue&type=template&id=65523978&scoped=true\"\nimport script from \"./Logs.vue?vue&type=script&lang=js\"\nexport * from \"./Logs.vue?vue&type=script&lang=js\"\n\nimport \"./Logs.vue?vue&type=style&index=0&id=65523978&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65523978\"]])\n\nexport default __exports__"],"names":["class","header","type","showUploadDialog","onlyOwn","applyOnlyOwn","label","plain","size","resetAllFilters","loadDeviceGroups","data","deviceGroups","loading","deviceGroupsLoading","style","prop","width","default","row","openDeviceDrawer","device_id","hospital","align","formatDate","latest_upload_time","fixed","showDeviceDrawer","$event","selectedDeviceId","title","footer","disabled","uploading","submitUpload","decryptKey","trim","uploadFileList","length","ref","action","uploadUrl","headers","uploadHeaders","beforeUpload","onUploadSuccess","onUploadError","onExceed","onFileChange","onFileRemove","onUploadProgress","multiple","limit","accept","name","tip","clearUpload","file","index","key","originalname","sizeText","removeFile","placeholder","clearable","validateKeyFormat","prefix","autoFillDeviceId","beforeKeyUpload","onKeyFileChange","keyFileName","keyError","deviceId","validateDeviceIdFormat","autoFillKey","deviceIdError","showEntriesDialog","logEntries","visible","direction","handleClose","selectedLogs","handleBatchAnalyze","canBatchView","isSameDevice","incompleteLogsMessage","deviceCheckMessage","handleBatchDownload","canBatchDownload","handleBatchDelete","canBatchDelete","userRole","handleBatchReparse","canBatchReparse","clearSelection","deviceLogs","handleSelectionChange","upload_time","getRowStatusType","getRowStatusText","goToLogAnalysis","canView","handleDownload","canDownload","canDeleteLog","handleDelete","status","handleReparse","canReparseLog","parsing","currentPage","pageSize","total","layout","handleSizeChange","handleCurrentChange","deviceIdInput","props","modelValue","Boolean","String","required","emits","setup","emit","store","router","uploadRef","keyUploadRef","get","set","value","Array","isArray","getters","Authorization","state","auth","token","user","role_id","userId","id","canReparse","every","log","firstDeviceId","deviceIds","Set","map","join","hasIncompleteLogs","some","loadDeviceLogs","incompleteCount","filter","async","dispatch","page","only_own","undefined","error","selection","logIds","routeData","resolve","window","open","href","info","response","blob","Blob","url","URL","createObjectURL","link","document","createElement","timestamp","Date","toISOString","replace","download","click","revokeObjectURL","success","console","errorMessage","message","warning","confirm","confirmButtonText","cancelButtonText","selectedLogsData","parseInt","isNaN","apiError","ids","l","forEach","msg","macRegex","test","deviceIdRegex","totalSize","reduce","sum","f","raw","submit","isMedbotFile","endsWith","isLt200M","isTxtFile","isSystemInfoFile","isLt1M","reader","FileReader","onload","e","content","target","result","readAsText","clearFiles","fileList","updateUploadFileList","allUploaded","files","splice","rawList","normalized","formatFileSize","filename","uploader_id","decrypting","parsed","failed","decrypt_failed","parse_failed","file_error","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","dateString","toLocaleString","newDeviceId","__exports__","components","DeviceLogDrawer","overallProgress","processingStatus","showNameFilterPanel","showDeviceFilterPanel","nameTimePrefix","dateShortcuts","text","start","getFullYear","end","now","getMonth","getDate","filterDeviceId","logs","canBatchOperate","canOperate","loadLogs","timeParams","buildTimeParams","tp","time_prefix","applyNameFilter","resetNameFilter","applyDeviceFilter","resetDeviceFilter","scheduleUpdate","progressFormat","percentage","preventRefresh","addEventListener","startStatusMonitoring","checkCount","maxChecks","checkStatus","newLogs","uploadingCount","decryptingCount","parsingCount","setTimeout","allParsed","hasFailed","fn","idle","requestIdleCallback","cb","timeRemaining","handleParse","deletingIds","isDeleting","has","add","delete","sessionStorage","setItem","JSON","stringify","warn","code","statusText","config","method","render"],"sourceRoot":""}