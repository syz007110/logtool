{"version":3,"file":"js/270.8bfec413.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/Logs.vue","webpack://logtool-frontend/./src/views/Logs.vue?e192"],"sourcesContent":["<template>\n  <div class=\"logs-container\">\n    <!-- 日志上传卡片 -->\n    <el-card class=\"upload-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>日志上传</span>\n        </div>\n      </template>\n      <div class=\"upload-actions\">\n        <el-button \n          type=\"primary\" \n          @click=\"showUploadDialog = true\"\n        >\n          <el-icon><UploadFilled /></el-icon>\n          上传日志\n        </el-button>\n      </div>\n    </el-card>\n    \n    <!-- 日志列表 -->\n    <el-card class=\"list-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>日志列表</span>\n          <div class=\"header-actions\">\n            <!-- 1) 批量操作组 -->\n            <div class=\"header-section batch-section\" v-if=\"selectedLogs && selectedLogs.length > 0\">\n              <div class=\"batch-actions\">\n                <el-button \n                  type=\"primary\" \n                  size=\"small\" \n                  @click=\"handleBatchAnalyze\"\n                  :disabled=\"!canBatchOperate || !isSameDevice\"\n                  :title=\"incompleteLogsMessage || deviceCheckMessage\"\n                >\n                  <el-icon><Monitor /></el-icon>\n                  批量分析 ({{ selectedLogs.length }})\n                </el-button>\n                <el-button \n                  type=\"success\" \n                  size=\"small\" \n                  @click=\"handleBatchDownload\"\n                  :disabled=\"!canBatchOperate\"\n                  :title=\"incompleteLogsMessage\"\n                >\n                  <el-icon><Download /></el-icon>\n                  批量下载 ({{ selectedLogs.length }})\n                </el-button>\n                <el-button \n                  type=\"danger\" \n                  size=\"small\" \n                  @click=\"handleBatchDelete\"\n                  :disabled=\"!canBatchDelete\"\n                  :title=\"incompleteLogsMessage\"\n                >\n                  <el-icon><Delete /></el-icon>\n                  批量删除 ({{ selectedLogs.length }})\n                </el-button>\n                <el-button \n                  type=\"warning\" \n                  size=\"small\" \n                  @click=\"handleBatchReparse\"\n                  :disabled=\"selectedLogs.length === 0 || userRole !== 1 || !canBatchOperate\"\n                  :title=\"incompleteLogsMessage\"\n                  v-if=\"userRole === 1\"\n                >\n                  <el-icon><Refresh /></el-icon>\n                  批量重新解析 ({{ selectedLogs.length }})\n                </el-button>\n                <el-tooltip \n                  content=\"普通用户只能删除自己上传的日志\" \n                  placement=\"top\" \n                  v-if=\"userRole === 3\"\n                >\n                  <el-icon class=\"info-icon\"><InfoFilled /></el-icon>\n                </el-tooltip>\n                <el-button \n                  type=\"info\" \n                  size=\"small\" \n                  @click=\"clearSelection\"\n                >\n                  取消选择\n                </el-button>\n              </div>\n            </div>\n\n            <!-- 2) 仅看自己按钮 -->\n            <div class=\"header-section only-own-section\">\n              <el-checkbox v-model=\"onlyOwn\" @change=\"applyOnlyOwn\" label=\"仅看自己\" />\n            </div>\n\n            <!-- 3) 重置按钮 -->\n            <div class=\"header-section reset-section\">\n              <el-button plain size=\"small\" @click=\"resetAllFilters\">重置</el-button>\n            </div>\n\n            <!-- 4) 刷新按钮 -->\n            <div class=\"header-section refresh-section\">\n              <el-button plain size=\"small\" @click=\"loadLogs\">\n                <el-icon><Refresh /></el-icon>\n                刷新\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </template>\n      \n      <el-table\n        :data=\"logs\"\n        :loading=\"loading\"\n        style=\"width: 100%\"\n        v-loading=\"loading\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\" />\n        <el-table-column prop=\"original_name\" label=\"原始文件名\" width=\"240\">\n          <template #header>\n            <div class=\"col-header\">\n              <span>原始文件名</span>\n              <el-popover\n                placement=\"bottom-start\"\n                width=\"260\"\n                v-model:visible=\"showNameFilterPanel\"\n                popper-class=\"custom-filter-panel\"\n              >\n                <div class=\"filter-panel\">\n                  <div class=\"filter-title\">时间前缀 (YYYY / YYYYMM / YYYYMMDD / YYYYMMDDHH)</div>\n                  <el-input\n                    v-model=\"nameTimePrefix\"\n                    placeholder=\"例如 2025081611\"\n                    clearable\n                    @keyup.enter=\"applyNameFilter\"\n                  >\n                    <template #prefix>\n                      <el-icon><Search /></el-icon>\n                    </template>\n                  </el-input>\n                  <div class=\"filter-actions\">\n                    <el-button size=\"small\" type=\"primary\" @click=\"applyNameFilter\">搜索</el-button>\n                    <el-button size=\"small\" @click=\"resetNameFilter\">重置</el-button>\n                  </div>\n                </div>\n                <template #reference>\n                  <el-icon :class=\"['filter-trigger', { active: !!nameTimePrefix }]\"><Filter /></el-icon>\n                </template>\n              </el-popover>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"device_id\" label=\"设备编号\" width=\"160\">\n          <template #header>\n            <div class=\"col-header\">\n              <span>设备编号</span>\n              <el-popover\n                placement=\"bottom-start\"\n                width=\"260\"\n                v-model:visible=\"showDeviceFilterPanel\"\n                popper-class=\"custom-filter-panel\"\n              >\n                <div class=\"filter-panel\">\n                  <div class=\"filter-title\">设备编号</div>\n                  <el-input\n                    v-model=\"filterDeviceId\"\n                    placeholder=\"例如 4371-01\"\n                    clearable\n                    @keyup.enter=\"applyDeviceFilter\"\n                  >\n                    <template #prefix>\n                      <el-icon><Search /></el-icon>\n                    </template>\n                  </el-input>\n                  <div class=\"filter-actions\">\n                    <el-button size=\"small\" type=\"primary\" @click=\"applyDeviceFilter\">搜索</el-button>\n                    <el-button size=\"small\" @click=\"resetDeviceFilter\">重置</el-button>\n                  </div>\n                </div>\n                <template #reference>\n                  <el-icon :class=\"['filter-trigger', { active: !!filterDeviceId }]\"><Filter /></el-icon>\n                </template>\n              </el-popover>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"uploader_id\" label=\"用户ID\" width=\"80\" />\n        <el-table-column prop=\"upload_time\" label=\"上传时间\" width=\"150\">\n          <template #default=\"{ row }\">\n            {{ formatDate(row.upload_time) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"状态\" width=\"120\" align=\"center\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getRowStatusType(row)\" size=\"small\">\n              {{ getRowStatusText(row) }}\n            </el-tag>\n            <!-- 显示处理进度 -->\n            <div v-if=\"row.status === 'uploading' || row.status === 'decrypting' || row.status === 'parsing'\" class=\"status-progress\">\n              <el-progress \n                :percentage=\"getStatusProgress(row)\" \n                :stroke-width=\"4\"\n                :show-text=\"false\"\n                :status=\"row.status === 'parsed' ? 'success' : ''\"\n              />\n            </div>\n            <div v-if=\"!canOperate(row)\" class=\"status-tip\">\n              <el-icon><Warning /></el-icon>\n              <span>{{ isDeleting(row.id) ? '删除中，请稍候' : '处理中，请稍候' }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"操作\" width=\"300\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button \n              size=\"small\" \n              type=\"primary\"\n              @click=\"goToLogAnalysis(row)\"\n              :disabled=\"!canOperate(row)\"\n            >\n              分析\n            </el-button>\n            \n            <el-button \n              size=\"small\" \n              type=\"success\"\n              @click=\"handleDownload(row)\"\n              :disabled=\"!canOperate(row)\"\n            >\n              下载\n            </el-button>\n            \n            <el-button \n              size=\"small\" \n              type=\"danger\" \n              @click=\"handleDelete(row)\"\n              v-if=\"canDeleteLog(row)\"\n              :disabled=\"!canOperate(row)\"\n            >\n              删除\n            </el-button>\n\n            <el-button \n              size=\"small\" \n              type=\"warning\"\n              @click=\"handleReparse(row)\"\n              v-if=\"canReparse\"\n              :disabled=\"!canOperate(row) || row.parsing\"\n            >\n              重新解析\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页 -->\n      <div class=\"pagination-wrapper\">\n        <el-pagination\n          :current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total=\"total\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 上传日志弹窗 -->\n    <el-dialog v-model=\"showUploadDialog\" title=\"上传日志\" width=\"700px\" append-to-body>\n\n      <el-upload\n        ref=\"uploadRef\"\n        :action=\"uploadUrl\"\n        :headers=\"uploadHeaders\"\n        :before-upload=\"beforeUpload\"\n        :on-success=\"onUploadSuccess\"\n        :on-error=\"onUploadError\"\n        :on-exceed=\"onExceed\"\n        :on-change=\"onFileChange\"\n        :on-remove=\"onFileRemove\"\n        :on-progress=\"onUploadProgress\"\n        :auto-upload=\"false\"\n        :show-file-list=\"false\"\n        :multiple=\"true\"\n        :limit=\"50\"\n        accept=\".medbot\"\n        name=\"file\"\n        :disabled=\"uploading\"\n      >\n        <el-button type=\"primary\" :disabled=\"uploading\">\n          <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n          选择文件\n        </el-button>\n        <template #tip>\n          <div class=\"el-upload__tip\">\n            <div v-if=\"!uploading\">\n              支持上传 .medbot 文件，最多50个文件，总大小不超过200MB，上传后将自动解密并解析\n            </div>\n            <div v-else class=\"parsing-tip\">\n              <el-icon class=\"is-loading\"><Refresh /></el-icon>\n              正在解析中，请勿刷新页面...\n            </div>\n          </div>\n        </template>\n      </el-upload>\n\n      <!-- 自定义文件列表 -->\n      <div v-if=\"uploadFileList && uploadFileList.length > 0\" class=\"custom-file-list\">\n        <div class=\"file-list-header\">\n          <span>已选择的文件 ({{ uploadFileList.length }})</span>\n          <el-button type=\"text\" size=\"small\" @click=\"clearUpload\" :disabled=\"uploading\">\n            清空\n          </el-button>\n        </div>\n        <div class=\"file-items\">\n          <div \n            v-for=\"(file, index) in uploadFileList\" \n            :key=\"index\" \n            class=\"file-item\"\n          >\n            <el-icon><Document /></el-icon>\n            <span class=\"file-name\">{{ file.name || file.originalname }}</span>\n            <span class=\"file-size\">{{ file.sizeText }}</span>\n            <el-button \n              type=\"text\" \n              size=\"small\" \n              @click=\"removeFile(index)\"\n              :disabled=\"uploading\"\n            >\n              <el-icon><Delete /></el-icon>\n            </el-button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 密钥输入区域 -->\n      <div class=\"key-input-section\">\n        <div class=\"key-input-row\">\n          <el-input\n            v-model=\"decryptKey\"\n            placeholder=\"请输入解密密钥（MAC地址格式，如：00-01-05-77-6a-09）\"\n            style=\"width: 300px;\"\n            clearable\n            @blur=\"validateKeyFormat\"\n          >\n            <template #prefix>\n              <el-icon><Key /></el-icon>\n            </template>\n          </el-input>\n          \n          <el-button \n            type=\"primary\" \n            plain \n            @click=\"autoFillDeviceId\"\n            :disabled=\"!decryptKey.trim()\"\n          >\n            自动填充设备编号\n          </el-button>\n          \n          <span class=\"key-separator\">或</span>\n          \n          <el-upload\n            ref=\"keyUploadRef\"\n            :auto-upload=\"false\"\n            :show-file-list=\"false\"\n            accept=\".txt\"\n            :before-upload=\"beforeKeyUpload\"\n            :on-change=\"onKeyFileChange\"\n          >\n            <el-button type=\"primary\" plain>\n              <el-icon><Upload /></el-icon>\n              上传密钥文件\n            </el-button>\n          </el-upload>\n        </div>\n        \n        <div v-if=\"keyFileName\" class=\"key-file-info\">\n          <el-tag type=\"success\" size=\"small\">\n            <el-icon><Document /></el-icon>\n            {{ keyFileName }}\n          </el-tag>\n        </div>\n        \n        <div v-if=\"keyError\" class=\"key-error\">\n          <el-tag type=\"danger\" size=\"small\">\n            {{ keyError }}\n          </el-tag>\n        </div>\n      </div>\n\n      <!-- 设备编号输入区域 -->\n      <div class=\"device-input-section\">\n        <div class=\"device-input-row\">\n          <el-input\n            v-model=\"deviceId\"\n            placeholder=\"设备编号（格式：数字或字母组合，例：4371-01、ABC-12，默认为0000-00）\"\n            style=\"width: 300px;\"\n            clearable\n            @blur=\"validateDeviceIdFormat\"\n          >\n            <template #prefix>\n              <el-icon><Monitor /></el-icon>\n            </template>\n          </el-input>\n          \n          <el-button \n            type=\"primary\" \n            plain \n            @click=\"autoFillKey\"\n            :disabled=\"!deviceId.trim()\"\n          >\n            自动填充密钥\n          </el-button>\n        </div>\n        \n        <div v-if=\"deviceIdError\" class=\"device-error\">\n          <el-tag type=\"danger\" size=\"small\">\n            {{ deviceIdError }}\n          </el-tag>\n        </div>\n      </div>\n\n      <template #footer>\n        <div class=\"upload-actions\">\n          <el-button @click=\"showUploadDialog = false\" :disabled=\"uploading\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"submitUpload\" \n            :loading=\"uploading\"\n            :disabled=\"uploading || !decryptKey.trim() || uploadFileList.length === 0\"\n          >\n            {{ uploading ? '解析中...' : '上传并解析' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n\n    <!-- 日志分析弹窗 -->\n    <el-dialog v-model=\"showEntriesDialog\" title=\"日志分析\" width=\"900px\">\n      <el-table :data=\"logEntries\" style=\"width: 100%\">\n        <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" />\n        <el-table-column prop=\"error_code\" label=\"故障码\" width=\"100\" />\n        <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\n        <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\n        <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\n        <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\n        <el-table-column prop=\"explanation\" label=\"日志解释\" />\n      </el-table>\n    </el-dialog>\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { Search, Monitor, Refresh, Upload, Key, Document, UploadFilled, Delete, Warning, InfoFilled, Filter } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'Logs',\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    \n    // 响应式数据\n    const loading = ref(false)\n    const uploading = ref(false)\n    const showUploadDialog = ref(false)\n    const overallProgress = ref(0) // 总体进度\n    const processingStatus = ref('') // 处理状态\n    const uploadRef = ref(null)\n    const keyUploadRef = ref(null)\n    const currentPage = ref(1)\n    const pageSize = ref(20)\n    const showNameFilterPanel = ref(false)\n    const showDeviceFilterPanel = ref(false)\n    const nameTimePrefix = ref('')\n    const onlyOwn = ref(false)\n    const dateShortcuts = ref([\n      {\n        text: '本年',\n        value: () => {\n          const start = new Date(new Date().getFullYear(), 0, 1, 0, 0, 0)\n          const end = new Date(new Date().getFullYear(), 11, 31, 23, 59, 59)\n          return [start, end]\n        }\n      },\n      {\n        text: '本月',\n        value: () => {\n          const now = new Date()\n          const start = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0)\n          const end = new Date(now.getFullYear(), now.getMonth() + 1, 0, 23, 59, 59)\n          return [start, end]\n        }\n      },\n      {\n        text: '今天',\n        value: () => {\n          const now = new Date()\n          const start = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0)\n          const end = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59)\n          return [start, end]\n        }\n      }\n    ])\n    const decryptKey = ref('') // 密钥输入\n    const keyFileName = ref('') // 密钥文件名\n    const deviceId = ref('') // 设备编号\n    const filterDeviceId = ref('') // 筛选设备编号\n    const uploadFileList = ref([]) // 手动跟踪上传文件列表\n    const keyError = ref('') // 密钥格式错误提示\n    const deviceIdError = ref('') // 设备编号格式错误提示\n    \n    // 批量操作相关数据\n    const selectedLogs = ref([]) // 选中的日志\n    \n\n    \n    // 计算属性\n    const logs = computed(() => Array.isArray(store.getters['logs/logsList']) ? store.getters['logs/logsList'] : [])\n    const total = computed(() => store.getters['logs/totalCount'])\n    const uploadUrl = computed(() => '/api/logs/upload')\n    const uploadHeaders = computed(() => ({\n      Authorization: `Bearer ${store.state.auth.token}`,\n      'X-Decrypt-Key': decryptKey.value, // 添加密钥到请求头\n      'X-Device-ID': deviceId.value // 添加设备编号到请求头\n    }))\n    \n    // 权限相关计算属性\n    const userRole = computed(() => store.state.auth.user?.role_id)\n    const userId = computed(() => store.state.auth.user?.id)\n    \n    // 批量操作相关计算属性\n    const canBatchOperate = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canOperate(log)) &&\n             selectedLogs.value.every(log => log.status === 'parsed')\n    })\n    \n    // 检查选中的日志是否属于同一设备\n    const isSameDevice = computed(() => {\n      if (selectedLogs.value.length === 0) return true\n      const firstDeviceId = selectedLogs.value[0].device_id\n      return selectedLogs.value.every(log => log.device_id === firstDeviceId)\n    })\n    \n    // 获取设备检测提示信息\n    const deviceCheckMessage = computed(() => {\n      if (selectedLogs.value.length === 0) return ''\n      if (!isSameDevice.value) {\n        const deviceIds = [...new Set(selectedLogs.value.map(log => log.device_id))]\n        return `选中日志包含不同的设备: ${deviceIds.join(', ')}`\n      }\n      return ''\n    })\n    \n    // 检查是否有未完成的日志\n    const hasIncompleteLogs = computed(() => {\n      return selectedLogs.value.some(log => log.status !== 'parsed')\n    })\n    \n    // 获取未完成日志提示信息\n    const incompleteLogsMessage = computed(() => {\n      if (selectedLogs.value.length === 0) return ''\n      if (hasIncompleteLogs.value) {\n        const incompleteCount = selectedLogs.value.filter(log => log.status !== 'parsed').length\n        return `选中的日志中有 ${incompleteCount} 个未完成解析，请等待解析完成后再操作`\n      }\n      return ''\n    })\n    \n    const canBatchDelete = computed(() => {\n      return selectedLogs.value.length > 0 && \n             selectedLogs.value.every(log => canDeleteLog(log)) &&\n             selectedLogs.value.every(log => log.status === 'parsed')\n    })\n    \n    // 检查是否可以删除日志\n    const canDeleteLog = (log) => {\n      \n      // 管理员可以删除任何日志\n      if (userRole.value === 1) return true\n      // 专家可以删除任何日志\n      if (userRole.value === 2) return true\n      // 普通用户只能删除自己上传的日志\n      if (userRole.value === 3) {\n        return log.uploader_id === userId.value\n      }\n      return false\n    }\n    \n    // 方法\n    const loadLogs = async () => {\n      try {\n        loading.value = true\n        const timeParams = buildTimeParams()\n        await store.dispatch('logs/fetchLogs', {\n          page: currentPage.value,\n          limit: pageSize.value,\n          device_id: filterDeviceId.value || undefined,\n          ...timeParams\n        })\n      } catch (error) {\n        ElMessage.error('加载日志失败')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      loadLogs()\n    }\n    \n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n      loadLogs()\n    }\n\n    const buildTimeParams = () => {\n      const tp = (nameTimePrefix.value || '').trim()\n      if (tp && /^[0-9]{4}(?:[0-9]{2}){0,3}$/.test(tp)) {\n        return { time_prefix: tp, only_own: onlyOwn.value || undefined }\n      }\n      return { only_own: onlyOwn.value || undefined }\n    }\n\n    const applyNameFilter = () => {\n      currentPage.value = 1\n      showNameFilterPanel.value = false\n      loadLogs()\n    }\n    const resetNameFilter = () => {\n      nameTimePrefix.value = ''\n      applyNameFilter()\n    }\n\n    const applyDeviceFilter = () => {\n      currentPage.value = 1\n      showDeviceFilterPanel.value = false\n      loadLogs()\n    }\n    const resetDeviceFilter = () => {\n      filterDeviceId.value = ''\n      applyDeviceFilter()\n    }\n\n    const applyOnlyOwn = () => {\n      currentPage.value = 1\n      loadLogs()\n    }\n\n    const resetAllFilters = () => {\n      nameTimePrefix.value = ''\n      filterDeviceId.value = ''\n      onlyOwn.value = false\n      currentPage.value = 1\n      loadLogs()\n    }\n\n    \n    const submitUpload = () => {\n      if (!decryptKey.value.trim()) {\n        ElMessage.error('请输入解密密钥或上传密钥文件')\n        return\n      }\n      \n      // 验证密钥格式\n      const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\n      if (!macRegex.test(decryptKey.value)) {\n        ElMessage.error('密钥格式不正确，应为MAC地址格式（如：00-01-05-77-6a-09）')\n        return\n      }\n      \n      // 检查设备编号是否输入\n      if (!deviceId.value.trim()) {\n        ElMessage.warning('请输入设备编号，或使用默认值0000-00')\n        return\n      }\n      \n      // 验证设备编号格式 - 允许数字+字母组合\n      if (deviceId.value && deviceId.value !== '0000-00') {\n        const deviceIdRegex = /^[0-9A-Za-z]+-[0-9A-Za-z]+$/\n        if (!deviceIdRegex.test(deviceId.value)) {\n          ElMessage.error('设备编号格式不正确，应为数字或字母组合格式（如：4371-01、ABC-12、123-XY）')\n          return\n        }\n      } else {\n        // 如果没有输入设备编号，弹窗提示\n        ElMessage.warning('请输入设备编号，或使用默认值0000-00')\n        return\n      }\n      \n      if (!uploadRef.value) {\n        ElMessage.error('上传组件未初始化')\n        return\n      }\n      \n      // 使用手动跟踪的文件列表\n      if (uploadFileList.value.length === 0) {\n        ElMessage.error('请选择要上传的文件')\n        return\n      }\n      \n      if (uploadFileList.value.length > 50) {\n        ElMessage.error('最多只能上传50个文件')\n        return\n      }\n      \n      const totalSize = uploadFileList.value.reduce((sum, f) => sum + (f.size || f.raw?.size || 0), 0)\n      if (totalSize / 1024 / 1024 > 200) {\n        ElMessage.error('总文件大小不能超过200MB')\n        return\n      }\n      \n      uploadRef.value.submit()\n      // 点击上传并解析后立即关闭弹窗\n      showUploadDialog.value = false\n      // 刷新一次日志列表，展示最新的“上传中/处理中”状态\n      loadLogs()\n    }\n    \n    const beforeUpload = (file) => {\n      const isMedbotFile = file.name.endsWith('.medbot')\n      const isLt200M = file.size / 1024 / 1024 < 200\n      \n      if (!isMedbotFile) {\n        ElMessage.error('只能上传 .medbot 文件!')\n        return false\n      }\n      if (!isLt200M) {\n        ElMessage.error('单个文件大小不能超过200MB!')\n        return false\n      }\n      \n      if (!decryptKey.value.trim()) {\n        ElMessage.error('请输入解密密钥或上传密钥文件!')\n        return false\n      }\n      \n      return true\n    }\n    \n    const beforeKeyUpload = (file) => {\n      const isTxtFile = file.name.endsWith('.txt')\n      const isSystemInfoFile = file.name === 'systemInfo.txt'\n      const isLt1M = file.size / 1024 / 1024 < 1\n      \n      if (!isTxtFile) {\n        ElMessage.error('密钥文件必须是 .txt 格式!')\n        return false\n      }\n      if (!isSystemInfoFile) {\n        ElMessage.error('密钥文件名必须是 systemInfo.txt!')\n        return false\n      }\n      if (!isLt1M) {\n        ElMessage.error('密钥文件大小不能超过1MB!')\n        return false\n      }\n      return false // 阻止自动上传\n    }\n    \n    const onKeyFileChange = (file) => {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        // 在空闲时验证，避免主线程长时间占用\n        scheduleUpdate(() => {\n          const content = (e.target.result || '').trim()\n          // 验证文件内容是否为MAC地址格式\n          const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\n          if (!macRegex.test(content)) {\n            ElMessage.error('密钥文件内容格式不正确，应为MAC地址格式（如：00-01-05-77-6a-09）')\n            return\n          }\n          decryptKey.value = content\n          keyFileName.value = file.name\n          keyError.value = '' // 清除错误提示\n          ElMessage.success('密钥文件读取成功')\n        })\n      }\n      reader.readAsText(file.raw)\n    }\n    \n    const clearUpload = () => {\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles()\n      }\n      if (keyUploadRef.value) {\n        keyUploadRef.value.clearFiles()\n      }\n      uploadFileList.value = []\n      decryptKey.value = ''\n      keyFileName.value = ''\n      deviceId.value = ''\n      keyError.value = ''\n      deviceIdError.value = ''\n      // 重置上传状态和进度\n      uploading.value = false\n      overallProgress.value = 0\n    }\n\n    // 进度格式化方法\n    const progressFormat = (percentage) => {\n      if (percentage < 30) {\n        return `文件上传中 ${percentage}%`\n      } else if (percentage < 60) {\n        return `解密处理中 ${percentage}%`\n      } else if (percentage < 100) {\n        return `解析处理中 ${percentage}%`\n      } else {\n        return `处理完成 ${percentage}%`\n      }\n    }\n\n    // 防止页面刷新导致解析中断\n    const preventRefresh = () => {\n      if (uploading.value) {\n        return '解析正在进行中，刷新页面可能导致解析失败。确定要离开吗？'\n      }\n    }\n\n    // 监听页面刷新事件\n    onMounted(() => {\n      window.addEventListener('beforeunload', preventRefresh)\n    })\n    \n    const onUploadProgress = (event, file, fileList) => {\n      // 上传进度处理，显示文件上传阶段（占总进度的30%）\n      const uploadProgress = Math.floor(event.percent * 0.3) // 上传占30%\n      overallProgress.value = uploadProgress\n      \n    }\n\n    const onUploadSuccess = (response, file, fileList) => {\n      console.log('上传成功:', response)\n      \n      // 更新手动跟踪的文件列表\n      updateUploadFileList(fileList)\n      \n      // 检查是否所有文件都上传完成\n      const allUploaded = fileList.length > 0 && fileList.every(f => f.status === 'success')\n      if (allUploaded) {\n        // 所有文件上传完成，开始解密和解析阶段\n        uploading.value = true\n        overallProgress.value = 30 // 上传完成，进度到30%\n        processingStatus.value = '文件已上传，等待处理...'\n        \n        // 开始状态监控\n        startStatusMonitoring()\n      }\n    }\n    \n    // 状态监控函数\n    const startStatusMonitoring = () => {\n      let checkCount = 0\n      const maxChecks = 30 // 最多检查30次（60秒）\n      \n      const checkStatus = async () => {\n        try {\n          await loadLogs()\n          checkCount++\n          \n          // 检查是否有新上传的日志\n          const newLogs = logs.value.filter(log => \n            log.status === 'uploading' || \n            log.status === 'decrypting' || \n            log.status === 'parsing'\n          )\n          \n          if (newLogs.length > 0) {\n            // 根据状态更新进度和显示\n            const uploadingCount = newLogs.filter(log => log.status === 'uploading').length\n            const decryptingCount = newLogs.filter(log => log.status === 'decrypting').length\n            const parsingCount = newLogs.filter(log => log.status === 'parsing').length\n            \n            if (uploadingCount > 0) {\n              overallProgress.value = 30\n              processingStatus.value = '文件上传中...'\n            } else if (decryptingCount > 0) {\n              overallProgress.value = 45\n              processingStatus.value = '解密中...'\n            } else if (parsingCount > 0) {\n              overallProgress.value = 75\n              processingStatus.value = '解析中...'\n            }\n            \n            // 继续监控\n            if (checkCount < maxChecks) {\n              setTimeout(checkStatus, 2000)\n            } else {\n              // 超时处理\n              uploading.value = false\n              overallProgress.value = 0\n              processingStatus.value = ''\n              ElMessage.warning('处理超时，请刷新页面查看最新状态')\n              clearUpload()\n            }\n          } else {\n            // 所有日志都处理完成\n            const allParsed = logs.value.every(log => log.status === 'parsed')\n            const hasFailed = logs.value.some(log => log.status === 'failed')\n            \n            if (allParsed) {\n              overallProgress.value = 100\n              uploading.value = false\n              processingStatus.value = ''\n              const uploadedFiles = uploadFileList.value.map(f => f.name || f.originalname).join(', ')\n              ElMessage.success(`${uploadedFiles} 上传成功，解析完成`)\n              showUploadDialog.value = false\n              clearUpload()\n            } else if (hasFailed) {\n              uploading.value = false\n              overallProgress.value = 0\n              processingStatus.value = ''\n              ElMessage.error('部分日志解析失败，请检查日志详情')\n              clearUpload()\n            } else {\n              // 继续监控\n              if (checkCount < maxChecks) {\n                setTimeout(checkStatus, 2000)\n              } else {\n                uploading.value = false\n                overallProgress.value = 0\n                processingStatus.value = ''\n                ElMessage.warning('处理超时，请刷新页面查看最新状态')\n                clearUpload()\n              }\n            }\n          }\n        } catch (error) {\n          uploading.value = false\n          overallProgress.value = 0\n          processingStatus.value = ''\n          ElMessage.error('检查状态失败')\n          clearUpload()\n        }\n      }\n      \n      // 开始检查\n      setTimeout(checkStatus, 1000)\n    }\n    \n    const onUploadError = (error) => {\n      ElMessage.error('上传失败: ' + (error.message || '未知错误'))\n    }\n    \n    const onExceed = (files, fileList) => {\n      ElMessage.error('最多只能上传50个文件!')\n    }\n    \n    const onFileChange = (file, fileList) => {\n      updateUploadFileList(fileList)\n    }\n    \n    const onFileRemove = (file, fileList) => {\n      updateUploadFileList(fileList)\n    }\n\n    // 删除单个文件\n    const removeFile = (index) => {\n      uploadFileList.value.splice(index, 1)\n    }\n\n    // 空闲时批量更新文件列表并预计算显示字段，减少同步阻塞\n    const scheduleUpdate = (fn) => {\n      const idle = window.requestIdleCallback || ((cb) => setTimeout(() => cb({ timeRemaining: () => 0 }), 1))\n      idle(() => fn())\n    }\n    const updateUploadFileList = (rawList) => {\n      const normalized = (rawList || []).map(f => {\n        const size = f.size || f.raw?.size || 0\n        const sizeText = formatFileSize(size)\n        return { ...f, sizeText }\n      })\n      scheduleUpdate(() => {\n        uploadFileList.value = normalized\n      })\n    }\n    \n    const handleParse = async (row) => {\n      try {\n        row.parsing = true\n        await store.dispatch('logs/parseLog', row.id)\n        ElMessage.success('解析成功')\n        loadLogs()\n      } catch (error) {\n        ElMessage.error('解析失败')\n      } finally {\n        row.parsing = false\n      }\n    }\n\n    const canReparse = computed(() => store.getters['auth/hasPermission']?.('log:reparse'))\n\n    const handleReparse = async (row) => {\n      try {\n        if (!canReparse.value) {\n          ElMessage.error('仅管理员可重新解析')\n          return\n        }\n        row.parsing = true\n        row.status = 'parsing'\n        await store.dispatch('logs/reparseLog', row.id)\n        ElMessage.success('重新解析完成')\n        await loadLogs()\n      } catch (error) {\n        const msg = error.response?.data?.message || error.message || '重新解析失败'\n        ElMessage.error(msg)\n      } finally {\n        row.parsing = false\n      }\n    }\n    \n    const handleDownload = async (row) => {\n      try {\n        const response = await store.dispatch('logs/downloadLog', row.id)\n        \n        // 创建下载链接\n        const blob = new Blob([response.data])\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = row.filename\n        link.click()\n        window.URL.revokeObjectURL(url)\n        \n        ElMessage.success('下载成功')\n      } catch (error) {\n        ElMessage.error('下载失败')\n      }\n    }\n    \n    // 跟踪删除中ID集合\n    const deletingIds = ref(new Set())\n\n    const isDeleting = (id) => deletingIds.value.has(id)\n\n    const handleDelete = async (row) => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个日志文件吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        deletingIds.value.add(row.id)\n        await nextTick()\n        await store.dispatch('logs/deleteLog', row.id)\n        ElMessage.success('删除成功')\n        await loadLogs()\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败')\n        }\n      } finally {\n        deletingIds.value.delete(row.id)\n      }\n    }\n\n    // 跳转到日志分析页面\n    const goToLogAnalysis = (row) => {\n      // 在新页面中打开日志分析，使用batch-analysis路由\n      const routeData = router.resolve(`/batch-analysis/${row.id}`)\n      window.open(routeData.href, '_blank')\n    }\n    \n    const formatFileSize = (bytes) => {\n      if (bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n    \n    const formatDate = (dateString) => {\n      if (!dateString) return '-'\n      return new Date(dateString).toLocaleString('zh-CN')\n    }\n    \n    // 行状态：根据需求映射显示文字\n    const getRowStatusType = (row) => {\n      if (deletingIds.value.has(row.id)) return 'warning'\n      const map = {\n        uploading: 'warning',\n        decrypting: 'warning',\n        parsing: 'warning',\n        parsed: 'success',\n        failed: 'danger'\n      }\n      return map[row.status] || 'info'\n    }\n    const getRowStatusText = (row) => {\n      if (deletingIds.value.has(row.id)) return '删除中'\n      const map = {\n        uploading: '日志上传中',\n        decrypting: '解密中',\n        parsing: '解析中',\n        parsed: '完成',\n        failed: '解析失败'\n      }\n      return map[row.status] || (row.status || '-')\n    }\n    \n    // 获取状态进度百分比\n    const getStatusProgress = (row) => {\n      const progressMap = {\n        uploading: 30,\n        decrypting: 60,\n        parsing: 90,\n        parsed: 100,\n        failed: 0\n      }\n      return progressMap[row.status] || 0\n    }\n    \n\n    \n        // 批量操作相关方法\n    const handleSelectionChange = (selection) => {\n      selectedLogs.value = selection\n      // 保存选中的日志到sessionStorage，供手术统计页面使用\n      try {\n        sessionStorage.setItem('selectedLogs', JSON.stringify(selection))\n      } catch (error) {\n        console.warn('保存选中日志到sessionStorage失败:', error)\n      }\n    }\n    \n    const clearSelection = () => {\n      selectedLogs.value = []\n    }\n    \n    // 批量分析\n    const handleBatchAnalyze = () => {\n      const logIds = selectedLogs.value.map(log => log.id).join(',')\n      // 在新页面中打开批量分析\n      const routeData = router.resolve(`/batch-analysis/${logIds}`)\n      window.open(routeData.href, '_blank')\n    }\n    \n    // 批量下载\n    const handleBatchDownload = async () => {\n      try {\n        ElMessage.info('正在打包文件，请稍候...')\n        \n        const logIds = selectedLogs.value.map(log => log.id)\n        const response = await store.dispatch('logs/batchDownloadLogs', logIds)\n        \n        // 创建下载链接\n        const blob = new Blob([response.data])\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        \n        // 生成ZIP文件名\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-')\n        link.download = `logs_batch_${timestamp}.zip`\n        \n        link.click()\n        window.URL.revokeObjectURL(url)\n        \n        ElMessage.success('批量下载完成')\n      } catch (error) {\n        console.error('批量下载失败:', error)\n        const errorMessage = error.response?.data?.message || error.message || '批量下载失败'\n        ElMessage.error(errorMessage)\n      }\n    }\n    \n    // 批量删除\n    const handleBatchDelete = async () => {\n      try {\n        // 检查是否有未完成的日志\n        if (hasIncompleteLogs.value) {\n          ElMessage.warning('请等待所有选中的日志解析完成后再进行删除操作')\n          return\n        }\n        \n        await ElMessageBox.confirm(\n          `确定要删除选中的 ${selectedLogs.value.length} 个日志文件吗？此操作不可恢复！`, \n          '批量删除确认', \n          {\n            confirmButtonText: '确定删除',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        )\n        \n        // 保存选中的日志数据，避免在验证过程中被清空\n        const selectedLogsData = [...selectedLogs.value]\n        const logIds = selectedLogsData.map(log => parseInt(log.id)).filter(id => !isNaN(id))\n        \n        if (logIds.length === 0) {\n          ElMessage.error('选中的日志ID格式不正确')\n          return\n        }\n        \n        // 将选中的日志ID添加到删除中状态\n        logIds.forEach(id => deletingIds.value.add(id))\n        await nextTick()\n        \n        // 执行批量删除\n        try {\n          await store.dispatch('logs/batchDeleteLogs', logIds)\n          // 清除删除中状态，因为任务已加入队列\n          logIds.forEach(id => deletingIds.value.delete(id))\n          loadLogs() // 重新加载日志列表\n          clearSelection() // 清空选择\n        } catch (apiError) {\n          console.error('批量删除失败:', apiError)\n          const errorMessage = apiError.response?.data?.message || apiError.message || '批量删除失败'\n          ElMessage.error(errorMessage)\n          // 删除失败时，清除删除中状态\n          logIds.forEach(id => deletingIds.value.delete(id))\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('批量删除错误:', error)\n          console.error('错误详情:', {\n            name: error.name,\n            message: error.message,\n            code: error.code,\n            response: error.response?.data,\n            status: error.response?.status,\n            statusText: error.response?.statusText,\n            config: {\n              url: error.config?.url,\n              method: error.config?.method,\n              data: error.config?.data\n            }\n          })\n          \n          let errorMessage = '批量删除失败'\n          if (error.response?.data?.message) {\n            errorMessage = error.response.data.message\n          } else if (error.message) {\n            errorMessage = error.message\n          }\n          \n          ElMessage.error(errorMessage)\n        }\n      }\n    }\n\n    // 批量重新解析（仅管理员）\n    const handleBatchReparse = async () => {\n      try {\n        if (!canReparse.value) {\n          ElMessage.error('仅管理员可批量重新解析')\n          return\n        }\n        if (!selectedLogs.value.length) {\n          ElMessage.warning('请先选择要重新解析的日志')\n          return\n        }\n        // 检查是否有未完成的日志\n        if (hasIncompleteLogs.value) {\n          ElMessage.warning('请等待所有选中的日志解析完成后再进行重新解析操作')\n          return\n        }\n        await ElMessageBox.confirm(\n          `确定对选中的 ${selectedLogs.value.length} 个日志重新解析释义吗？`,\n          '批量重新解析确认',\n          { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' }\n        )\n        const ids = selectedLogs.value.map(l => l.id)\n        // 乐观更新状态\n        selectedLogs.value.forEach(l => { l.status = 'parsing' })\n        await store.dispatch('logs/batchReparseLogs', ids)\n        await loadLogs()\n      } catch (error) {\n        if (error !== 'cancel') {\n          const msg = error.response?.data?.message || error.message || '批量重新解析失败'\n          ElMessage.error(msg)\n        }\n      }\n    }\n    \n\n    \n\n    \n    // 格式化时间戳\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    // 检查是否可以操作日志（只有完成状态才能操作）\n    const canOperate = (log) => {\n      return log.status === 'parsed'\n    }\n    \n\n    \n\n    \n    // 自动填充密钥\n    const autoFillKey = async () => {\n      try {\n        const response = await store.dispatch('logs/autoFillKey', deviceId.value)\n        if (response.data.key) {\n          decryptKey.value = response.data.key\n          ElMessage.success('已自动填充密钥')\n        } else {\n          ElMessage.warning('未找到该设备编号对应的密钥')\n        }\n      } catch (error) {\n        console.error('自动填充密钥错误:', error)\n        const errorMessage = error.response?.data?.message || error.message || '自动填充密钥失败'\n        ElMessage.error(errorMessage)\n      }\n    }\n\n    // 验证密钥格式\n    const validateKeyFormat = () => {\n      const macRegex = /^([0-9A-Fa-f]{2}-){5}[0-9A-Fa-f]{2}$/\n      if (decryptKey.value && !macRegex.test(decryptKey.value)) {\n        keyError.value = '请输入有效的MAC地址格式密钥 (如: 00-01-05-77-6a-09)'\n      } else {\n        keyError.value = ''\n      }\n    }\n\n    // 自动填充设备编号\n    const autoFillDeviceId = async () => {\n      try {\n        const response = await store.dispatch('logs/autoFillDeviceId', decryptKey.value)\n        if (response.data.device_id) {\n          deviceId.value = response.data.device_id\n          ElMessage.success('已自动填充设备编号')\n        } else {\n          ElMessage.warning('未找到该密钥对应的设备编号')\n        }\n      } catch (error) {\n        console.error('自动填充设备编号错误:', error)\n        const errorMessage = error.response?.data?.message || error.message || '自动填充设备编号失败'\n        ElMessage.error(errorMessage)\n      }\n    }\n\n    // 验证设备编号格式\n    const validateDeviceIdFormat = () => {\n      const deviceIdRegex = /^[0-9A-Za-z]+-[0-9A-Za-z]+$/\n      if (deviceId.value && !deviceIdRegex.test(deviceId.value)) {\n        deviceIdError.value = '请输入有效的设备编号格式 (如: 4371-01、ABC-12、123-XY)'\n      } else {\n        deviceIdError.value = ''\n      }\n    }\n    \n    // 生命周期\n    onMounted(() => {\n      loadLogs()\n    })\n    \n    return {\n      loading,\n      uploading,\n      showUploadDialog,\n      overallProgress,\n      processingStatus,\n      progressFormat,\n      uploadRef,\n      currentPage,\n      pageSize,\n      logs,\n      total,\n      uploadUrl,\n      uploadHeaders,\n      loadLogs,\n      handleSizeChange,\n      handleCurrentChange,\n      dateShortcuts,\n      beforeUpload,\n      submitUpload,\n      clearUpload,\n      onUploadSuccess,\n      onUploadError,\n      onExceed,\n      onFileChange,\n      onFileRemove,\n      removeFile,\n      handleParse,\n      handleDownload,\n      handleDelete,\n      handleReparse,\n      canReparse,\n      formatFileSize,\n      formatDate,\n      getRowStatusType,\n      getRowStatusText,\n      getStatusProgress,\n      goToLogAnalysis,\n      isDeleting,\n      userRole,\n      decryptKey,\n      keyUploadRef,\n      keyFileName,\n      deviceId,\n      filterDeviceId,\n      uploadFileList,\n      beforeKeyUpload,\n      onKeyFileChange,\n      canDeleteLog,\n      canOperate,\n      keyError,\n      deviceIdError,\n      autoFillKey,\n      validateKeyFormat,\n      autoFillDeviceId,\n      validateDeviceIdFormat,\n      \n      // 批量操作相关\n      selectedLogs,\n      canBatchOperate,\n      canBatchDelete,\n      isSameDevice,\n      deviceCheckMessage,\n      handleSelectionChange,\n      clearSelection,\n      handleBatchAnalyze,\n      handleBatchDownload,\n      handleBatchDelete,\n      handleBatchReparse,\n      // 列筛选\n      showNameFilterPanel,\n      showDeviceFilterPanel,\n      nameTimePrefix,\n      onlyOwn,\n      applyNameFilter,\n      resetNameFilter,\n      applyDeviceFilter,\n      resetDeviceFilter,\n      applyOnlyOwn,\n      resetAllFilters,\n      startStatusMonitoring\n    }\n  }\n}\n</script>\n\n<style scoped>\n.logs-container {\n  height: 100%;\n}\n\n.upload-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.header-actions {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  min-width: 0;\n}\n\n.header-section {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.batch-section {\n  flex: 1 1 auto;\n  min-width: 240px;\n}\n\n.only-own-section,\n.reset-section,\n.refresh-section {\n  flex: 0 0 auto;\n}\n\n/* 统一按钮样式与对齐 */\n.only-own-section .el-button,\n.reset-section .el-button,\n.refresh-section .el-button {\n  height: 28px;\n  line-height: 26px;\n  padding: 0 12px;\n}\n\n.only-own-section .el-checkbox {\n  display: inline-flex;\n  align-items: center;\n  height: 28px;\n}\n\n.upload-actions {\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n}\n\n.key-input-section {\n  margin-top: 15px;\n}\n\n.key-input-row {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.key-separator {\n  color: #666;\n  font-size: 14px;\n}\n\n.key-file-info {\n  margin-top: 10px;\n}\n\n.key-error {\n  margin-top: 10px;\n}\n\n.device-input-section {\n  margin-top: 15px;\n}\n\n.device-input-row {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.device-error {\n  margin-top: 10px;\n}\n\n.list-card {\n  margin-bottom: 20px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.parsing-tip {\n  color: #e6a23c;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.parsing-tip .el-icon {\n  animation: rotating 2s linear infinite;\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.overall-progress {\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n}\n\n.progress-stages {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n  padding: 0 10px;\n}\n\n.stage {\n  font-size: 12px;\n  color: #909399;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n\n.stage.active {\n  color: #409eff;\n  background-color: #ecf5ff;\n  font-weight: 500;\n}\n\n.stage.completed {\n  color: #67c23a;\n  background-color: #f0f9ff;\n  font-weight: 500;\n}\n\n.processing-status {\n  margin-top: 10px;\n  text-align: center;\n}\n\n.processing-status .el-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.custom-file-list {\n  margin-top: 15px;\n  border: 1px solid #e4e7ed;\n  border-radius: 6px;\n  overflow: hidden;\n}\n\n.file-list-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: #f5f7fa;\n  border-bottom: 1px solid #e4e7ed;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.file-items {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.file-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  transition: background-color 0.2s;\n}\n\n.file-item:last-child {\n  border-bottom: none;\n}\n\n.file-item:hover {\n  background-color: #f5f7fa;\n}\n\n.file-item .el-icon {\n  margin-right: 8px;\n  color: #909399;\n}\n\n.file-name {\n  flex: 1;\n  margin-right: 10px;\n  font-size: 14px;\n  color: #303133;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.file-size {\n  margin-right: 10px;\n  font-size: 12px;\n  color: #909399;\n}\n\n.status-tip {\n  margin-top: 4px;\n  font-size: 11px;\n  color: #e6a23c;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n}\n\n.status-tip .el-icon {\n  font-size: 12px;\n}\n\n.status-progress {\n  margin-top: 4px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n}\n\n.status-progress .el-progress {\n  width: 60px;\n}\n\n/* 批量操作样式 */\n.batch-operations {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  min-width: 0;\n  flex: 1;\n}\n\n/* 搜索区域样式 */\n.search-section {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  flex-shrink: 0;\n  gap: 10px;\n}\n\n.search-input {\n  width: 200px;\n}\n\n.batch-actions {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px 12px;\n  background-color: #f0f9ff;\n  border: 1px solid #b3d8ff;\n  border-radius: 6px;\n  flex-wrap: wrap;\n  min-width: 0;\n}\n\n\n\n.info-icon {\n  color: #909399;\n  margin-left: 4px;\n  cursor: help;\n  font-size: 14px;\n}\n\n/* 响应式布局 */\n@media (max-width: 1024px) {\n  .header-actions {\n    gap: 15px;\n  }\n  \n  .batch-actions {\n    gap: 8px;\n  }\n  \n  .batch-actions .el-button {\n    font-size: 12px;\n    padding: 6px 10px;\n  }\n}\n\n@media (max-width: 768px) {\n  .card-header {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 15px;\n  }\n  \n  .header-actions {\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .search-section {\n    margin-left: 0;\n    justify-content: flex-start;\n  }\n  \n  .batch-actions {\n    justify-content: flex-start;\n  }\n  \n  .batch-actions .el-button {\n    flex: 1;\n    min-width: 120px;\n  }\n}\n\n@media (max-width: 480px) {\n  .batch-actions {\n    flex-direction: column;\n    gap: 8px;\n  }\n  \n  .batch-actions .el-button {\n    width: 100%;\n  }\n  \n  .search-section {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .search-section .search-input {\n    width: 100% !important;\n  }\n}\n\n</style> ","import { render } from \"./Logs.vue?vue&type=template&id=a89303fa&scoped=true\"\nimport script from \"./Logs.vue?vue&type=script&lang=js\"\nexport * from \"./Logs.vue?vue&type=script&lang=js\"\n\nimport \"./Logs.vue?vue&type=style&index=0&id=a89303fa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a89303fa\"]])\n\nexport default __exports__"],"names":["class","header","type","showUploadDialog","selectedLogs","length","size","handleBatchAnalyze","disabled","canBatchOperate","isSameDevice","title","incompleteLogsMessage","deviceCheckMessage","handleBatchDownload","handleBatchDelete","canBatchDelete","userRole","handleBatchReparse","content","placement","clearSelection","onlyOwn","applyOnlyOwn","label","plain","resetAllFilters","loadLogs","data","logs","loading","style","handleSelectionChange","width","prop","visible","showNameFilterPanel","reference","nameTimePrefix","placeholder","clearable","applyNameFilter","prefix","resetNameFilter","showDeviceFilterPanel","filterDeviceId","applyDeviceFilter","resetDeviceFilter","default","row","formatDate","upload_time","align","getRowStatusType","getRowStatusText","status","percentage","getStatusProgress","canOperate","isDeleting","id","fixed","goToLogAnalysis","handleDownload","canDeleteLog","handleDelete","handleReparse","parsing","currentPage","pageSize","total","layout","handleSizeChange","handleCurrentChange","footer","uploading","submitUpload","decryptKey","trim","uploadFileList","ref","action","uploadUrl","headers","uploadHeaders","beforeUpload","onUploadSuccess","onUploadError","onExceed","onFileChange","onFileRemove","onUploadProgress","multiple","limit","accept","name","tip","clearUpload","file","index","key","originalname","sizeText","removeFile","validateKeyFormat","autoFillDeviceId","beforeKeyUpload","onKeyFileChange","keyFileName","keyError","deviceId","validateDeviceIdFormat","autoFillKey","deviceIdError","showEntriesDialog","logEntries","setup","store","router","overallProgress","processingStatus","uploadRef","keyUploadRef","dateShortcuts","text","value","start","Date","getFullYear","end","now","getMonth","getDate","Array","isArray","getters","Authorization","state","auth","token","user","role_id","userId","every","log","firstDeviceId","device_id","deviceIds","Set","map","join","hasIncompleteLogs","some","incompleteCount","filter","uploader_id","async","timeParams","buildTimeParams","dispatch","page","undefined","error","tp","test","time_prefix","only_own","macRegex","warning","deviceIdRegex","totalSize","reduce","sum","f","raw","submit","isMedbotFile","endsWith","isLt200M","isTxtFile","isSystemInfoFile","isLt1M","reader","FileReader","onload","e","scheduleUpdate","target","result","success","readAsText","clearFiles","progressFormat","preventRefresh","window","addEventListener","response","fileList","console","updateUploadFileList","allUploaded","startStatusMonitoring","checkCount","maxChecks","checkStatus","newLogs","uploadingCount","decryptingCount","parsingCount","setTimeout","allParsed","hasFailed","uploadedFiles","message","files","splice","fn","idle","requestIdleCallback","cb","timeRemaining","rawList","normalized","formatFileSize","handleParse","canReparse","msg","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","filename","click","revokeObjectURL","deletingIds","has","confirm","confirmButtonText","cancelButtonText","add","delete","routeData","resolve","open","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","dateString","toLocaleString","decrypting","parsed","failed","progressMap","selection","sessionStorage","setItem","JSON","stringify","warn","logIds","info","timestamp","toISOString","replace","errorMessage","selectedLogsData","parseInt","isNaN","forEach","apiError","code","statusText","config","method","ids","l","__exports__","render"],"sourceRoot":""}