{"version":3,"file":"js/172.4730eafb.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/BatchAnalysis.vue","webpack://logtool-frontend/./src/views/BatchAnalysis.vue?7d02"],"sourcesContent":["<template>\r\n  <div class=\"batch-analysis-container\">\r\n    <el-card class=\"analysis-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <div class=\"header-left\">\r\n            <span class=\"title\">批量日志分析</span>\r\n            <el-tag type=\"info\" size=\"small\">\r\n              已选择 {{ selectedLogs.length }} 个日志文件\r\n            </el-tag>\r\n            <el-tag v-if=\"batchLogEntries.length > 0\" type=\"success\" size=\"small\">\r\n              共 {{ batchLogEntries.length }} 条记录\r\n            </el-tag>\r\n          </div>\r\n          <div class=\"header-right\">\r\n            <el-button @click=\"exportToCSV\" type=\"success\" size=\"small\">\r\n              <el-icon><Download /></el-icon>\r\n              导出CSV\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 选中的日志文件列表 -->\r\n      <div class=\"selected-logs-section\" v-if=\"selectedLogs.length > 0\">\r\n        <h4>选中的日志文件：</h4>\r\n        <div class=\"logs-list\">\r\n          <el-tag \r\n            v-for=\"log in selectedLogs\" \r\n            :key=\"log.id\" \r\n            type=\"info\" \r\n            size=\"small\"\r\n            style=\"margin-right: 6px; margin-bottom: 6px; font-size: 12px;\"\r\n          >\r\n            {{ log.original_name }}\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 搜索和筛选 -->\r\n      <div class=\"search-section\">\r\n        <el-input\r\n          v-model=\"searchKeyword\"\r\n          placeholder=\"搜索释义内容或故障码\"\r\n          style=\"width: 250px; margin-right: 15px;\"\r\n          clearable\r\n          @input=\"handleSearch\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><Search /></el-icon>\r\n          </template>\r\n        </el-input>\r\n        \r\n        <el-date-picker\r\n          v-model=\"timeRange\"\r\n          type=\"datetimerange\"\r\n          range-separator=\"至\"\r\n          start-placeholder=\"开始时间\"\r\n          end-placeholder=\"结束时间\"\r\n          format=\"YYYY-MM-DD HH:mm:ss\"\r\n          value-format=\"YYYY-MM-DD HH:mm:ss\"\r\n          style=\"width: 300px; margin-right: 15px;\"\r\n          @change=\"handleTimeRangeChange\"\r\n        />\r\n        <el-tag v-if=\"timeRangeLimit\" type=\"info\" size=\"small\" style=\"margin-left: 10px;\">\r\n          可选范围: {{ formatTimestamp(timeRangeLimit[0]) }} 至 {{ formatTimestamp(timeRangeLimit[1]) }}\r\n        </el-tag>\r\n        \r\n        <el-button \r\n          v-if=\"timeRangeLimit\" \r\n          @click=\"setFullTimeRange\" \r\n          type=\"primary\" \r\n          size=\"small\"\r\n          style=\"margin-left: 10px;\"\r\n        >\r\n          选择全部时间\r\n        </el-button>\r\n        \r\n        <el-button @click=\"clearFilters\" type=\"info\" size=\"small\">\r\n          清除筛选\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 日志条目表格 -->\r\n      <div class=\"entries-section\">\r\n        <div class=\"section-header\">\r\n          <h3>日志条目 ({{ filteredEntries.length }})</h3>\r\n        </div>\r\n\r\n        <!-- 加载状态 -->\r\n        <div v-if=\"loading\" class=\"loading-section\">\r\n          <el-empty description=\"正在加载日志数据...\" />\r\n        </div>\r\n\r\n        <!-- 错误状态 -->\r\n        <div v-else-if=\"selectedLogs.length === 0\" class=\"error-section\">\r\n          <el-empty description=\"未找到选中的日志文件\" />\r\n        </div>\r\n\r\n        <!-- 数据表格 -->\r\n        <div v-else class=\"table-container\">\r\n          <el-table \r\n            :data=\"paginatedEntries\" \r\n            style=\"width: 100%\"\r\n            v-loading=\"loading\"\r\n            height=\"calc(100vh - 350px)\"\r\n            stripe\r\n          >\r\n            <el-table-column prop=\"log_name\" label=\"日志文件\" width=\"150\" />\r\n            <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" sortable>\r\n              <template #default=\"{ row }\">\r\n                {{ formatTimestamp(row.timestamp) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"error_code\" label=\"故障码\" width=\"120\" sortable />\r\n            <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\r\n            <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\r\n            <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\r\n            <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\r\n            <el-table-column prop=\"explanation\" label=\"释义\" min-width=\"300\" show-overflow-tooltip />\r\n          </el-table>\r\n        </div>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination-wrapper\" v-if=\"filteredEntries.length > 0\">\r\n          <el-pagination\r\n            :current-page=\"currentPage\"\r\n            :page-size=\"pageSize\"\r\n            :page-sizes=\"[50, 100, 200, 500]\"\r\n            :total=\"filteredEntries.length\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { Search, Download, ArrowLeft } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'BatchAnalysis',\r\n  components: {\r\n    Search,\r\n    Download,\r\n    ArrowLeft\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    \r\n    const loading = ref(false)\r\n    const selectedLogs = ref([])\r\n    const batchLogEntries = ref([])\r\n    const searchKeyword = ref('')\r\n    const timeRange = ref(null)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(100)\r\n\r\n    // 获取时间范围限制\r\n    const timeRangeLimit = computed(() => {\r\n      if (batchLogEntries.value.length === 0) return null\r\n      \r\n      const timestamps = batchLogEntries.value.map(entry => new Date(entry.timestamp))\r\n      const minTime = new Date(Math.min(...timestamps))\r\n      const maxTime = new Date(Math.max(...timestamps))\r\n      \r\n      console.log('时间范围限制:', {\r\n        minTime: minTime.toISOString(),\r\n        maxTime: maxTime.toISOString(),\r\n        entriesCount: batchLogEntries.value.length\r\n      })\r\n      \r\n      return [minTime, maxTime]\r\n    })\r\n\r\n    // 过滤后的条目\r\n    const filteredEntries = computed(() => {\r\n      let entries = batchLogEntries.value\r\n      \r\n      // 搜索过滤\r\n      if (searchKeyword.value) {\r\n        entries = entries.filter(entry => \r\n          entry.explanation.toLowerCase().includes(searchKeyword.value.toLowerCase()) ||\r\n          entry.error_code.toLowerCase().includes(searchKeyword.value.toLowerCase())\r\n        )\r\n      }\r\n      \r\n      // 时间范围过滤\r\n      if (timeRange.value && timeRange.value.length === 2) {\r\n        const [startTime, endTime] = timeRange.value\r\n        entries = entries.filter(entry => {\r\n          const entryTime = new Date(entry.timestamp)\r\n          const start = new Date(startTime)\r\n          const end = new Date(endTime)\r\n          return entryTime >= start && entryTime <= end\r\n        })\r\n      }\r\n      \r\n      return entries\r\n    })\r\n\r\n    // 分页后的条目\r\n    const paginatedEntries = computed(() => {\r\n      const start = (currentPage.value - 1) * pageSize.value\r\n      const end = start + pageSize.value\r\n      return filteredEntries.value.slice(start, end)\r\n    })\r\n\r\n    // 从路由参数获取选中的日志\r\n    const loadSelectedLogs = async () => {\r\n      const logIds = route.params.logIds\r\n      if (logIds) {\r\n        const ids = logIds.split(',').map(id => parseInt(id))\r\n        try {\r\n          // 从API获取所有日志信息\r\n          const response = await store.dispatch('logs/fetchLogs', { page: 1, limit: 1000 })\r\n          const allLogs = response.data.logs\r\n          selectedLogs.value = allLogs.filter(log => ids.includes(log.id))\r\n          \r\n          // 如果没有找到选中的日志，显示错误信息\r\n          if (selectedLogs.value.length === 0) {\r\n            ElMessage.error('未找到选中的日志文件')\r\n            console.error('选中的日志ID:', ids)\r\n            console.error('所有日志:', allLogs)\r\n          } else {\r\n            console.log('成功获取选中的日志:', selectedLogs.value)\r\n          }\r\n        } catch (error) {\r\n          console.error('获取日志信息失败:', error)\r\n          ElMessage.error('获取日志信息失败')\r\n        }\r\n      } else {\r\n        ElMessage.error('未提供日志ID参数')\r\n      }\r\n    }\r\n\r\n    // 加载批量日志条目\r\n    const loadBatchLogEntries = async () => {\r\n      try {\r\n        loading.value = true\r\n        batchLogEntries.value = []\r\n        \r\n        // 获取所有选中日志的条目\r\n        const allEntries = []\r\n        for (const log of selectedLogs.value) {\r\n          try {\r\n            const response = await store.dispatch('logs/fetchLogEntries', log.id)\r\n            const entries = response.data?.entries || response.entries || []\r\n            \r\n            // 为每个条目添加日志文件名信息\r\n            const entriesWithLogName = entries.map(entry => ({\r\n              ...entry,\r\n              log_name: log.original_name\r\n            }))\r\n            \r\n            allEntries.push(...entriesWithLogName)\r\n          } catch (error) {\r\n            console.error(`获取日志 ${log.original_name} 条目失败:`, error)\r\n            ElMessage.warning(`获取日志 ${log.original_name} 条目失败`)\r\n          }\r\n        }\r\n        \r\n        // 按时间戳排序\r\n        batchLogEntries.value = allEntries.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))\r\n        \r\n        ElMessage.success(`批量分析完成，共 ${batchLogEntries.value.length} 条记录`)\r\n      } catch (error) {\r\n        ElMessage.error('批量分析失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 搜索处理\r\n    const handleSearch = () => {\r\n      currentPage.value = 1\r\n    }\r\n\r\n    // 时间范围变化处理\r\n    const handleTimeRangeChange = () => {\r\n      currentPage.value = 1\r\n    }\r\n\r\n    // 清除筛选\r\n    const clearFilters = () => {\r\n      searchKeyword.value = ''\r\n      timeRange.value = null\r\n      currentPage.value = 1\r\n    }\r\n\r\n    // 导出CSV\r\n    const exportToCSV = () => {\r\n      const headers = ['日志文件', '时间戳', '故障码', '参数1', '参数2', '参数3', '参数4', '释义']\r\n      const csvContent = [\r\n        headers.join(','),\r\n        ...filteredEntries.value.map(entry => [\r\n          entry.log_name,\r\n          formatTimestamp(entry.timestamp),\r\n          entry.error_code,\r\n          entry.param1,\r\n          entry.param2,\r\n          entry.param3,\r\n          entry.param4,\r\n          `\"${entry.explanation.replace(/\"/g, '\"\"')}\"`\r\n        ].join(','))\r\n      ].join('\\n')\r\n\r\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' })\r\n      const link = document.createElement('a')\r\n      link.href = URL.createObjectURL(blob)\r\n      link.download = `batch_logs_analysis_${new Date().toISOString().slice(0, 10)}.csv`\r\n      link.click()\r\n      URL.revokeObjectURL(link.href)\r\n      \r\n      ElMessage.success('批量CSV文件导出成功')\r\n    }\r\n\r\n    // 分页处理\r\n    const handleSizeChange = (size) => {\r\n      pageSize.value = size\r\n      currentPage.value = 1\r\n    }\r\n\r\n    const handleCurrentChange = (page) => {\r\n      currentPage.value = page\r\n    }\r\n\r\n    // 格式化时间戳\r\n    const formatTimestamp = (timestamp) => {\r\n      if (!timestamp) return '-'\r\n      const date = new Date(timestamp)\r\n      const year = date.getFullYear()\r\n      const month = String(date.getMonth() + 1).padStart(2, '0')\r\n      const day = String(date.getDate()).padStart(2, '0')\r\n      const hours = String(date.getHours()).padStart(2, '0')\r\n      const minutes = String(date.getMinutes()).padStart(2, '0')\r\n      const seconds = String(date.getSeconds()).padStart(2, '0')\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n    }\r\n\r\n    // 设置时间范围为全部\r\n    const setFullTimeRange = () => {\r\n      if (timeRangeLimit.value) {\r\n        timeRange.value = [timeRangeLimit.value[0], timeRangeLimit.value[1]]\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      console.log('BatchAnalysis mounted, route params:', route.params)\r\n      await loadSelectedLogs()\r\n      await loadBatchLogEntries()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      selectedLogs,\r\n      batchLogEntries,\r\n      searchKeyword,\r\n      timeRange,\r\n      currentPage,\r\n      pageSize,\r\n      filteredEntries,\r\n      paginatedEntries,\r\n      loadSelectedLogs,\r\n      loadBatchLogEntries,\r\n      handleSearch,\r\n      handleTimeRangeChange,\r\n      clearFilters,\r\n      exportToCSV,\r\n      handleSizeChange,\r\n      handleCurrentChange,\r\n      formatTimestamp,\r\n      timeRangeLimit,\r\n      setFullTimeRange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.batch-analysis-container {\r\n  padding: 0;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.analysis-card {\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 0;\r\n  border: none;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 20px;\r\n  background-color: white;\r\n  border-bottom: 1px solid #e6e6e6;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.selected-logs-section {\r\n  margin: 10px 20px;\r\n  padding: 8px 12px;\r\n  background-color: #f0f9ff;\r\n  border: 1px solid #b3d8ff;\r\n  border-radius: 6px;\r\n}\r\n\r\n.selected-logs-section h4 {\r\n  margin: 0 0 6px 0;\r\n  color: #303133;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.logs-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 4px;\r\n}\r\n\r\n.search-section {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 20px 10px 20px;\r\n  padding: 10px 12px;\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.entries-section {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  margin: 0 20px 10px 20px;\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.table-container {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  padding: 0 20px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  padding: 15px 20px 0 20px;\r\n}\r\n\r\n.section-header h3 {\r\n  margin: 0;\r\n  color: #303133;\r\n  font-size: 14px;\r\n}\r\n\r\n.loading-section,\r\n.error-section {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 400px;\r\n  background-color: #fafafa;\r\n  border-radius: 6px;\r\n  margin: 20px;\r\n}\r\n\r\n.pagination-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px 20px;\r\n  padding: 8px 0;\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n</style> ","import { render } from \"./BatchAnalysis.vue?vue&type=template&id=f37f4bfc&scoped=true\"\nimport script from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./BatchAnalysis.vue?vue&type=style&index=0&id=f37f4bfc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f37f4bfc\"]])\n\nexport default __exports__"],"names":["class","header","type","size","selectedLogs","length","batchLogEntries","exportToCSV","log","key","id","style","original_name","searchKeyword","placeholder","clearable","handleSearch","prefix","timeRange","format","handleTimeRangeChange","formatTimestamp","timeRangeLimit","setFullTimeRange","clearFilters","filteredEntries","description","data","paginatedEntries","height","stripe","prop","label","width","sortable","default","row","timestamp","loading","currentPage","pageSize","total","layout","handleSizeChange","handleCurrentChange","name","components","Search","Download","ArrowLeft","setup","store","route","value","timestamps","map","entry","Date","minTime","Math","min","maxTime","max","console","toISOString","entriesCount","entries","filter","explanation","toLowerCase","includes","error_code","startTime","endTime","entryTime","start","end","slice","loadSelectedLogs","async","logIds","params","ids","split","parseInt","response","dispatch","page","limit","allLogs","logs","error","loadBatchLogEntries","allEntries","entriesWithLogName","log_name","push","warning","sort","a","b","success","headers","csvContent","join","param1","param2","param3","param4","replace","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","__exports__","render"],"sourceRoot":""}