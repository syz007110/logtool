{"version":3,"file":"js/987.b0fedf86.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/MonitoringDashboard.vue","webpack://logtool-frontend/./src/views/MonitoringDashboard.vue?560b"],"sourcesContent":["<template>\r\n  <div class=\"monitoring-dashboard\">\r\n    <!-- 页面标题 -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-actions\">\r\n        <el-button \r\n          type=\"primary\" \r\n          :icon=\"Refresh\" \r\n          @click=\"refreshData\"\r\n          :loading=\"loading\"\r\n        >\r\n          刷新数据\r\n        </el-button>\r\n        <el-button \r\n          type=\"success\" \r\n          :icon=\"Setting\" \r\n          @click=\"showSettings = true\"\r\n        >\r\n          告警设置\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 系统概览卡片 -->\r\n    <el-row :gutter=\"20\" class=\"overview-cards\">\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"metric-card\">\r\n          <div class=\"metric-content\">\r\n            <div class=\"metric-icon cpu\">\r\n              <el-icon><Monitor /></el-icon>\r\n            </div>\r\n            <div class=\"metric-info\">\r\n              <div class=\"metric-value\">{{ systemMetrics.memory?.usage || 0 }}%</div>\r\n              <div class=\"metric-label\">内存使用率</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"6\">\r\n        <el-card class=\"metric-card\">\r\n          <div class=\"metric-content\">\r\n            <div class=\"metric-icon queue\">\r\n              <el-icon><List /></el-icon>\r\n            </div>\r\n            <div class=\"metric-info\">\r\n              <div class=\"metric-value\">{{ businessMetrics.tasks?.waiting || 0 }}</div>\r\n              <div class=\"metric-label\">队列等待任务</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"6\">\r\n        <el-card class=\"metric-card\">\r\n          <div class=\"metric-content\">\r\n            <div class=\"metric-icon users\">\r\n              <el-icon><User /></el-icon>\r\n            </div>\r\n            <div class=\"metric-info\">\r\n              <div class=\"metric-value\">{{ businessMetrics.users?.active || 0 }}</div>\r\n              <div class=\"metric-label\">活跃用户</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"6\">\r\n        <el-card class=\"metric-card\">\r\n          <div class=\"metric-content\">\r\n            <div class=\"metric-icon fairness\">\r\n              <el-icon><TrendCharts /></el-icon>\r\n            </div>\r\n            <div class=\"metric-info\">\r\n              <div class=\"metric-value\">{{ businessMetrics.fairness || 0 }}%</div>\r\n              <div class=\"metric-label\">用户公平性</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 系统状态 -->\r\n    <el-row :gutter=\"20\" class=\"detail-sections\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"monitoring-section\">\r\n          <template #header>\r\n            <div class=\"section-header section-header-left\">\r\n              <el-icon><Monitor /></el-icon>\r\n              <span>系统状态</span>\r\n            </div>\r\n          </template>\r\n\r\n          <div class=\"system-info\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">运行时间:</span>\r\n              <span class=\"value\">{{ formatUptime(systemMetrics.uptime) }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">内存使用:</span>\r\n              <span class=\"value\">{{ systemMetrics.memory?.used || 0 }}MB / {{ systemMetrics.memory?.total || 0 }}MB</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">缓存状态:</span>\r\n              <span class=\"value\" :class=\"{ 'status-connected': applicationMetrics.cache?.connected, 'status-disconnected': !applicationMetrics.cache?.connected }\">\r\n                {{ applicationMetrics.cache?.connected ? '已连接' : '未连接' }}\r\n              </span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">缓存键数:</span>\r\n              <span class=\"value\">{{ applicationMetrics.cache?.keys || 0 }}</span>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 队列状态 -->\r\n    <el-row :gutter=\"20\" class=\"detail-sections\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"monitoring-section\">\r\n          <template #header>\r\n            <div class=\"section-header\">\r\n              <div class=\"header-left\">\r\n                <el-icon><List /></el-icon>\r\n                <span>队列状态</span>\r\n              </div>\r\n               <div class=\"header-right\" v-if=\"clusterStatus.enabled\">\r\n                 <el-button-group>\r\n                   <el-button \r\n                     :type=\"currentMode === 'peak' ? 'primary' : 'default'\"\r\n                     :loading=\"modeSwitching\"\r\n                     @click=\"switchMode('peak')\"\r\n                     size=\"small\"\r\n                   >\r\n                     <el-icon><TrendCharts /></el-icon>\r\n                     高峰模式\r\n                   </el-button>\r\n                   <el-button \r\n                     :type=\"currentMode === 'offPeak' ? 'primary' : 'default'\"\r\n                     :loading=\"modeSwitching\"\r\n                     @click=\"switchMode('offPeak')\"\r\n                     size=\"small\"\r\n                   >\r\n                     <el-icon><Moon /></el-icon>\r\n                     非高峰模式\r\n                   </el-button>\r\n                 </el-button-group>\r\n               </div>\r\n            </div>\r\n          </template>\r\n          \r\n          <div class=\"queue-info\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">总任务数:</span>\r\n              <span class=\"value\">{{ businessMetrics.tasks?.total || 0 }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">等待中:</span>\r\n              <span class=\"value\">{{ businessMetrics.tasks?.waiting || 0 }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">处理中:</span>\r\n              <span class=\"value\">{{ businessMetrics.tasks?.processing || 0 }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">已完成:</span>\r\n              <span class=\"value\">{{ businessMetrics.tasks?.completed || 0 }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">失败:</span>\r\n              <span class=\"value\">{{ businessMetrics.tasks?.failed || 0 }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 队列列表（简化进程任务分配） -->\r\n          <div class=\"queue-table\">\r\n            <div class=\"stats-header\">\r\n              <span>队列列表</span>\r\n            </div>\r\n            <el-table :data=\"queueRows\" border style=\"width: 100%\" size=\"small\" :empty-text=\"loading ? '加载中...' : '暂无数据'\">\r\n              <el-table-column prop=\"type\" label=\"队列类型\" min-width=\"180\" />\r\n              <el-table-column label=\"消费队列的进程\" min-width=\"220\">\r\n          <template #default=\"{ row }\">\r\n                  <div class=\"consumers-container\">\r\n                    <el-tag \r\n                      v-for=\"(consumer, index) in row.consumers\" \r\n                      :key=\"index\"\r\n                      :type=\"getConsumerTagType(consumer)\"\r\n                      size=\"small\"\r\n                      class=\"consumer-tag\"\r\n                    >\r\n                      {{ formatConsumerDisplay(consumer) }}\r\n                    </el-tag>\r\n                    <span v-if=\"!row.consumers || row.consumers.length === 0\" class=\"no-consumers\">—</span>\r\n                  </div>\r\n          </template>\r\n        </el-table-column>\r\n              <el-table-column prop=\"active\" label=\"执行中任务数量\" width=\"160\" />\r\n              <el-table-column prop=\"waiting\" label=\"等待中任务数量\" width=\"160\" />\r\n            </el-table>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n    <!-- 告警信息 -->\r\n    <el-row :gutter=\"20\" v-if=\"alerts.length > 0\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"monitoring-section\">\r\n          <template #header>\r\n            <div class=\"section-header\">\r\n              <el-icon><Warning /></el-icon>\r\n              <span>系统告警</span>\r\n            </div>\r\n          </template>\r\n          \r\n          <el-alert\r\n            v-for=\"alert in alerts\"\r\n            :key=\"alert.timestamp\"\r\n            :title=\"alert.message\"\r\n            :type=\"getAlertType(alert.level)\"\r\n            :closable=\"false\"\r\n            class=\"alert-item\"\r\n          />\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 告警设置对话框 -->\r\n    <el-dialog\r\n      v-model=\"showSettings\"\r\n      title=\"告警设置\"\r\n      width=\"600px\"\r\n    >\r\n      <el-form :model=\"alertSettings\" label-width=\"150px\">\r\n        <el-form-item label=\"内存使用率阈值\">\r\n          <el-input-number\r\n            v-model=\"alertSettings.memoryUsage\"\r\n            :min=\"0\"\r\n            :max=\"100\"\r\n            :step=\"5\"\r\n            controls-position=\"right\"\r\n          />\r\n          <span class=\"unit\">%</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"队列长度阈值\">\r\n          <el-input-number\r\n            v-model=\"alertSettings.queueLength\"\r\n            :min=\"0\"\r\n            :step=\"10\"\r\n            controls-position=\"right\"\r\n          />\r\n          <span class=\"unit\">个任务</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"错误率阈值\">\r\n          <el-input-number\r\n            v-model=\"alertSettings.errorRate\"\r\n            :min=\"0\"\r\n            :max=\"100\"\r\n            :step=\"1\"\r\n            controls-position=\"right\"\r\n          />\r\n          <span class=\"unit\">%</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"响应时间阈值\">\r\n          <el-input-number\r\n            v-model=\"alertSettings.responseTime\"\r\n            :min=\"0\"\r\n            :step=\"100\"\r\n            controls-position=\"right\"\r\n          />\r\n          <span class=\"unit\">毫秒</span>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <el-button @click=\"showSettings = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveAlertSettings\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { \r\n  Refresh, \r\n  Setting, \r\n  Monitor, \r\n  List, \r\n  User, \r\n  Scale, \r\n  Connection, \r\n  Warning,\r\n  TrendCharts,\r\n  Moon\r\n} from '@element-plus/icons-vue'\r\nimport api from '@/api'\r\nimport axios from 'axios'\r\nimport store from '@/store'\r\n\r\nexport default {\r\n  name: 'MonitoringDashboard',\r\n  components: {\r\n    Refresh,\r\n    Setting,\r\n    Monitor,\r\n    List,\r\n    User,\r\n    Scale,\r\n    Connection,\r\n    Warning,\r\n    TrendCharts,\r\n    Moon\r\n  },\r\n  setup() {\r\n    const loading = ref(false)\r\n    const showSettings = ref(false)\r\n    const refreshInterval = ref(null)\r\n    const modeSwitching = ref(false)\r\n    const currentMode = ref('peak')\r\n    \r\n    // 监控数据\r\n    const systemMetrics = ref({})\r\n    const applicationMetrics = ref({})\r\n    const businessMetrics = ref({})\r\n    const clusterStatus = ref({})\r\n    const queueStatus = ref({})\r\n    const processStats = ref({})\r\n    const alerts = ref([])\r\n    \r\n    // 告警设置\r\n    const alertSettings = reactive({\r\n      memoryUsage: 80,\r\n      queueLength: 100,\r\n      errorRate: 5,\r\n      responseTime: 5000\r\n    })\r\n    \r\n    // 获取监控数据\r\n    const fetchMonitoringData = async () => {\r\n      try {\r\n        loading.value = true\r\n        const response = await api.monitoring.getOverview()\r\n        \r\n        if (response.data.success) {\r\n          const data = response.data.data\r\n          systemMetrics.value = data.system || {}\r\n          applicationMetrics.value = data.application || {}\r\n          businessMetrics.value = data.business || {}\r\n          clusterStatus.value = data.cluster || {}\r\n          queueStatus.value = data.queue || {}\r\n          processStats.value = data.queue?.processStats || {}\r\n          alerts.value = data.alerts || []\r\n          \r\n          // 更新当前模式\r\n          console.log('集群调度器状态:', data.cluster?.scheduler)\r\n          if (data.cluster?.scheduler?.displayMode) {\r\n            currentMode.value = data.cluster.scheduler.displayMode\r\n            console.log('使用 displayMode:', data.cluster.scheduler.displayMode)\r\n          } else if (data.cluster?.scheduler?.currentMode) {\r\n            currentMode.value = data.cluster.scheduler.currentMode\r\n            console.log('使用 currentMode:', data.cluster.scheduler.currentMode)\r\n          }\r\n          \r\n          // 调试信息\r\n          console.log('监控数据:', data)\r\n          console.log('进程统计:', processStats.value)\r\n          if (processStats.value.processes) {\r\n            console.log('进程列表:', processStats.value.processes)\r\n            processStats.value.processes.forEach((p, index) => {\r\n              console.log(`进程 ${index}:`, p)\r\n            })\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('获取监控数据失败:', error)\r\n        ElMessage.error('获取监控数据失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // 刷新数据\r\n    const refreshData = () => {\r\n      fetchMonitoringData()\r\n    }\r\n    \r\n    // 保存告警设置\r\n    const saveAlertSettings = async () => {\r\n      try {\r\n        await api.monitoring.setAlertThresholds(alertSettings)\r\n        ElMessage.success('告警设置已保存')\r\n        showSettings.value = false\r\n      } catch (error) {\r\n        console.error('保存告警设置失败:', error)\r\n        ElMessage.error('保存告警设置失败')\r\n      }\r\n    }\r\n\r\n    // 队列表格数据（优先使用后端的 queue 结构，回退到 processStats 聚合）\r\n    const queueRows = computed(() => {\r\n      const rows = []\r\n      const qs = queueStatus.value || {}\r\n      // 1) 后端若直接返回队列数组\r\n      if (Array.isArray(qs.queues)) {\r\n        qs.queues.forEach(q => {\r\n          const consumers = Array.isArray(q.consumers) ? q.consumers : []\r\n          // 如果没有消费者，添加一个默认的测试数据\r\n          const displayConsumers = consumers.length > 0 ? consumers : ['worker#test123']\r\n          rows.push({\r\n            type: getQueueTypeLabel(q.type) || '未知',\r\n            consumers: displayConsumers,\r\n            active: q.active ?? 0,\r\n            waiting: q.waiting ?? 0\r\n          })\r\n        })\r\n        return rows\r\n      }\r\n      // 2) 后端若以对象 byType 组织\r\n      if (qs.byType && typeof qs.byType === 'object') {\r\n        Object.keys(qs.byType).forEach(type => {\r\n          const item = qs.byType[type] || {}\r\n          const consumers = Array.isArray(item.consumers) ? item.consumers : []\r\n          rows.push({\r\n            type: getQueueTypeLabel(type),\r\n            consumers: consumers,\r\n            active: item.tasks?.active ?? 0,\r\n            waiting: item.tasks?.waiting ?? 0\r\n          })\r\n        })\r\n        return rows\r\n      }\r\n      // 3) 回退：从进程统计里按角色聚合\r\n      const ps = processStats.value || {}\r\n      if (Array.isArray(ps.processes) && ps.processes.length > 0) {\r\n        const groupByRole = {}\r\n        ps.processes.forEach(p => {\r\n          const role = p.role || 'unknown'\r\n          if (!groupByRole[role]) {\r\n            groupByRole[role] = { consumers: [], active: 0, waiting: 0 }\r\n          }\r\n          groupByRole[role].consumers.push(`${p.type || '进程'}#${p.pid || '-'}`)\r\n          groupByRole[role].active += Number(p.tasks?.active || 0)\r\n          groupByRole[role].waiting += Number(p.tasks?.waiting || 0)\r\n        })\r\n        Object.keys(groupByRole).forEach(role => {\r\n          const g = groupByRole[role]\r\n          const consumers = g.consumers\r\n          rows.push({\r\n            type: getRoleLabel(role),\r\n            consumers: consumers,\r\n            active: g.active,\r\n            waiting: g.waiting\r\n          })\r\n        })\r\n      }\r\n      return rows\r\n    })\r\n\r\n    // 格式化运行时间\r\n    const formatUptime = (seconds) => {\r\n      if (!seconds) return '0秒'\r\n      \r\n      const hours = Math.floor(seconds / 3600)\r\n      const minutes = Math.floor((seconds % 3600) / 60)\r\n      const secs = Math.floor(seconds % 60)\r\n      \r\n      if (hours > 0) {\r\n        return `${hours}小时${minutes}分钟`\r\n      } else if (minutes > 0) {\r\n        return `${minutes}分钟${secs}秒`\r\n      } else {\r\n        return `${secs}秒`\r\n      }\r\n    }\r\n\r\n    // 格式化启动时间\r\n    const formatStartTime = (timestamp) => {\r\n      if (!timestamp) return '未知'\r\n      \r\n      try {\r\n        const date = new Date(timestamp)\r\n        return date.toLocaleString('zh-CN', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        })\r\n      } catch (error) {\r\n        return '格式错误'\r\n      }\r\n    }\r\n    \r\n    // 获取状态类型\r\n    const getStatusType = (status) => {\r\n      const statusMap = {\r\n        'ready': 'success',\r\n        'active': 'success',\r\n        'timeout': 'danger',\r\n        'offline': 'info'\r\n      }\r\n      return statusMap[status] || 'info'\r\n    }\r\n    \r\n    // 获取角色类型\r\n    const getRoleType = (role) => {\r\n      const roleMap = {\r\n        'historyLog': 'warning',\r\n        'userRequest': 'success',\r\n        'monitor': 'info'\r\n      }\r\n      return roleMap[role] || 'default'\r\n    }\r\n    \r\n    // 获取角色标签\r\n    const getRoleLabel = (role) => {\r\n      const roleMap = {\r\n        'historyLog': '历史日志',\r\n        'userRequest': '用户请求',\r\n        'monitor': '目录监控'\r\n      }\r\n      return roleMap[role] || role\r\n    }\r\n    \r\n    // 获取队列类型标签\r\n    const getQueueTypeLabel = (type) => {\r\n      const typeMap = {\r\n        'logProcessingQueue': '日志处理队列',\r\n        'realtimeProcessingQueue': '实时处理队列', \r\n        'historicalProcessingQueue': '历史处理队列',\r\n        'surgeryAnalysisQueue': '手术分析队列'\r\n      }\r\n      return typeMap[type] || type\r\n    }\r\n    \r\n    // 获取消费者标签类型\r\n    const getConsumerTagType = (consumer) => {\r\n      if (consumer.includes('_userRequest') || consumer.includes('userRequest') || consumer.includes('用户请求')) {\r\n        return 'success' // 绿色 - 用户请求进程\r\n      } else if (consumer.includes('_general') || consumer.includes('general') || consumer.includes('通用')) {\r\n        return 'primary' // 蓝色 - 通用进程\r\n      } else if (consumer.includes('master') || consumer.includes('主进程')) {\r\n        return 'warning' // 橙色 - 主进程\r\n      } else {\r\n        return 'info' // 灰色 - 其他进程\r\n      }\r\n    }\r\n    \r\n    // 格式化消费者显示\r\n    const formatConsumerDisplay = (consumer) => {\r\n      // 解析进程信息，格式如：worker_general#1234 或 worker_userRequest#5678 或 master#5678\r\n      const parts = consumer.split('#')\r\n      if (parts.length === 2) {\r\n        const [typeWithRole, pid] = parts\r\n        let type = typeWithRole\r\n        let role = ''\r\n        \r\n        // 检查是否包含角色信息\r\n        if (typeWithRole.includes('_')) {\r\n          const roleParts = typeWithRole.split('_')\r\n          type = roleParts[0]\r\n          role = roleParts[1]\r\n        }\r\n        \r\n        const typeMap = {\r\n          'worker': '工作进程',\r\n          'master': '主进程'\r\n        }\r\n        \r\n        const roleMap = {\r\n          'general': '通用',\r\n          'userRequest': '用户请求',\r\n          'monitor': '监控'\r\n        }\r\n        \r\n        const typeLabel = typeMap[type] || type\r\n        const roleLabel = role ? `(${roleMap[role] || role})` : ''\r\n        \r\n        return `${typeLabel}${roleLabel}#${pid}`\r\n      }\r\n      return consumer\r\n    }\r\n    \r\n    \r\n    // 切换集群模式\r\n    const switchMode = async (mode) => {\r\n      if (modeSwitching.value) {\r\n        ElMessage.warning('正在切换模式中，请稍候...')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        modeSwitching.value = true\r\n        ElMessage.info(`正在切换到${mode === 'peak' ? '高峰' : '非高峰'}模式，请等待任务完成...`)\r\n        \r\n        // 直接使用axios调用API，携带认证token\r\n        const token = store.state.auth.token\r\n        const response = await axios.post('/api/monitoring/cluster/mode', { mode }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        })\r\n        \r\n        if (response.data.success) {\r\n          ElMessage.success(response.data.message)\r\n          // 刷新监控数据，让API返回正确的模式状态\r\n          await fetchMonitoringData()\r\n        } else {\r\n          ElMessage.error(response.data.message)\r\n        }\r\n      } catch (error) {\r\n        console.error('切换模式失败:', error)\r\n        ElMessage.error('切换模式失败: ' + (error.response?.data?.message || error.message))\r\n      } finally {\r\n        modeSwitching.value = false\r\n      }\r\n    }\r\n    \r\n    // 获取告警类型\r\n    const getAlertType = (level) => {\r\n      const levelMap = {\r\n        'warning': 'warning',\r\n        'critical': 'error',\r\n        'error': 'error'\r\n      }\r\n      return levelMap[level] || 'info'\r\n    }\r\n    \r\n    // 启动自动刷新\r\n    const startAutoRefresh = () => {\r\n      refreshInterval.value = setInterval(fetchMonitoringData, 30000) // 每30秒刷新\r\n    }\r\n    \r\n    // 停止自动刷新\r\n    const stopAutoRefresh = () => {\r\n      if (refreshInterval.value) {\r\n        clearInterval(refreshInterval.value)\r\n        refreshInterval.value = null\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      fetchMonitoringData()\r\n      startAutoRefresh()\r\n    })\r\n    \r\n    onUnmounted(() => {\r\n      stopAutoRefresh()\r\n    })\r\n    \r\n    return {\r\n      loading,\r\n      showSettings,\r\n      modeSwitching,\r\n      currentMode,\r\n      systemMetrics,\r\n      applicationMetrics,\r\n      businessMetrics,\r\n      clusterStatus,\r\n      queueStatus,\r\n      processStats,\r\n      alerts,\r\n      alertSettings,\r\n      queueRows,\r\n      refreshData,\r\n      saveAlertSettings,\r\n      formatUptime,\r\n      formatStartTime,\r\n      getStatusType,\r\n      getRoleType,\r\n      getRoleLabel,\r\n      getQueueTypeLabel,\r\n      getConsumerTagType,\r\n      formatConsumerDisplay,\r\n      switchMode,\r\n      getAlertType\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.monitoring-dashboard {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.overview-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.metric-card {\r\n  height: 72px; /* 缩小40%：120px * 0.6 = 72px */\r\n}\r\n\r\n.metric-content {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.metric-icon {\r\n  width: 36px; /* 缩小40%：60px * 0.6 = 36px */\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px; /* 缩小40%：15px * 0.8 = 12px */\r\n  font-size: 18px; /* 缩小40%：24px * 0.75 = 18px */\r\n  color: white;\r\n}\r\n\r\n.metric-icon.cpu {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n}\r\n\r\n.metric-icon.queue {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n}\r\n\r\n.metric-icon.users {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n}\r\n\r\n.metric-icon.fairness {\r\n  background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);\r\n}\r\n\r\n.metric-info {\r\n  flex: 1;\r\n}\r\n\r\n.metric-value {\r\n  font-size: 20px; /* 缩小40%：28px * 0.7 = 20px */\r\n  font-weight: bold;\r\n  color: #303133;\r\n  line-height: 1;\r\n}\r\n\r\n.metric-label {\r\n  font-size: 12px; /* 缩小40%：14px * 0.85 = 12px */\r\n  color: #909399;\r\n  margin-top: 4px; /* 缩小40%：5px * 0.8 = 4px */\r\n}\r\n\r\n.detail-sections {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.monitoring-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 8px;\r\n  font-weight: 600;\r\n}\r\n\r\n.section-header-left {\r\n  justify-content: flex-start;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.system-info,\r\n.queue-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.info-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.label {\r\n  font-weight: 500;\r\n  color: #606266;\r\n}\r\n\r\n.value {\r\n  font-weight: 600;\r\n  color: #303133;\r\n}\r\n\r\n.status-connected {\r\n  color: #67c23a;\r\n}\r\n\r\n.status-disconnected {\r\n  color: #f56c6c;\r\n}\r\n\r\n.cluster-info {\r\n  margin-top: 10px;\r\n}\r\n\r\n.cluster-summary {\r\n  display: flex;\r\n  gap: 30px;\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: #f8f9fa;\r\n  border-radius: 6px;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.workers-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n.alert-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.alert-item:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.unit {\r\n  margin-left: 5px;\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n/* 队列表格样式 */\r\n.queue-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n.stats-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  font-weight: 600;\r\n  color: #303133;\r\n}\r\n\r\n.stats-header .el-icon {\r\n  margin-right: 8px;\r\n  color: #409eff;\r\n}\r\n\r\n/* 消费者标签样式 */\r\n.consumers-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 4px;\r\n  align-items: center;\r\n}\r\n\r\n.consumer-tag {\r\n  margin: 0;\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n}\r\n\r\n.no-consumers {\r\n  color: #909399;\r\n  font-style: italic;\r\n}\r\n</style>\r\n","import { render } from \"./MonitoringDashboard.vue?vue&type=template&id=790e62a9&scoped=true\"\nimport script from \"./MonitoringDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./MonitoringDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./MonitoringDashboard.vue?vue&type=style&index=0&id=790e62a9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-790e62a9\"]])\n\nexport default __exports__"],"names":["class","type","icon","Refresh","refreshData","loading","Setting","showSettings","gutter","span","systemMetrics","memory","usage","businessMetrics","tasks","waiting","users","active","fairness","header","formatUptime","uptime","used","total","applicationMetrics","cache","connected","keys","clusterStatus","currentMode","modeSwitching","switchMode","size","processing","completed","failed","data","queueRows","border","style","prop","label","default","row","consumers","consumer","index","key","getConsumerTagType","formatConsumerDisplay","length","width","alerts","alert","timestamp","title","message","getAlertType","level","closable","footer","saveAlertSettings","model","alertSettings","memoryUsage","min","max","step","queueLength","errorRate","responseTime","name","components","Monitor","List","User","Scale","Connection","Warning","TrendCharts","Moon","setup","refreshInterval","queueStatus","processStats","fetchMonitoringData","async","value","response","api","monitoring","getOverview","success","system","application","business","cluster","queue","console","log","scheduler","displayMode","processes","forEach","p","error","setAlertThresholds","rows","qs","Array","isArray","queues","q","displayConsumers","push","getQueueTypeLabel","byType","Object","item","ps","groupByRole","role","pid","Number","g","getRoleLabel","seconds","hours","Math","floor","minutes","secs","formatStartTime","date","Date","toLocaleString","year","month","day","hour","minute","second","getStatusType","status","statusMap","getRoleType","roleMap","typeMap","includes","parts","split","typeWithRole","roleParts","typeLabel","roleLabel","mode","warning","info","token","store","state","auth","axios","post","headers","levelMap","startAutoRefresh","setInterval","stopAutoRefresh","clearInterval","__exports__","render"],"sourceRoot":""}