{"version":3,"file":"js/700.a67b0921.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/BatchAnalysis.vue","webpack://logtool-frontend/./src/components/VirtualTable.vue","webpack://logtool-frontend/./src/components/VirtualTable.vue?4f98","webpack://logtool-frontend/./src/views/BatchAnalysis.vue?7d02"],"sourcesContent":["<template>\r\n  <div class=\"batch-analysis-container\">\r\n    <!-- 主要内容 -->\r\n    <div class=\"analysis-card-wrapper\">\r\n      <el-card class=\"analysis-card\">\r\n      <div class=\"card-header\" :style=\"{ borderBottom: 'none' }\">\r\n        <div class=\"header-left\">\r\n          <span class=\"title\">批量日志查看</span>\r\n          <el-tag v-if=\"batchCount > 0 && selectedLogsCount > 0\" type=\"info\" size=\"small\">\r\n              设备编号：{{ selectedLogs[0]?.device_id || '未知' }}\r\n            </el-tag>\r\n          <el-tooltip placement=\"bottom\" effect=\"light\" transition=\"el-fade-in-linear\" popper-class=\"selected-files-popper\" :disabled=\"selectedLogsCount === 0\">\r\n            <template #content>\r\n              <div class=\"selected-files-tooltip\">\r\n                <el-tag v-for=\"log in selectedLogs\" :key=\"log.id\" size=\"small\" style=\"margin: 2px 4px 2px 0;\">\r\n                  {{ log.original_name }}\r\n                </el-tag>\r\n              </div>\r\n            </template>       \r\n            <el-tag type=\"info\" size=\"small\">\r\n              已选择 {{ selectedLogsCount }} 个日志文件\r\n            </el-tag>\r\n          </el-tooltip>\r\n        </div>\r\n        <div class=\"header-right\">\r\n          <el-button \r\n            v-if=\"!loading && batchCount > 0\" \r\n            @click=\"exportToCSV\" \r\n            type=\"success\" \r\n            size=\"small\"\r\n          >\r\n            <el-icon><Download /></el-icon>\r\n            导出CSV\r\n          </el-button>\r\n          <el-button \r\n            v-if=\"!loading && selectedLogsCount > 0 && batchCount > 0\" \r\n            @click=\"showSurgeryStatistics\" \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            style=\"margin-left: 10px;\"\r\n          >\r\n            <el-icon><DataAnalysis /></el-icon>\r\n            手术统计\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 搜索和筛选 -->\r\n      <div class=\"search-section\" :style=\"{ marginTop: '8px' }\">\r\n        <div class=\"search-grid\">\r\n          <!-- 1/4 时间搜索框 -->\r\n          <div class=\"grid-item\">\r\n            <div class=\"item-title\">时间范围</div>\r\n            <el-date-picker\r\n              v-model=\"timeRange\"\r\n              type=\"datetimerange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n              format=\"YYYY-MM-DD HH:mm:ss\"\r\n              value-format=\"YYYY-MM-DD HH:mm:ss\"\r\n              class=\"time-range\"\r\n              size=\"small\"\r\n               :default-value=\"defaultPickerRange\"\r\n              :disabled-date=\"disableOutOfRangeDates\"\r\n              @change=\"handleTimeRangeChange\"\r\n            />\r\n          </div>\r\n          \r\n          <!-- 2/4 简单搜索框 -->\r\n          <div class=\"grid-item\">\r\n            <div class=\"item-title\">关键字</div>\r\n            <el-input\r\n              v-model=\"searchKeyword\"\r\n              placeholder=\"搜索释义内容或故障码\"\r\n              class=\"search-input\"\r\n              clearable\r\n              @input=\"handleSearch\"\r\n              @compositionstart=\"onCompositionStart\"\r\n              @compositionend=\"onCompositionEnd\"\r\n              size=\"small\"\r\n            >\r\n              <template #prefix>\r\n                <el-icon><Search /></el-icon>\r\n              </template>\r\n            </el-input>\r\n          </div>\r\n\r\n          <!-- 3/4 高级搜索入口 -->\r\n          <div class=\"grid-item\">\r\n            <div class=\"item-title\">高级搜索</div>\r\n            <div class=\"advanced-actions\">\r\n              <el-button size=\"small\" type=\"primary\" plain @click=\"showAdvancedFilter = true\">打开高级筛选</el-button>\r\n              <div class=\"advanced-summary\" v-if=\"leafConditionCount > 0\">\r\n                已添加 {{ leafConditionCount }} 个条件（逻辑：{{ filtersRoot.logic }}）\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 4/4 清除搜索 -->\r\n          <div class=\"grid-item\">\r\n            <div class=\"item-title\">清除搜索</div>\r\n            <el-button size=\"small\" @click=\"clearFilters\">清除所有条件</el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 搜索表达式展示 -->\r\n        <div class=\"search-expression\" v-if=\"searchExpression\">\r\n          <span class=\"label\">搜索表达式：</span>\r\n          <span class=\"expr\">{{ searchExpression }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 日志条目表格 -->\r\n      <div class=\"entries-section\">\r\n        <div class=\"section-header\">\r\n          <h3>日志条目 ({{ filteredCount }})</h3>\r\n        </div>\r\n\r\n        <!-- 加载状态 -->\r\n        <div v-if=\"loading\" class=\"loading-section\">\r\n          <el-empty description=\"正在加载日志数据...\" />\r\n        </div>\r\n\r\n        <!-- 数据表格 -->\r\n        <div v-else class=\"table-container\">\r\n          <!-- 虚拟滚动表格 -->\r\n          <VirtualTable\r\n            v-if=\"useVirtualScroll\"\r\n            ref=\"virtualTableRef\"\r\n            :data=\"paginatedEntries\"\r\n            :columns=\"tableColumns\"\r\n            :item-height=\"40\"\r\n            :buffer=\"10\"\r\n            style=\"height: 60vh;\"\r\n            class=\"antd-table\"\r\n            @load-more=\"handleLoadMore\"\r\n          >\r\n            <template #log_name=\"{ row }\">\r\n              <ExplanationCell :text=\"row.log_name\" />\r\n            </template>\r\n            <template #timestamp=\"{ row }\">\r\n              {{ formatTimestamp(row.timestamp) }}\r\n            </template>\r\n            <template #explanation=\"{ row }\">\r\n              <ExplanationCell :text=\"row.explanation\" />\r\n            </template>\r\n          </VirtualTable>\r\n          \r\n          <!-- 传统表格（备用） -->\r\n          <el-table \r\n            v-else\r\n            :data=\"paginatedEntries\" \r\n            style=\"width: 100%\"\r\n            v-loading=\"loading\"\r\n            height=\"60vh\"\r\n            :stripe=\"false\"\r\n            class=\"antd-table\"\r\n            table-layout=\"fixed\"\r\n            @current-change=\"forceRelayout\"\r\n            @selection-change=\"forceRelayout\"\r\n            @sort-change=\"forceRelayout\"\r\n            @filter-change=\"forceRelayout\"\r\n            @expand-change=\"forceRelayout\"\r\n          >\r\n            <el-table-column prop=\"log_name\" label=\"日志文件\" width=\"150\">\r\n              <template #default=\"{ row }\">\r\n                <ExplanationCell :text=\"row.log_name\" />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" sortable>\r\n              <template #default=\"{ row }\">\r\n                {{ formatTimestamp(row.timestamp) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"error_code\" label=\"故障码\" width=\"120\" sortable />\r\n            <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\r\n            <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\r\n            <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\r\n            <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\r\n            <el-table-column prop=\"explanation\" label=\"释义\" width=\"400\">\r\n              <template #default=\"{ row }\">\r\n                <ExplanationCell :text=\"row.explanation\" />\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination-wrapper\" v-if=\"filteredCount > 0\">\r\n          <el-pagination\r\n            :current-page=\"currentPage\"\r\n            :page-size=\"pageSize\"\r\n            :page-sizes=\"[50, 100, 200, 500]\"\r\n            :total=\"totalCount\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 高级筛选弹窗 -->\r\n    <el-dialog v-model=\"showAdvancedFilter\" title=\"高级筛选\" width=\"880px\">\r\n      <div class=\"advanced-filter\">\r\n        <!-- 1. 条件组（支持嵌套） -->\r\n        <div class=\"section\">\r\n          <div class=\"section-title-row\">\r\n            <div class=\"section-title\">1. 条件组（支持嵌套）</div>\r\n            <div class=\"ops-right\">\r\n              <el-switch\r\n                v-model=\"useLocalAdvanced\"\r\n                size=\"small\"\r\n                active-text=\"本地\"\r\n                inactive-text=\"服务端\"\r\n                inline-prompt\r\n              />\r\n              <el-button \r\n                size=\"small\" \r\n                type=\"danger\" \r\n                text \r\n                @click=\"clearAllConditionsOnly\" \r\n                :disabled=\"!filtersRoot.conditions || filtersRoot.conditions.length === 0\"\r\n              >清空所有条件</el-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"expr-preview\" v-if=\"advancedExpression\" ref=\"exprPreviewRef\">\r\n            <span class=\"label\">表达式预览：</span>\r\n            <span class=\"expr\">{{ advancedExpression }}</span>\r\n          </div>\r\n          <!-- 常用搜索表达式（内嵌于条件组下，位于表达式预览下侧） -->\r\n          <div class=\"common-templates\" v-if=\"templates && templates.length\">\r\n            <div class=\"section-title\">常用搜索表达式</div>\r\n            <div class=\"tags-ops\">\r\n              <el-button size=\"small\" type=\"primary\" plain @click=\"applySelectedTemplate\" :disabled=\"!selectedTemplateName\">应用选择表达式</el-button>\r\n              <span class=\"hint\">选择表达式并应用，条件会自动填充进“添加条件”区域</span>\r\n            </div>\r\n            <div class=\"tags-wrap antd-tags single-select\">\r\n              <a-checkable-tag\r\n                v-for=\"tpl in templates\"\r\n                :key=\"tpl.name\"\r\n                :checked=\"selectedTemplateName === tpl.name\"\r\n                @change=\"(checked) => onTemplateSingleSelect(tpl.name, checked)\"\r\n                class=\"tpl-tag bordered\"\r\n              >\r\n                {{ tpl.name }}\r\n              </a-checkable-tag>\r\n            </div>\r\n          </div>\r\n          <div class=\"group-root\">\r\n            <div class=\"group-header\">\r\n              <span>根组逻辑：</span>\r\n              <el-radio-group v-model=\"filtersRoot.logic\">\r\n            <el-radio-button label=\"AND\">AND</el-radio-button>\r\n            <el-radio-button label=\"OR\">OR</el-radio-button>\r\n          </el-radio-group>\r\n              <div class=\"group-actions\">\r\n                <el-button size=\"small\" type=\"primary\" @click=\"addConditionToGroup(filtersRoot)\">添加条件</el-button>\r\n                <el-button size=\"small\" @click=\"addGroupToGroup(filtersRoot)\">添加子组</el-button>\r\n        </div>\r\n            </div>\r\n            <ConditionGroup\r\n              :group=\"filtersRoot\"\r\n              :get-operator-options=\"getOperatorOptions\"\r\n              :on-field-change=\"onFieldChange\"\r\n              :on-operator-change=\"onOperatorChange\"\r\n              :add-condition-to-group=\"addConditionToGroup\"\r\n              :add-group-to-group=\"addGroupToGroup\"\r\n              :remove-node-at=\"removeNodeAt\"\r\n              :is-root=\"true\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 2. 导入表达式 -->\r\n        <div class=\"section\">\r\n          <div class=\"section-title\">2. 导入表达式</div>\r\n        <div class=\"import-row\">\r\n          <el-upload \r\n            :show-file-list=\"false\" \r\n            accept=\"application/json\"\r\n            :before-upload=\"beforeImportTemplates\"\r\n          >\r\n              <el-button size=\"small\">从文件导入(JSON)</el-button>\r\n          </el-upload>\r\n        </div>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"showAdvancedFilter = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"applyAdvancedFilters\">应用</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick, h, resolveComponent } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { Search, Download, ArrowLeft, DataAnalysis, Warning } from '@element-plus/icons-vue'\r\nimport api from '@/api'\r\nimport VirtualTable from '@/components/VirtualTable.vue'\r\n\r\nexport default {\r\n  name: 'BatchAnalysis',\r\n  components: {\r\n    Search,\r\n    Download,\r\n    ArrowLeft,\r\n    DataAnalysis,\r\n    Warning,\r\n    VirtualTable,\r\n    ExplanationCell: {\r\n      name: 'ExplanationCell',\r\n      props: { text: { type: String, default: '' } },\r\n      setup(props) {\r\n        const containerRef = ref(null)\r\n        const needsTooltip = ref(false)\r\n        let resizeObserver = null\r\n\r\n        const measure = () => {\r\n          const el = containerRef.value\r\n          if (!el) return\r\n          // 使用 > 而非 >=，并允许 1px 阈值容错\r\n          needsTooltip.value = (el.scrollWidth - el.clientWidth) > 1\r\n        }\r\n\r\n        const handleMouseEnter = () => {\r\n          // 悬停时再即时测量，保证分页切换后也能正确判断\r\n          measure()\r\n        }\r\n\r\n        onMounted(async () => {\r\n          await nextTick()\r\n          measure()\r\n          if ('ResizeObserver' in window) {\r\n            resizeObserver = new ResizeObserver(() => measure())\r\n            if (containerRef.value) resizeObserver.observe(containerRef.value)\r\n          } else {\r\n            window.addEventListener('resize', measure)\r\n          }\r\n        })\r\n\r\n        onBeforeUnmount(() => {\r\n          if (resizeObserver && containerRef.value) resizeObserver.unobserve(containerRef.value)\r\n          if (resizeObserver) resizeObserver.disconnect()\r\n          resizeObserver = null\r\n          window.removeEventListener('resize', measure)\r\n        })\r\n\r\n        return () => h(resolveComponent('el-tooltip'), {\r\n          content: props.text,\r\n          placement: 'top',\r\n          effect: 'dark',\r\n          popperClass: 'explanation-tooltip dark',\r\n          teleported: true,\r\n          showAfter: 120,\r\n          disabled: !needsTooltip.value\r\n        }, {\r\n          default: () => h('span', {\r\n            ref: containerRef,\r\n            class: 'explanation-ellipsis',\r\n            style: 'display:inline-block;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;',\r\n            onMouseenter: handleMouseEnter\r\n          }, props.text)\r\n        })\r\n      }\r\n    },\r\n    ConditionGroup: {\r\n      name: 'ConditionGroup',\r\n      props: {\r\n        group: { type: Object, required: true },\r\n        getOperatorOptions: { type: Function, required: true },\r\n        onFieldChange: { type: Function, required: true },\r\n        onOperatorChange: { type: Function, required: true },\r\n        addConditionToGroup: { type: Function, required: true },\r\n        addGroupToGroup: { type: Function, required: true },\r\n        removeNodeAt: { type: Function, required: true },\r\n        isRoot: { type: Boolean, default: false }\r\n      },\r\n      setup(props) {\r\n        const ElSelect = resolveComponent('el-select')\r\n        const ElOption = resolveComponent('el-option')\r\n        const ElInput = resolveComponent('el-input')\r\n        const ElButton = resolveComponent('el-button')\r\n        const ElRadioGroup = resolveComponent('el-radio-group')\r\n        const ElRadioButton = resolveComponent('el-radio-button')\r\n        const Self = resolveComponent('ConditionGroup')\r\n\r\n        const renderCondition = (node, idx, parent) => {\r\n          return h('div', { class: 'condition', key: idx }, [\r\n            h(ElSelect, {\r\n              modelValue: node.field,\r\n              style: 'width: 140px;',\r\n              placeholder: '字段',\r\n              'onUpdate:modelValue': (v) => { \r\n                // 确保node是一个对象，而不是原始类型\r\n                if (typeof node === 'object' && node !== null) {\r\n                  node.field = v; \r\n                  props.onFieldChange(node)\r\n                } else {\r\n                  // 如果node是原始类型，需要重新创建对象\r\n                  Object.assign(node, { field: v })\r\n                  props.onFieldChange(node)\r\n                }\r\n              }\r\n            }, {\r\n              default: () => [\r\n                h(ElOption, { label: '时间戳', value: 'timestamp' }),\r\n                h(ElOption, { label: '故障码', value: 'error_code' }),\r\n                h(ElOption, { label: '参数1', value: 'param1' }),\r\n                h(ElOption, { label: '参数2', value: 'param2' }),\r\n                h(ElOption, { label: '参数3', value: 'param3' }),\r\n                h(ElOption, { label: '参数4', value: 'param4' }),\r\n                h(ElOption, { label: '释义', value: 'explanation' })\r\n              ]\r\n            }),\r\n            h(ElSelect, {\r\n              modelValue: node.operator,\r\n              style: 'width: 150px; margin-left: 8px;',\r\n              placeholder: '操作符',\r\n              'onUpdate:modelValue': (v) => { \r\n                // 确保node是一个对象，而不是原始类型\r\n                if (typeof node === 'object' && node !== null) {\r\n                  node.operator = v; \r\n                  props.onOperatorChange(node)\r\n                } else {\r\n                  // 如果node是原始类型，需要重新创建对象\r\n                  Object.assign(node, { operator: v })\r\n                  props.onOperatorChange(node)\r\n                }\r\n              }\r\n            }, {\r\n              default: () => (props.getOperatorOptions(node.field) || []).map(op => h(ElOption, { label: op.label, value: op.value, key: op.value }))\r\n            }),\r\n            node.operator === 'between'\r\n              ? [\r\n                  h(ElInput, {\r\n                    modelValue: Array.isArray(node.value) ? node.value[0] : '',\r\n                    placeholder: '起',\r\n                    style: 'width: 140px; margin-left:8px;',\r\n                    'onUpdate:modelValue': (v) => { \r\n                      const arr = Array.isArray(node.value) ? node.value.slice(0,2) : ['', '']; \r\n                      arr[0] = v; \r\n                      node.value = arr \r\n                    }\r\n                  }),\r\n                  h(ElInput, {\r\n                    modelValue: Array.isArray(node.value) ? node.value[1] : '',\r\n                    placeholder: '止',\r\n                    style: 'width: 140px; margin-left:8px;',\r\n                    'onUpdate:modelValue': (v) => { \r\n                      const arr = Array.isArray(node.value) ? node.value.slice(0,2) : ['', '']; \r\n                      arr[1] = v; \r\n                      node.value = arr \r\n                    }\r\n                  })\r\n                ]\r\n              : h(ElInput, {\r\n                  modelValue: Array.isArray(node.value) ? node.value.join(',') : (node.value ?? ''),\r\n                  placeholder: '值',\r\n                  style: 'width: 300px; margin-left:8px;',\r\n                  'onUpdate:modelValue': (v) => { \r\n                    // 确保node.value是一个对象，而不是原始类型\r\n                    if (typeof node.value === 'object' && node.value !== null) {\r\n                      node.value = v\r\n                    } else {\r\n                      // 如果node.value是原始类型，需要重新创建对象\r\n                      Object.assign(node, { value: v })\r\n                    }\r\n                  }\r\n                }),\r\n            h(ElButton, { type: 'danger', text: true, style: 'margin-left:8px;', onClick: () => props.removeNodeAt(parent, idx) }, { default: () => '删除' })\r\n          ])\r\n        }\r\n\r\n        const renderGroup = (group, parent, depth = 0) => {\r\n          const children = Array.isArray(group.conditions) ? group.conditions : []\r\n          const style = depth > 0 ? `margin-left: ${depth * 12}px;` : ''\r\n          return h('div', { class: 'group-box', style }, [\r\n            ...children.map((node, idx) => {\r\n              if (node && node.field) {\r\n                return renderCondition(node, idx, group)\r\n              }\r\n              return h('div', { class: 'group-box', key: idx, style: `margin-left: ${(depth + 1) * 12}px;` }, [\r\n                h('div', { class: 'group-header nested' }, [\r\n                  h('span', null, '组逻辑：'),\r\n                  h(ElRadioGroup, {\r\n                    modelValue: node.logic || 'AND',\r\n                    'onUpdate:modelValue': (v) => { \r\n                      // 确保node是一个对象，而不是原始类型\r\n                      if (typeof node === 'object' && node !== null) {\r\n                        node.logic = v\r\n                      } else {\r\n                        // 如果node是原始类型，需要重新创建对象\r\n                        Object.assign(node, { logic: v })\r\n                      }\r\n                    }\r\n                  }, {\r\n                    default: () => [\r\n                      h(ElRadioButton, { label: 'AND' }, { default: () => 'AND' }),\r\n                      h(ElRadioButton, { label: 'OR' }, { default: () => 'OR' })\r\n                    ]\r\n                  }),\r\n                  h('div', { class: 'group-actions' }, [\r\n                    h(ElButton, { size: 'small', type: 'primary', onClick: () => props.addConditionToGroup(node) }, { default: () => '添加条件' }),\r\n                    h(ElButton, { size: 'small', onClick: () => props.addGroupToGroup(node) }, { default: () => '添加子组' }),\r\n                    h(ElButton, { size: 'small', type: 'danger', text: true, onClick: () => props.removeNodeAt(group, idx) }, { default: () => '删除组' })\r\n                  ])\r\n                ]),\r\n                h(Self, {\r\n                  group: node,\r\n                  getOperatorOptions: props.getOperatorOptions,\r\n                  onFieldChange: props.onFieldChange,\r\n                  onOperatorChange: props.onOperatorChange,\r\n                  addConditionToGroup: props.addConditionToGroup,\r\n                  addGroupToGroup: props.addGroupToGroup,\r\n                  removeNodeAt: props.removeNodeAt\r\n                , depth: (depth + 1) })\r\n              ])\r\n            }),\r\n            h('div', { class: 'group-actions' }, [\r\n              h(ElButton, { size: 'small', type: 'primary', onClick: () => props.addConditionToGroup(group) }, { default: () => '添加条件' }),\r\n              h(ElButton, { size: 'small', onClick: () => props.addGroupToGroup(group) }, { default: () => '添加子组' })\r\n            ])\r\n          ])\r\n        }\r\n\r\n        return () => renderGroup(props.group, props.group, 0)\r\n      }\r\n    }\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    \r\n    const loading = ref(false)\r\n    const selectedLogs = ref([])\r\n    const batchLogEntries = ref([])\r\n    const searchKeyword = ref('')\r\n    const timeRange = ref(null)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(100)\r\n    const totalCount = ref(0)\r\n    const totalPages = ref(0)\r\n    // 全量时间范围（来自后端聚合），用于限制时间选择器\r\n    const globalMinTs = ref(null)\r\n    const globalMaxTs = ref(null)\r\n    const advancedMode = ref(false)\r\n    const useLocalAdvanced = ref(false)\r\n    \r\n    // 虚拟滚动相关\r\n    const useVirtualScroll = ref(true)\r\n    // 是否允许滚动自动加载下一页（按需开启，默认关闭）\r\n    const allowAutoLoad = ref(false)\r\n    const virtualTableRef = ref(null)\r\n    const tableColumns = ref([\r\n      { prop: 'log_name', label: '日志文件', width: '150px' },\r\n      { prop: 'timestamp', label: '时间戳', width: '180px' },\r\n      { prop: 'error_code', label: '故障码', width: '120px' },\r\n      { prop: 'param1', label: '参数1', width: '100px' },\r\n      { prop: 'param2', label: '参数2', width: '100px' },\r\n      { prop: 'param3', label: '参数3', width: '100px' },\r\n      { prop: 'param4', label: '参数4', width: '100px' },\r\n      { prop: 'explanation', label: '释义', width: '400px' }\r\n    ])\r\n\r\n    // 高级筛选弹窗与条件\r\n    const showAdvancedFilter = ref(false)\r\n    const filtersRoot = ref({ logic: 'AND', conditions: [] })\r\n    \r\n    // 手术统计相关\r\n    const surgeryStatisticsVisible = ref(false)\r\n    const surgeryData = ref(null)\r\n    const analyzing = ref(false)\r\n    const templates = ref([])\r\n    const selectedTemplateName = ref('')\r\n    const importExpressionText = ref('')\r\n\r\n    // 搜索表达式（显示在搜索卡片中）\r\n    const groupToString = (node) => {\r\n      if (!node) return ''\r\n      // 叶子条件\r\n      if (node.field && node.operator) {\r\n        const val = Array.isArray(node.value) ? node.value.join(',') : (node.value ?? '')\r\n        return `${node.field} ${node.operator} ${val}`\r\n      }\r\n      // 分组：始终使用括号包裹，不再在前缀标注逻辑 [AND]/[OR]\r\n      if (Array.isArray(node.conditions)) {\r\n        const logic = node.logic || 'AND'\r\n        const inner = node.conditions\r\n          .map(child => groupToString(child))\r\n          .filter(Boolean)\r\n          .join(` ${logic} `)\r\n        if (!inner) return ''\r\n        // 根组与子组均仅使用括号包裹，逻辑通过括号内部的连接词体现\r\n        if (node === filtersRoot.value) {\r\n          return `(${inner})`\r\n        }\r\n        return `(${inner})`\r\n      }\r\n      return ''\r\n    }\r\n    const searchExpression = computed(() => {\r\n      const segments = []\r\n      if (timeRange.value && timeRange.value.length === 2) {\r\n        const [start, end] = timeRange.value\r\n        segments.push(`时间: ${formatTimestamp(start)} ~ ${formatTimestamp(end)}`)\r\n      }\r\n      if (searchKeyword.value) {\r\n        segments.push(`关键字(全部): ${searchKeyword.value}`)\r\n      }\r\n      const adv = groupToString(filtersRoot.value)\r\n      if (adv) segments.push(`${adv}`)\r\n      // 用 AND 串联，直观体现与关系\r\n      return segments.join(' AND ')\r\n    })\r\n\r\n    // 仅用于高级筛选弹窗内部的表达式展示，不在这里加“时间/关键字”前缀\r\n    const advancedExpression = computed(() => {\r\n      const adv = groupToString(filtersRoot.value)\r\n      return adv || ''\r\n    })\r\n\r\n    const countLeafConditions = (node) => {\r\n      if (!node) return 0\r\n      if (node.field && node.operator) return 1\r\n      if (Array.isArray(node.conditions)) return node.conditions.reduce((acc, n) => acc + countLeafConditions(n), 0)\r\n      return 0\r\n    }\r\n    const leafConditionCount = computed(() => countLeafConditions(filtersRoot.value))\r\n\r\n    // 过滤后的条目（后端分页，前端只做简单过滤）\r\n    const filteredEntries = computed(() => {\r\n      const list = Array.isArray(batchLogEntries.value) ? batchLogEntries.value : []\r\n      let entries = list\r\n\r\n      // 本地高级筛选（仅在本地模式下）\r\n      if (advancedMode.value && useLocalAdvanced.value && leafConditionCount.value > 0) {\r\n        entries = entries.filter(e => evaluateAdvanced(e))\r\n      }\r\n\r\n      return entries\r\n    })\r\n\r\n    const batchCount = computed(() => Array.isArray(batchLogEntries.value) ? batchLogEntries.value.length : 0)\r\n    const selectedLogsCount = computed(() => Array.isArray(selectedLogs.value) ? selectedLogs.value.length : 0)\r\n    const filteredCount = computed(() => totalCount.value)\r\n\r\n    // 计算时间范围限制（取已加载条目中的最早与最晚）\r\n    const timeRangeLimit = computed(() => {\r\n      // 优先使用后端聚合范围\r\n      if (globalMinTs.value && globalMaxTs.value) {\r\n        const min = new Date(globalMinTs.value)\r\n        const max = new Date(globalMaxTs.value)\r\n        if (!Number.isNaN(min.getTime()) && !Number.isNaN(max.getTime())) {\r\n          return [min, max]\r\n        }\r\n      }\r\n      // 回退：使用当前已加载页的条目范围\r\n      const entries = batchLogEntries.value\r\n      if (!entries || entries.length === 0) return null\r\n      const times = entries\r\n        .map(e => new Date(e.timestamp))\r\n        .filter(d => !isNaN(d))\r\n      if (times.length === 0) return null\r\n      const min = new Date(Math.min(...times))\r\n      const max = new Date(Math.max(...times))\r\n      return [min, max]\r\n    })\r\n\r\n    // 分页后的条目（后端分页，直接使用当前页数据）\r\n    const paginatedEntries = computed(() => {\r\n      return filteredEntries.value\r\n    })\r\n\r\n    // 从路由参数获取选中的日志\r\n    const loadSelectedLogs = async () => {\r\n      // 支持多种来源：params.logIds / query.logIds / params.id / query.id\r\n      const fromParamsLogIds = route.params?.logIds\r\n      const fromQueryLogIds = route.query?.logIds\r\n      const singleIdParam = route.params?.id\r\n      const singleIdQuery = route.query?.id\r\n\r\n      let idsStr = fromParamsLogIds || fromQueryLogIds || singleIdParam || singleIdQuery\r\n      if (!idsStr) return\r\n\r\n      const ids = String(idsStr)\r\n        .split(',')\r\n        .map(id => parseInt(id))\r\n        .filter(n => !Number.isNaN(n))\r\n\r\n      if (ids.length === 0) return\r\n\r\n      try {\r\n        // 从API获取所有日志信息\r\n        const response = await store.dispatch('logs/fetchLogs', { page: 1, limit: 1000 })\r\n        const allLogs = response.data.logs\r\n        selectedLogs.value = allLogs.filter(log => ids.includes(log.id))\r\n      } catch (error) {\r\n        ElMessage.error('获取日志信息失败')\r\n      }\r\n    }\r\n\r\n    // 加载批量日志条目（后端分页）\r\n    const loadBatchLogEntries = async (page = 1, resetData = false) => {\r\n      // 如果没有选中的日志，直接返回\r\n      if (selectedLogs.value.length === 0) {\r\n        return\r\n      }\r\n      \r\n      try {\r\n        loading.value = true\r\n        \r\n        // 重置数据或初始化\r\n        if (resetData) {\r\n        batchLogEntries.value = []\r\n          currentPage.value = page\r\n        }\r\n        \r\n        // 构建查询参数\r\n          const logIds = selectedLogs.value.map(l => l.id).join(',')\r\n          const baseParams = {\r\n          log_ids: logIds,\r\n          page,\r\n          limit: pageSize.value\r\n          }\r\n        \r\n        // 添加高级筛选条件\r\n        if (advancedMode.value && leafConditionCount.value > 0) {\r\n          const filtersPayload = buildFiltersPayload()\r\n          if (filtersPayload) {\r\n            baseParams.filters = JSON.stringify(filtersPayload)\r\n          }\r\n        }\r\n        \r\n        // 添加时间范围筛选\r\n          if (timeRange.value && timeRange.value.length === 2) {\r\n            baseParams.start_time = timeRange.value[0]\r\n            baseParams.end_time = timeRange.value[1]\r\n          }\r\n        \r\n        // 添加关键词搜索\r\n        if (searchKeyword.value) {\r\n          baseParams.search = searchKeyword.value\r\n        }\r\n        \r\n        // 调用后端分页接口\r\n        const response = await store.dispatch('logs/fetchBatchLogEntries', baseParams)\r\n        const { entries, total, totalPages: serverTotalPages, page: serverPage, minTimestamp, maxTimestamp } = response.data\r\n        \r\n        // 处理返回的数据\r\n        const idToName = new Map(selectedLogs.value.map(l => [l.id, l.original_name]))\r\n        const processedEntries = entries.map(entry => ({\r\n                ...entry,\r\n          log_name: idToName.get(entry.log_id) || ''\r\n        }))\r\n        \r\n        // 更新数据\r\n        if (resetData) {\r\n          batchLogEntries.value = processedEntries\r\n        } else {\r\n          // 追加数据（用于虚拟滚动）\r\n          batchLogEntries.value.push(...processedEntries)\r\n        }\r\n        \r\n        // 更新分页信息\r\n        totalCount.value = total\r\n        totalPages.value = serverTotalPages\r\n        if (typeof serverPage === 'number' && !Number.isNaN(serverPage)) {\r\n          currentPage.value = serverPage\r\n        }\r\n\r\n        // 更新时间范围限制（以后端返回的整体范围为准）\r\n        if (minTimestamp && maxTimestamp) {\r\n          // 确保是 Date 对象\r\n          const min = new Date(minTimestamp)\r\n          const max = new Date(maxTimestamp)\r\n          if (!Number.isNaN(min.getTime()) && !Number.isNaN(max.getTime())) {\r\n            globalMinTs.value = min\r\n            globalMaxTs.value = max\r\n            // 仅当当前 timeRange 超出范围或尚未设置时才回填\r\n            const needInit = !timeRange.value || timeRange.value.length !== 2\r\n            const [curStart, curEnd] = needInit ? [null, null] : timeRange.value\r\n            const curStartDate = curStart ? new Date(curStart) : null\r\n            const curEndDate = curEnd ? new Date(curEnd) : null\r\n            const outOfRange = !curStartDate || !curEndDate || curStartDate < min || curEndDate > max\r\n            if (needInit || outOfRange) {\r\n              timeRange.value = [\r\n                formatTimestamp(min),\r\n                formatTimestamp(max)\r\n              ]\r\n            }\r\n          }\r\n        }\r\n        \r\n        // 翻页/加载完成时不显示全量数量提示，避免频繁打扰\r\n        \r\n      } catch (error) {\r\n        ElMessage.error('批量分析失败: ' + (error.response?.data?.message || error.message))\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 搜索输入状态：中文输入法组合中不触发\r\n    const isComposing = ref(false)\r\n    const onCompositionStart = () => { isComposing.value = true }\r\n    const onCompositionEnd = () => { \r\n      isComposing.value = false \r\n      // 组合结束后再触发一次\r\n      debouncedSearch()\r\n    }\r\n\r\n    // 防抖的搜索触发（300ms）\r\n    let searchTimer = null\r\n    const debouncedSearch = () => {\r\n      if (isComposing.value) return\r\n      if (searchTimer) clearTimeout(searchTimer)\r\n      searchTimer = setTimeout(() => {\r\n        currentPage.value = 1\r\n        loadBatchLogEntries(1, true)\r\n      }, 300)\r\n    }\r\n\r\n    // 供输入框 @input 调用\r\n    const handleSearch = () => {\r\n      debouncedSearch()\r\n    }\r\n\r\n    const handleQuery = async () => {\r\n      currentPage.value = 1\r\n      await loadBatchLogEntries(1, true)\r\n    }\r\n\r\n    // 时间范围变化处理\r\n    const handleTimeRangeChange = () => {\r\n      // 越界纠正\r\n      if (timeRangeLimit.value && timeRange.value && timeRange.value.length === 2) {\r\n        const [min, max] = timeRangeLimit.value\r\n        let [start, end] = timeRange.value\r\n        const s = new Date(start)\r\n        const e = new Date(end)\r\n        let changed = false\r\n        if (s < min) { start = min; changed = true }\r\n        if (e > max) { end = max; changed = true }\r\n        if (changed) timeRange.value = [formatTimestamp(start), formatTimestamp(end)]\r\n      }\r\n      currentPage.value = 1\r\n      loadBatchLogEntries(1, true)\r\n    }\r\n\r\n    // 清除筛选\r\n    const clearFilters = async () => {\r\n      searchKeyword.value = ''\r\n      timeRange.value = null\r\n      filtersRoot.value = { logic: 'AND', conditions: [] }\r\n      advancedMode.value = false\r\n      currentPage.value = 1\r\n      // 立即重新加载，显示全部条目\r\n      await loadBatchLogEntries(1, true)\r\n    }\r\n\r\n    // 仅清空高级条件，不影响其他筛选（供弹窗内一键清空使用）\r\n    const clearAllConditionsOnly = () => {\r\n      if (filtersRoot.value && Array.isArray(filtersRoot.value.conditions)) {\r\n        filtersRoot.value.conditions = []\r\n      } else {\r\n        filtersRoot.value = { logic: 'AND', conditions: [] }\r\n      }\r\n      currentPage.value = 1\r\n    }\r\n\r\n    // 禁用超出范围的日期\r\n    const startOfDay = (d) => new Date(d.getFullYear(), d.getMonth(), d.getDate())\r\n    const endOfDay = (d) => new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59, 999)\r\n    const disableOutOfRangeDates = (date) => {\r\n      if (!timeRangeLimit.value || !date) return false\r\n      const [min, max] = timeRangeLimit.value\r\n      return date < startOfDay(new Date(min)) || date > endOfDay(new Date(max))\r\n    }\r\n\r\n    // 打开面板时默认展示的页（左右两侧月份/日期依据最小、最大值）\r\n    const defaultPickerRange = computed(() => {\r\n      if (!timeRangeLimit.value) return null\r\n      return [timeRangeLimit.value[0], timeRangeLimit.value[1]]\r\n    })\r\n\r\n    // 导出CSV（服务端生成 + axios 带鉴权单请求下载）\r\n    const exportToCSV = async () => {\r\n      try {\r\n        ElMessage.info('正在导出，请稍候...')\r\n        const logIds = selectedLogs.value.map(l => l.id).join(',')\r\n        const params = {\r\n          log_ids: logIds\r\n        }\r\n        if (advancedMode.value && leafConditionCount.value > 0) {\r\n          const filtersPayload = buildFiltersPayload()\r\n          if (filtersPayload) params.filters = JSON.stringify(filtersPayload)\r\n        }\r\n        if (timeRange.value && timeRange.value.length === 2) {\r\n          params.start_time = timeRange.value[0]\r\n          params.end_time = timeRange.value[1]\r\n        }\r\n        if (searchKeyword.value) params.search = searchKeyword.value\r\n\r\n        const resp = await api.logs.exportBatchEntries(params)\r\n        const blob = new Blob([resp.data], { type: 'text/csv;charset=utf-8' })\r\n        const url = URL.createObjectURL(blob)\r\n        const a = document.createElement('a')\r\n        a.href = url\r\n        a.download = `batch_logs_analysis_${new Date().toISOString().slice(0, 10)}.csv`\r\n        document.body.appendChild(a)\r\n        a.click()\r\n        document.body.removeChild(a)\r\n        URL.revokeObjectURL(url)\r\n        ElMessage.success('CSV导出完成')\r\n      } catch (error) {\r\n        ElMessage.error('导出CSV失败: ' + (error.response?.data?.message || error.message))\r\n      }\r\n    }\r\n\r\n    // 分页处理\r\n    const handleSizeChange = (size) => {\r\n      pageSize.value = size\r\n      currentPage.value = 1\r\n      loadBatchLogEntries(1, true)\r\n    }\r\n\r\n    const handleCurrentChange = async (page) => {\r\n      currentPage.value = page\r\n      // 手动分页不自动累加，直接替换为当前页数据\r\n      await loadBatchLogEntries(page, true)\r\n    }\r\n    \r\n    // 虚拟滚动加载更多数据\r\n    const handleLoadMore = async () => {\r\n      if (!allowAutoLoad.value) return\r\n      // 如果还有更多数据，加载下一页\r\n      if (currentPage.value < totalPages.value && !loading.value) {\r\n        currentPage.value++\r\n        await loadBatchLogEntries(currentPage.value, false)\r\n      }\r\n    }\r\n\r\n    // 表格分页/排序等交互后，强制触发一次重测量以保证 tooltip 判断正确\r\n    const forceRelayout = () => {\r\n      // 通过下一个 tick 触发组件中的 ResizeObserver/测量逻辑生效\r\n      // 这里不直接操作 DOM，由子组件在 mouseenter 与 observer 中测量\r\n    }\r\n\r\n    // 格式化时间戳\r\n    const formatTimestamp = (timestamp) => {\r\n      if (!timestamp) return '-'\r\n      const date = new Date(timestamp)\r\n      const year = date.getFullYear()\r\n      const month = String(date.getMonth() + 1).padStart(2, '0')\r\n      const day = String(date.getDate()).padStart(2, '0')\r\n      const hours = String(date.getHours()).padStart(2, '0')\r\n      const minutes = String(date.getMinutes()).padStart(2, '0')\r\n      const seconds = String(date.getSeconds()).padStart(2, '0')\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n    }\r\n\r\n    // 格式化文件大小\r\n    const formatFileSize = (bytes) => {\r\n      if (!bytes || bytes === 0) return '0 B'\r\n      const k = 1024\r\n      const sizes = ['B', 'KB', 'MB', 'GB']\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n    }\r\n\r\n    // 无\r\n\r\n    // 跳转到手术统计页面\r\n    const showSurgeryStatistics = async () => {\r\n      // 确保有已排序的日志条目数据\r\n      if (batchLogEntries.value.length === 0) {\r\n        ElMessage.warning('请先加载日志条目数据')\r\n        return\r\n      }\r\n      \r\n      // 传递选中的日志ID到手术统计页面\r\n      const logIds = selectedLogs.value.map(log => log.id)\r\n      \r\n      // 设置自动分析标志\r\n      sessionStorage.setItem('autoAnalyze', 'true')\r\n      \r\n      // 在新窗口中打开手术统计页面，通过URL参数传递日志ID\r\n      const routeData = router.resolve({\r\n        path: '/surgery-statistics',\r\n        query: { logIds: logIds.join(',') }\r\n      })\r\n      window.open(routeData.href, '_blank')\r\n    }\r\n\r\n    // 模板相关\r\n    const loadTemplates = async () => {\r\n      try {\r\n        const res = await api.logs.getSearchTemplates()\r\n        templates.value = res.data.templates || []\r\n      } catch {}\r\n    }\r\n\r\n    const applyTemplateByName = (name) => {\r\n      const tpl = templates.value.find(t => t.name === name)\r\n      if (!tpl) return\r\n      // 覆盖当前高级条件\r\n      filtersRoot.value = {\r\n        logic: tpl.filters?.logic || 'AND',\r\n        conditions: Array.isArray(tpl.filters?.conditions) ? [...tpl.filters.conditions] : []\r\n      }\r\n      // 不立即执行，用户可继续编辑\r\n    }\r\n\r\n    const beforeImportTemplates = async (file) => {\r\n      try {\r\n        const text = await file.text()\r\n        const json = JSON.parse(text)\r\n        // 不保存为常用模板，仅解析并填充到“添加条件”区域\r\n        let logic = 'AND'\r\n        let conditions = []\r\n        if (json && (Array.isArray(json.conditions) || Array.isArray(json.filters?.conditions))) {\r\n          logic = json.logic || json.filters?.logic || 'AND'\r\n          conditions = Array.isArray(json.conditions) ? json.conditions : (json.filters?.conditions || [])\r\n        } else if (Array.isArray(json.templates) && json.templates.length > 0) {\r\n          const first = json.templates[0]\r\n          logic = first?.filters?.logic || 'AND'\r\n          conditions = Array.isArray(first?.filters?.conditions) ? first.filters.conditions : []\r\n        }\r\n        if (conditions.length > 0) {\r\n          filtersRoot.value = { logic, conditions: [...conditions] }\r\n          ElMessage.success('已从文件填充到高级条件')\r\n        } else {\r\n          ElMessage.warning('未识别到可用的表达式内容')\r\n        }\r\n      } catch (e) {\r\n        ElMessage.error('解析失败：' + e.message)\r\n      }\r\n      return false\r\n    }\r\n\r\n    // AntD CheckableTag 单选模板处理\r\n    const onTemplateSingleSelect = (name, checked) => {\r\n      selectedTemplateName.value = checked ? name : ''\r\n    }\r\n\r\n    const numericFields = new Set(['param1', 'param2', 'param3', 'param4'])\r\n    const normalizeValue = (field, operator, value) => {\r\n      const op = String(operator || '').toLowerCase()\r\n      const isNumeric = numericFields.has(field)\r\n      \r\n      // 处理空值\r\n      if (value === undefined || value === null || value === '') {\r\n        return null\r\n      }\r\n      \r\n      if (op === 'between' || op === 'notbetween') {\r\n        const arr = Array.isArray(value) ? value : String(value).split(',')\r\n        if (arr.length < 2) return null\r\n        \r\n        const a = (arr[0] ?? '').toString().trim()\r\n        const b = (arr[1] ?? '').toString().trim()\r\n        \r\n        if (isNumeric) {\r\n          const numA = Number(a)\r\n          const numB = Number(b)\r\n          if (Number.isNaN(numA) || Number.isNaN(numB)) return null\r\n          return [numA, numB]\r\n        }\r\n        return [a, b]\r\n      }\r\n      \r\n      if (op === 'in' || op === 'notin') {\r\n        const arr = Array.isArray(value) ? value : [value]\r\n        const trimmed = arr.map(s => s.toString().trim()).filter(s => s !== '')\r\n        if (isNumeric) {\r\n          return trimmed.map(v => Number(v)).filter(v => !Number.isNaN(v))\r\n        }\r\n        return trimmed\r\n      }\r\n      \r\n      if (isNumeric) {\r\n        const n = Number(value)\r\n        return Number.isNaN(n) ? value : n\r\n      }\r\n      \r\n      return value\r\n    }\r\n\r\n    // 本地执行高级筛选\r\n    const getFieldValue = (entry, field) => {\r\n      if (field === 'timestamp') return new Date(entry.timestamp)\r\n      return entry[field]\r\n    }\r\n\r\n    const toNumber = (val) => {\r\n      const n = Number(val)\r\n      return Number.isNaN(n) ? null : n\r\n    }\r\n\r\n    const evalCondition = (field, operator, value, entry) => {\r\n      const op = String(operator || '').toLowerCase()\r\n      const raw = getFieldValue(entry, field)\r\n      if (raw === undefined || raw === null) return false\r\n\r\n      const isNumeric = numericFields.has(field)\r\n      const isTimestamp = field === 'timestamp'\r\n\r\n      if (op === 'between' || op === 'notbetween') {\r\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',')\r\n        if (arr.length < 2) return false\r\n        if (isNumeric) {\r\n          const a = toNumber(arr[0]); const b = toNumber(arr[1]);\r\n          if (a === null || b === null) return false\r\n          const n = toNumber(raw)\r\n          if (n === null) return false\r\n          const ok = n >= Math.min(a,b) && n <= Math.max(a,b)\r\n          return op === 'between' ? ok : !ok\r\n        }\r\n        if (isTimestamp) {\r\n          const a = new Date(arr[0]); const b = new Date(arr[1])\r\n          const t = new Date(raw)\r\n          const ok = t >= (a < b ? a : b) && t <= (a < b ? b : a)\r\n          return op === 'between' ? ok : !ok\r\n        }\r\n        const s = String(raw)\r\n        const ok = s >= String(arr[0]) && s <= String(arr[1])\r\n        return op === 'between' ? ok : !ok\r\n      }\r\n\r\n      if (op === 'in' || op === 'notin') {\r\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',').map(v => v.trim()).filter(Boolean)\r\n        if (isNumeric) {\r\n          const set = new Set(arr.map(toNumber).filter(v => v !== null))\r\n          const n = toNumber(raw)\r\n          const ok = n !== null && set.has(n)\r\n          return op === 'in' ? ok : !ok\r\n        }\r\n        const set = new Set(arr.map(v => v.toString()))\r\n        const ok = set.has(String(raw))\r\n        return op === 'in' ? ok : !ok\r\n      }\r\n\r\n      if (op === 'regex') {\r\n        try {\r\n          const re = new RegExp(String(value))\r\n          return re.test(String(raw))\r\n        } catch { return false }\r\n      }\r\n\r\n      if (op === 'contains' || op === 'like') {\r\n        return String(raw).toLowerCase().includes(String(value ?? '').toLowerCase())\r\n      }\r\n      if (op === 'notcontains') {\r\n        return !String(raw).toLowerCase().includes(String(value ?? '').toLowerCase())\r\n      }\r\n      if (op === 'startswith') {\r\n        return String(raw).startsWith(String(value ?? ''))\r\n      }\r\n      if (op === 'endswith') {\r\n        return String(raw).endsWith(String(value ?? ''))\r\n      }\r\n\r\n      if (isNumeric) {\r\n        const n = toNumber(raw); const v = toNumber(value)\r\n        if (n === null || v === null) return false\r\n        switch (op) {\r\n          case '=': return n === v\r\n          case '!=': case '<>': return n !== v\r\n          case '>': return n > v\r\n          case '>=': return n >= v\r\n          case '<': return n < v\r\n          case '<=': return n <= v\r\n          default: return false\r\n        }\r\n      }\r\n      if (isTimestamp) {\r\n        const t = new Date(raw).getTime(); const v = new Date(value).getTime()\r\n        switch (op) {\r\n          case '=': return t === v\r\n          case '!=': case '<>': return t !== v\r\n          case '>': return t > v\r\n          case '>=': return t >= v\r\n          case '<': return t < v\r\n          case '<=': return t <= v\r\n          default: return false\r\n        }\r\n      }\r\n      const s = String(raw); const v = String(value ?? '')\r\n      switch (op) {\r\n        case '=': return s === v\r\n        case '!=': case '<>': return s !== v\r\n        case '>': return s > v\r\n        case '>=': return s >= v\r\n        case '<': return s < v\r\n        case '<=': return s <= v\r\n        default: return false\r\n      }\r\n    }\r\n\r\n    const evaluateNode = (node, entry) => {\r\n      if (!node) return true\r\n      if (node.field && node.operator) {\r\n        return evalCondition(node.field, node.operator, node.value, entry)\r\n      }\r\n      if (Array.isArray(node.conditions)) {\r\n        const logic = node.logic || 'AND'\r\n        const results = node.conditions.map(child => evaluateNode(child, entry))\r\n        return logic === 'OR' ? results.some(Boolean) : results.every(Boolean)\r\n      }\r\n      return true\r\n    }\r\n\r\n    const evaluateAdvanced = (entry) => evaluateNode(filtersRoot.value, entry)\r\n\r\n    const exprPreviewRef = ref(null)\r\n\r\n    const applyExpressionJSON = async () => {\r\n      if (!importExpressionText.value) return\r\n      try {\r\n        const obj = JSON.parse(importExpressionText.value)\r\n        if (obj && (Array.isArray(obj.conditions) || Array.isArray(obj.filters?.conditions))) {\r\n          const logic = obj.logic || obj.filters?.logic || 'AND'\r\n          const conds = Array.isArray(obj.conditions) ? obj.conditions : obj.filters?.conditions\r\n          filtersRoot.value = { logic, conditions: Array.isArray(conds) ? [...conds] : [] }\r\n          // 仅填充，不立即执行；等待点击“应用”\r\n          ElMessage.success('表达式已填充，请点击“应用”执行搜索')\r\n          showAdvancedFilter.value = true\r\n          await nextTick()\r\n          if (exprPreviewRef.value && exprPreviewRef.value.scrollIntoView) {\r\n            exprPreviewRef.value.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\r\n          }\r\n        } else {\r\n          ElMessage.error('JSON格式不正确，缺少 conditions')\r\n        }\r\n      } catch (e) {\r\n        ElMessage.error('解析失败：' + e.message)\r\n      }\r\n    }\r\n\r\n    const applyExpressionSmart = async () => {\r\n      if (!importExpressionText.value) return\r\n      // 仅支持 JSON 导入\r\n      try {\r\n        const obj = JSON.parse(importExpressionText.value)\r\n        if (obj && (Array.isArray(obj.conditions) || Array.isArray(obj.filters?.conditions))) {\r\n          const logic = obj.logic || obj.filters?.logic || 'AND'\r\n          const conds = Array.isArray(obj.conditions) ? obj.conditions : obj.filters?.conditions\r\n          filtersRoot.value = { logic, conditions: Array.isArray(conds) ? [...conds] : [] }\r\n          ElMessage.success('表达式已填充，请点击“应用”执行搜索')\r\n          return\r\n        }\r\n        ElMessage.warning('未识别到可用的表达式内容')\r\n      } catch (_) {\r\n        ElMessage.error('仅支持 JSON 格式的表达式导入')\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    // 分析手术数据（批量分析）\r\n    const analyzeSurgeryData = async () => {\r\n      analyzing.value = true\r\n      try {\r\n        // 使用统一的接口，一次性分析所有选中的日志\r\n        const logIds = selectedLogs.value.map(log => log.id)\r\n        const response = await api.surgeryStatistics.analyzeByLogIds(logIds)\r\n        \r\n        if (response.data.success) {\r\n          ElMessage.success(response.data.message || `成功分析出 ${response.data.data?.length || 0} 场手术`)\r\n        } else {\r\n          ElMessage.error(response.data.message || '批量分析手术数据失败')\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('批量分析手术数据失败: ' + (error.response?.data?.message || error.message))\r\n      } finally {\r\n        analyzing.value = false\r\n      }\r\n    }\r\n\r\n    // 构建filters payload\r\n    const buildFiltersPayload = () => {\r\n      const normalizeNode = (node) => {\r\n        if (!node) return null\r\n        if (node.field && node.operator) {\r\n          if (node.value === undefined || node.value === null || node.value === '') return null\r\n          \r\n          const normalizedValue = normalizeValue(node.field, node.operator, node.value)\r\n          if (normalizedValue === null) return null\r\n          \r\n          return {\r\n            field: node.field,\r\n            operator: node.operator,\r\n            value: normalizedValue\r\n          }\r\n        }\r\n        if (Array.isArray(node.conditions)) {\r\n          const children = node.conditions.map(normalizeNode).filter(Boolean)\r\n          if (children.length === 0) return null\r\n          return { logic: node.logic || 'AND', conditions: children }\r\n        }\r\n        return null\r\n      }\r\n      const normalized = normalizeNode(filtersRoot.value)\r\n      return normalized\r\n    }\r\n\r\n    // 不同字段对应的可选操作符\r\n    const operatorOptionsByField = {\r\n      timestamp: [\r\n        { label: '=', value: '=' },\r\n        { label: '!=', value: '!=' },\r\n        { label: '>', value: '>' },\r\n        { label: '>=', value: '>=' },\r\n        { label: '<', value: '<' },\r\n        { label: '<=', value: '<=' },\r\n        { label: 'Between', value: 'between' }\r\n      ],\r\n      error_code: [\r\n        { label: '=', value: '=' },\r\n        { label: '!=', value: '!=' },\r\n        { label: '包含(Like)', value: 'contains' },\r\n        { label: '不包含', value: 'notcontains' },\r\n        { label: '正则', value: 'regex' },\r\n        { label: '前缀', value: 'startsWith' },\r\n        { label: '后缀', value: 'endsWith' }\r\n      ],\r\n      param1: [\r\n        { label: '=', value: '=' },\r\n        { label: '!=', value: '!=' },\r\n        { label: '>', value: '>' },\r\n        { label: '>=', value: '>=' },\r\n        { label: '<', value: '<' },\r\n        { label: '<=', value: '<=' },\r\n        { label: 'Between', value: 'between' },\r\n        { label: 'In', value: 'in' },\r\n        { label: '包含(Like)', value: 'contains' },\r\n        { label: '不包含', value: 'notcontains' }\r\n      ],\r\n      param2: [\r\n        { label: '=', value: '=' },\r\n        { label: '!=', value: '!=' },\r\n        { label: '>', value: '>' },\r\n        { label: '>=', value: '>=' },\r\n        { label: '<', value: '<' },\r\n        { label: '<=', value: '<=' },\r\n        { label: 'Between', value: 'between' },\r\n        { label: 'In', value: 'in' },\r\n        { label: '包含(Like)', value: 'contains' },\r\n        { label: '不包含', value: 'notcontains' }\r\n      ],\r\n      param3: [\r\n        { label: '=', value: '=' },\r\n        { label: '!=', value: '!=' },\r\n        { label: '>', value: '>' },\r\n        { label: '>=', value: '>=' },\r\n        { label: '<', value: '<' },\r\n        { label: '<=', value: '<=' },\r\n        { label: 'Between', value: 'between' },\r\n        { label: 'In', value: 'in' },\r\n        { label: '包含(Like)', value: 'contains' },\r\n        { label: '不包含', value: 'notcontains' }\r\n      ],\r\n      param4: [\r\n        { label: '=', value: '=' },\r\n        { label: '!=', value: '!=' },\r\n        { label: '>', value: '>' },\r\n        { label: '>=', value: '>=' },\r\n        { label: '<', value: '<' },\r\n        { label: '<=', value: '<=' },\r\n        { label: 'Between', value: 'between' },\r\n        { label: 'In', value: 'in' },\r\n        { label: '包含(Like)', value: 'contains' },\r\n        { label: '不包含', value: 'notcontains' }\r\n      ],\r\n      explanation: [\r\n        { label: '包含(Like)', value: 'contains' },\r\n        { label: '不包含', value: 'notcontains' },\r\n        { label: '正则', value: 'regex' },\r\n        { label: '前缀', value: 'startsWith' },\r\n        { label: '后缀', value: 'endsWith' }\r\n      ]\r\n    }\r\n\r\n    const defaultOperatorOptions = [\r\n      { label: '=', value: '=' },\r\n      { label: '!=', value: '!=' }\r\n    ]\r\n\r\n    const getOperatorOptions = (field) => {\r\n      if (!field) return defaultOperatorOptions\r\n      return operatorOptionsByField[field] || defaultOperatorOptions\r\n    }\r\n\r\n    const onFieldChange = (cond) => {\r\n      if (!cond) return\r\n      const options = getOperatorOptions(cond.field)\r\n      // 若当前操作符不在可选集合内，重置为第一个\r\n      if (!options.some(o => o.value === cond.operator)) {\r\n        cond.operator = options[0]?.value\r\n      }\r\n      // 值类型重置\r\n      if (String(cond.operator).toLowerCase() === 'between') {\r\n        cond.value = Array.isArray(cond.value) ? cond.value.slice(0, 2) : ['', '']\r\n      } else {\r\n        cond.value = Array.isArray(cond.value) ? cond.value.join(',') : (cond.value ?? '')\r\n      }\r\n    }\r\n\r\n    const addConditionToGroup = (group) => {\r\n      if (!group.conditions) group.conditions = []\r\n      group.conditions.push({ field: 'error_code', operator: 'contains', value: '' })\r\n    }\r\n    const addGroupToGroup = (group) => {\r\n      if (!group.conditions) group.conditions = []\r\n      group.conditions.push({ logic: 'AND', conditions: [] })\r\n    }\r\n    const removeNodeAt = (group, idx) => {\r\n      if (Array.isArray(group.conditions) && idx >= 0 && idx < group.conditions.length) {\r\n        group.conditions.splice(idx, 1)\r\n      }\r\n    }\r\n    const applyAdvancedFilters = async () => {\r\n      // 直接根据当前条件构建 payload 并执行\r\n      showAdvancedFilter.value = false\r\n      advancedMode.value = true\r\n      currentPage.value = 1\r\n      await loadBatchLogEntries(1, true)\r\n    }\r\n\r\n    const applySelectedTemplate = () => {\r\n      if (!selectedTemplateName.value) return\r\n      const tpl = templates.value.find(t => t.name === selectedTemplateName.value)\r\n      if (!tpl) return\r\n      filtersRoot.value = {\r\n        logic: tpl.filters?.logic || 'AND',\r\n        conditions: Array.isArray(tpl.filters?.conditions) ? [...tpl.filters.conditions] : []\r\n      }\r\n      // 不立即执行搜索，用户可继续增删条件\r\n    }\r\n\r\n    const onOperatorChange = (cond) => {\r\n      if (!cond) return\r\n      const op = String(cond.operator || '').toLowerCase()\r\n      if (op === 'between') {\r\n        if (!Array.isArray(cond.value)) {\r\n          cond.value = ['', '']\r\n        } else if (cond.value.length < 2) {\r\n          cond.value = [cond.value[0] || '', cond.value[1] || '']\r\n        }\r\n      } else {\r\n        if (Array.isArray(cond.value)) {\r\n          cond.value = cond.value.join(',')\r\n        }\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await loadSelectedLogs()\r\n      await loadTemplates()\r\n      // 默认选择全部时间范围（最早至最晚）\r\n      if (timeRangeLimit.value) {\r\n        timeRange.value = [\r\n          formatTimestamp(timeRangeLimit.value[0]),\r\n          formatTimestamp(timeRangeLimit.value[1])\r\n        ]\r\n      }\r\n      // 初始化加载数据\r\n      await loadBatchLogEntries(1, true)\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      selectedLogs,\r\n      batchLogEntries,\r\n      searchKeyword,\r\n      timeRange,\r\n      currentPage,\r\n      pageSize,\r\n      totalCount,\r\n      totalPages,\r\n      advancedMode,\r\n        useLocalAdvanced,\r\n      useVirtualScroll,\r\n      virtualTableRef,\r\n      tableColumns,\r\n      showAdvancedFilter,\r\n      filtersRoot,\r\n      filteredEntries,\r\n      paginatedEntries,\r\n      searchExpression,\r\n      advancedExpression,\r\n      // counts for template conditions\r\n      batchCount,\r\n      selectedLogsCount,\r\n      filteredCount,\r\n      leafConditionCount,\r\n      loadSelectedLogs,\r\n      loadBatchLogEntries,\r\n      handleSearch,\r\n      handleQuery,\r\n      handleTimeRangeChange,\r\n      clearFilters,\r\n      exportToCSV,\r\n      handleSizeChange,\r\n      handleCurrentChange,\r\n      handleLoadMore,\r\n      forceRelayout,\r\n      formatTimestamp,\r\n      formatFileSize,\r\n      showSurgeryStatistics,\r\n      analyzeSurgeryData,\r\n      surgeryStatisticsVisible,\r\n      surgeryData,\r\n      analyzing,\r\n      timeRangeLimit,\r\n      defaultPickerRange,\r\n      disableOutOfRangeDates,\r\n      templates,\r\n      applyTemplateByName,\r\n      beforeImportTemplates,\r\n      selectedTemplateName,\r\n      onTemplateSingleSelect,\r\n      applySelectedTemplate,\r\n      importExpressionText,\r\n      \r\n      applyExpressionJSON,\r\n      applyExpressionSmart,\r\n      addConditionToGroup,\r\n      addGroupToGroup,\r\n      removeNodeAt,\r\n      exprPreviewRef,\r\n      applyAdvancedFilters,\r\n      clearAllConditionsOnly,\r\n      // expose helpers for operator dropdowns\r\n      getOperatorOptions,\r\n      onFieldChange,\r\n      onOperatorChange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.batch-analysis-container {\r\n  padding: 0;\r\n  height: 100vh;\r\n  overflow: auto;\r\n  background-color: #f5f7fa;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.analysis-card {\r\n  /* 使用外层 wrapper 控制留白，卡片高度自适应 */\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ebeef5;\r\n  overflow: visible;\r\n}\r\n\r\n.analysis-card-wrapper {\r\n  padding: 16px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 20px;\r\n  background-color: white;\r\n  border-bottom: none;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.log-info {\r\n  margin: 10px 20px;\r\n}\r\n\r\n.log-info .el-descriptions {\r\n  font-size: 12px;\r\n}\r\n\r\n.log-info .el-descriptions__label {\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n}\r\n\r\n.log-info .el-descriptions__label,\r\n.log-info .el-descriptions__content {\r\n  white-space: normal;\r\n  word-break: break-word;\r\n}\r\n\r\n/* 自定义列宽样式 */\r\n.log-info .el-descriptions__body {\r\n  width: 100%;\r\n}\r\n\r\n.log-info .el-descriptions__table {\r\n  width: 100%;\r\n  table-layout: fixed;\r\n}\r\n\r\n.log-info .el-descriptions__cell {\r\n  padding: 8px 12px;\r\n  vertical-align: top;\r\n}\r\n\r\n/* 文件名列 - 较宽 */\r\n.log-info .el-descriptions__cell:nth-child(1) {\r\n  width: 50%;\r\n}\r\n\r\n/* 设备编号列 - 较窄 */\r\n.log-info .el-descriptions__cell:nth-child(2) {\r\n  width: 15%;\r\n}\r\n\r\n/* 文件大小列 - 较窄 */\r\n.log-info .el-descriptions__cell:nth-child(3) {\r\n  width: 20%;\r\n}\r\n\r\n/* 上传用户ID列 - 较宽 */\r\n.log-info .el-descriptions__cell:nth-child(4) {\r\n  width: 15%;\r\n}\r\n\r\n.logs-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 4px;\r\n}\r\n\r\n.search-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  margin: 0 20px 10px 20px;\r\n  padding: 10px 12px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  border: 1px solid #ebeef5;\r\n}\r\n\r\n.search-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 12px;\r\n  align-items: start;\r\n}\r\n\r\n.grid-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n}\r\n\r\n.item-title {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n}\r\n\r\n.keyword-field-select {\r\n  width: 110px;\r\n}\r\n\r\n.time-range {\r\n  width: 100%;\r\n}\r\n\r\n.advanced-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n}\r\n\r\n.advanced-summary {\r\n  font-size: 12px;\r\n  color: #606266;\r\n}\r\n\r\n.search-expression {\r\n  margin-top: 6px;\r\n  font-size: 12px;\r\n  color: #606266;\r\n  padding: 6px 8px;\r\n  background: #f9fafb;\r\n  border: 1px dashed #e4e7ed;\r\n  border-radius: 6px;\r\n}\r\n\r\n.search-expression .label {\r\n  color: #909399;\r\n  margin-right: 6px;\r\n}\r\n\r\n/* 高级筛选弹窗结构化分区 */\r\n.advanced-filter .section {\r\n  margin-bottom: 16px;\r\n  background: #fff;\r\n}\r\n.advanced-filter .section-title {\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: #606266;\r\n}\r\n.section-title-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n.logic-row {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n.advanced-filter .conditions .condition + .condition {\r\n  margin-top: 2px;\r\n}\r\n\r\n/* 高级搜索组逻辑：根据层级缩进显示 */\r\n.advanced-filter .group-box {\r\n  border-left: 2px dashed #e4e7ed;\r\n  margin-left: 10px;\r\n  padding-left: 10px;\r\n}\r\n.advanced-filter .group-header.nested {\r\n  margin-left: 8px;\r\n}\r\n.advanced-filter .group-root {\r\n  margin-top: 10px;\r\n}\r\n.template-tags, .tags-wrap {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n}\r\n.tags-ops {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n.tags-ops .hint {\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n.ops-right {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n.expr-preview {\r\n  margin: 6px 0 10px 0;\r\n  font-size: 12px;\r\n  color: #606266;\r\n  padding: 6px 8px;\r\n  background: #f9fafb;\r\n  border: 1px dashed #e4e7ed;\r\n  border-radius: 6px;\r\n}\r\n.expr-preview .label {\r\n  color: #909399;\r\n  margin-right: 6px;\r\n}\r\n.antd-tags .tpl-tag {\r\n  margin: 4px 6px 0 0;\r\n}\r\n.antd-tags .tpl-tag.bordered {\r\n  border: 1px dashed #d9d9d9;\r\n  padding: 0 10px;\r\n}\r\n.antd-tags.single-select .tpl-tag.ant-tag-checkable-checked {\r\n  border-color: #1677ff;\r\n  color: #1677ff;\r\n  background: #e6f4ff;\r\n}\r\n.import-text {\r\n  margin-top: 8px;\r\n}\r\n.import-actions {\r\n  margin-top: 8px;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.entries-section {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  margin: 0 20px 10px 20px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  border: 1px solid #ebeef5;\r\n}\r\n\r\n.table-container {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  padding: 0 20px 20px 20px;\r\n}\r\n\r\n/* Ant Design Table-like styles */\r\n.antd-table {\r\n  --antd-border: #f0f0f0;\r\n  --antd-header-bg: #fafafa;\r\n  --antd-row-hover: #f5f5f5;\r\n  --antd-text: #1f1f1f;\r\n}\r\n\r\n.antd-table .el-table__header-wrapper th,\r\n.antd-table .virtual-table-header .virtual-table-cell {\r\n  background-color: var(--antd-header-bg) !important;\r\n  color: var(--antd-text);\r\n  font-weight: 600;\r\n  border-bottom: 1px solid var(--antd-border) !important;\r\n}\r\n\r\n.antd-table .el-table,\r\n.antd-table .el-table__body-wrapper,\r\n.antd-table .el-table__inner-wrapper {\r\n  border: 1px solid var(--antd-border);\r\n  border-radius: 8px;\r\n}\r\n\r\n.antd-table .el-table__row,\r\n.antd-table .virtual-table-row {\r\n  border-bottom: 1px solid var(--antd-border);\r\n}\r\n\r\n.antd-table .el-table__row:hover,\r\n.antd-table .virtual-table-row:hover {\r\n  background: var(--antd-row-hover);\r\n}\r\n\r\n.antd-table .el-table__cell,\r\n.antd-table .virtual-table-cell {\r\n  padding: 12px 16px;\r\n  color: var(--antd-text);\r\n}\r\n\r\n.antd-table .el-table__header tr:first-child th:first-child,\r\n.antd-table .el-table__body tr td:first-child {\r\n  padding-left: 16px;\r\n}\r\n\r\n.antd-table .el-table__header tr:first-child th:last-child,\r\n.antd-table .el-table__body tr td:last-child {\r\n  padding-right: 16px;\r\n}\r\n\r\n/* 让释义列的 tooltip 在表格外也能显示 */\r\n.explanation-tooltip {\r\n  max-width: 60vw;\r\n  white-space: normal;\r\n  word-break: break-word;\r\n  z-index: 3000;\r\n}\r\n\r\n.el-popper.explanation-tooltip {\r\n  overflow: visible;\r\n}\r\n\r\n.explanation-ellipsis {\r\n  display: inline-block;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n/* 黑色背景的暗色气泡 */\r\n.explanation-tooltip.dark {\r\n  background: rgba(0,0,0,0.85);\r\n  color: #fff;\r\n  border: none;\r\n}\r\n.explanation-tooltip.dark .el-tooltip__popper {\r\n  background: rgba(0,0,0,0.85);\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  padding: 12px 20px 0 20px;\r\n}\r\n\r\n.section-header h3 {\r\n  margin: 0;\r\n  color: #303133;\r\n  font-size: 14px;\r\n}\r\n\r\n.loading-section {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 400px;\r\n  background-color: #fafafa;\r\n  border-radius: 8px;\r\n  margin: 20px;\r\n}\r\n\r\n.pagination-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px 20px;\r\n  padding: 8px 0;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  border: 1px solid #ebeef5;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* tooltip 悬浮效果（仅阴影与圆角，无缩放生长动效） */\r\n.selected-files-popper {\r\n  box-shadow: var(--el-box-shadow-light, 0 8px 24px rgba(0, 0, 0, 0.12));\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 6px;\r\n  padding: 6px 8px;\r\n}\r\n\r\n.selected-files-tooltip {\r\n  max-width: 480px;\r\n  max-height: 240px;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n</style>","<template>\r\n  <div class=\"virtual-table-container\" ref=\"containerRef\">\r\n    <div class=\"virtual-table-header\" v-if=\"showHeader\">\r\n      <div \r\n        v-for=\"column in columns\" \r\n        :key=\"column.prop\"\r\n        class=\"virtual-table-cell header-cell\"\r\n        :style=\"{ width: column.width || 'auto', minWidth: column.minWidth || 'auto' }\"\r\n      >\r\n        {{ column.label }}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"virtual-table-body\" ref=\"bodyRef\" @scroll=\"handleScroll\">\r\n      <div class=\"virtual-table-spacer\" :style=\"{ height: totalHeight + 'px' }\">\r\n        <div \r\n          class=\"virtual-table-row\"\r\n          v-for=\"(item, index) in visibleItems\" \r\n          :key=\"getItemKey(item, startIndex + index)\"\r\n          :style=\"{ \r\n            transform: `translateY(${(startIndex + index) * itemHeight}px)`,\r\n            height: itemHeight + 'px'\r\n          }\"\r\n        >\r\n          <div \r\n            v-for=\"column in columns\" \r\n            :key=\"column.prop\"\r\n            class=\"virtual-table-cell\"\r\n            :style=\"{ width: column.width || 'auto', minWidth: column.minWidth || 'auto' }\"\r\n          >\r\n            <slot :name=\"column.prop\" :row=\"item\" :column=\"column\" :index=\"startIndex + index\">\r\n              {{ getCellValue(item, column.prop) }}\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from 'vue'\r\n\r\nexport default {\r\n  name: 'VirtualTable',\r\n  props: {\r\n    data: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    columns: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    itemHeight: {\r\n      type: Number,\r\n      default: 40\r\n    },\r\n    showHeader: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    itemKey: {\r\n      type: String,\r\n      default: 'id'\r\n    },\r\n    buffer: {\r\n      type: Number,\r\n      default: 5\r\n    }\r\n  },\r\n  emits: ['scroll', 'load-more'],\r\n  setup(props, { emit }) {\r\n    const containerRef = ref(null)\r\n    const bodyRef = ref(null)\r\n    const scrollTop = ref(0)\r\n    const containerHeight = ref(0)\r\n    \r\n    // 计算总高度\r\n    const totalHeight = computed(() => {\r\n      return props.data.length * props.itemHeight\r\n    })\r\n    \r\n    // 计算可见区域的起始和结束索引\r\n    const visibleRange = computed(() => {\r\n      const start = Math.floor(scrollTop.value / props.itemHeight)\r\n      const visibleCount = Math.ceil(containerHeight.value / props.itemHeight)\r\n      const end = Math.min(start + visibleCount + props.buffer * 2, props.data.length)\r\n      const actualStart = Math.max(0, start - props.buffer)\r\n      \r\n      return {\r\n        start: actualStart,\r\n        end: end,\r\n        startIndex: actualStart\r\n      }\r\n    })\r\n    \r\n    // 获取可见的项目\r\n    const visibleItems = computed(() => {\r\n      const { start, end } = visibleRange.value\r\n      return props.data.slice(start, end)\r\n    })\r\n    \r\n    const startIndex = computed(() => visibleRange.value.startIndex)\r\n    \r\n    // 获取单元格值\r\n    const getCellValue = (item, prop) => {\r\n      if (typeof prop === 'function') {\r\n        return prop(item)\r\n      }\r\n      return item[prop]\r\n    }\r\n    \r\n    // 获取项目键值\r\n    const getItemKey = (item, index) => {\r\n      if (props.itemKey && item[props.itemKey]) {\r\n        return item[props.itemKey]\r\n      }\r\n      return index\r\n    }\r\n    \r\n    // 处理滚动事件\r\n    const handleScroll = (event) => {\r\n      scrollTop.value = event.target.scrollTop\r\n      emit('scroll', event)\r\n      \r\n      // 检查是否需要加载更多数据\r\n      const { end } = visibleRange.value\r\n      if (end >= props.data.length - props.buffer) {\r\n        emit('load-more')\r\n      }\r\n    }\r\n    \r\n    // 更新容器高度\r\n    const updateContainerHeight = async () => {\r\n      await nextTick()\r\n      if (containerRef.value) {\r\n        containerHeight.value = containerRef.value.clientHeight\r\n      }\r\n    }\r\n    \r\n    // 滚动到指定位置\r\n    const scrollTo = (index) => {\r\n      if (bodyRef.value) {\r\n        const targetScrollTop = index * props.itemHeight\r\n        bodyRef.value.scrollTop = targetScrollTop\r\n      }\r\n    }\r\n    \r\n    // 滚动到顶部\r\n    const scrollToTop = () => {\r\n      scrollTo(0)\r\n    }\r\n    \r\n    // 滚动到底部\r\n    const scrollToBottom = () => {\r\n      scrollTo(props.data.length - 1)\r\n    }\r\n    \r\n    onMounted(() => {\r\n      updateContainerHeight()\r\n      window.addEventListener('resize', updateContainerHeight)\r\n    })\r\n    \r\n    onUnmounted(() => {\r\n      window.removeEventListener('resize', updateContainerHeight)\r\n    })\r\n    \r\n    // 监听数据变化\r\n    watch(() => props.data.length, () => {\r\n      updateContainerHeight()\r\n    })\r\n    \r\n    return {\r\n      containerRef,\r\n      bodyRef,\r\n      scrollTop,\r\n      containerHeight,\r\n      totalHeight,\r\n      visibleItems,\r\n      startIndex,\r\n      getCellValue,\r\n      getItemKey,\r\n      handleScroll,\r\n      scrollTo,\r\n      scrollToTop,\r\n      scrollToBottom\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.virtual-table-container {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.virtual-table-header {\r\n  display: flex;\r\n  background-color: #fafafa;\r\n  border-bottom: 1px solid #ebeef5;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.virtual-table-body {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  position: relative;\r\n}\r\n\r\n.virtual-table-spacer {\r\n  position: relative;\r\n}\r\n\r\n.virtual-table-row {\r\n  display: flex;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  background-color: #fff;\r\n}\r\n\r\n.virtual-table-row:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.virtual-table-row:nth-child(even) {\r\n  background-color: #fafafa;\r\n}\r\n\r\n.virtual-table-row:nth-child(even):hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.virtual-table-cell {\r\n  padding: 8px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  border-right: 1px solid #f0f0f0;\r\n}\r\n\r\n.virtual-table-cell:last-child {\r\n  border-right: none;\r\n}\r\n\r\n.header-cell {\r\n  font-weight: 600;\r\n  color: #606266;\r\n  background-color: #fafafa;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n/* 自定义滚动条 */\r\n.virtual-table-body::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.virtual-table-body::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 4px;\r\n}\r\n\r\n.virtual-table-body::-webkit-scrollbar-thumb {\r\n  background: #c1c1c1;\r\n  border-radius: 4px;\r\n}\r\n\r\n.virtual-table-body::-webkit-scrollbar-thumb:hover {\r\n  background: #a8a8a8;\r\n}\r\n</style>\r\n","import { render } from \"./VirtualTable.vue?vue&type=template&id=2c01bede&scoped=true\"\nimport script from \"./VirtualTable.vue?vue&type=script&lang=js\"\nexport * from \"./VirtualTable.vue?vue&type=script&lang=js\"\n\nimport \"./VirtualTable.vue?vue&type=style&index=0&id=2c01bede&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c01bede\"]])\n\nexport default __exports__","import { render } from \"./BatchAnalysis.vue?vue&type=template&id=6b5fa746&scoped=true\"\nimport script from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./BatchAnalysis.vue?vue&type=style&index=0&id=6b5fa746&scoped=true&lang=css\"\nimport \"./BatchAnalysis.vue?vue&type=style&index=1&id=6b5fa746&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b5fa746\"]])\n\nexport default __exports__"],"names":["class","style","borderBottom","marginTop","ref","batchCount","selectedLogsCount","type","size","selectedLogs","device_id","placement","effect","transition","disabled","content","log","key","id","original_name","loading","exportToCSV","showSurgeryStatistics","timeRange","format","defaultPickerRange","disableOutOfRangeDates","handleTimeRangeChange","searchKeyword","placeholder","clearable","handleSearch","onCompositionStart","onCompositionEnd","prefix","plain","showAdvancedFilter","leafConditionCount","filtersRoot","logic","clearFilters","searchExpression","filteredCount","description","data","paginatedEntries","columns","tableColumns","buffer","handleLoadMore","log_name","row","text","timestamp","formatTimestamp","explanation","height","stripe","forceRelayout","prop","label","width","default","sortable","currentPage","pageSize","total","totalCount","layout","handleSizeChange","handleCurrentChange","title","footer","applyAdvancedFilters","useLocalAdvanced","clearAllConditionsOnly","conditions","length","advancedExpression","templates","applySelectedTemplate","selectedTemplateName","tpl","name","checked","onTemplateSingleSelect","addConditionToGroup","addGroupToGroup","group","getOperatorOptions","onFieldChange","onOperatorChange","removeNodeAt","accept","beforeImportTemplates","column","minWidth","handleScroll","totalHeight","visibleItems","item","index","getItemKey","startIndex","getCellValue","props","Array","itemHeight","Number","showHeader","Boolean","itemKey","String","emits","setup","emit","containerRef","bodyRef","scrollTop","containerHeight","visibleRange","start","Math","floor","value","visibleCount","ceil","end","min","actualStart","max","slice","event","target","updateContainerHeight","async","clientHeight","scrollTo","targetScrollTop","scrollToTop","scrollToBottom","window","addEventListener","removeEventListener","__exports__","components","Search","Download","ArrowLeft","DataAnalysis","Warning","VirtualTable","ExplanationCell","needsTooltip","resizeObserver","measure","el","scrollWidth","clientWidth","handleMouseEnter","ResizeObserver","observe","unobserve","disconnect","h","popperClass","teleported","showAfter","onMouseenter","ConditionGroup","Object","required","Function","isRoot","ElSelect","ElOption","ElInput","ElButton","ElRadioGroup","ElRadioButton","Self","renderCondition","node","idx","parent","modelValue","field","v","assign","operator","map","op","isArray","arr","join","onClick","renderGroup","depth","children","store","route","router","batchLogEntries","totalPages","globalMinTs","globalMaxTs","advancedMode","useVirtualScroll","allowAutoLoad","virtualTableRef","surgeryStatisticsVisible","surgeryData","analyzing","importExpressionText","groupToString","val","inner","child","filter","segments","push","adv","countLeafConditions","reduce","acc","n","filteredEntries","list","entries","e","evaluateAdvanced","timeRangeLimit","Date","isNaN","getTime","times","d","loadSelectedLogs","fromParamsLogIds","params","logIds","fromQueryLogIds","query","singleIdParam","singleIdQuery","idsStr","ids","split","parseInt","response","dispatch","page","limit","allLogs","logs","includes","error","loadBatchLogEntries","resetData","l","baseParams","log_ids","filtersPayload","buildFiltersPayload","filters","JSON","stringify","start_time","end_time","search","serverTotalPages","serverPage","minTimestamp","maxTimestamp","idToName","Map","processedEntries","entry","get","log_id","needInit","curStart","curEnd","curStartDate","curEndDate","outOfRange","message","isComposing","searchTimer","debouncedSearch","clearTimeout","setTimeout","handleQuery","s","changed","startOfDay","getFullYear","getMonth","getDate","endOfDay","date","info","resp","api","exportBatchEntries","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","success","year","month","padStart","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatFileSize","bytes","k","sizes","i","parseFloat","pow","toFixed","warning","sessionStorage","setItem","routeData","resolve","path","open","loadTemplates","res","getSearchTemplates","applyTemplateByName","find","t","file","json","parse","first","numericFields","Set","normalizeValue","toLowerCase","isNumeric","has","undefined","toString","trim","b","numA","numB","trimmed","getFieldValue","toNumber","evalCondition","raw","isTimestamp","ok","set","re","RegExp","test","startsWith","endsWith","evaluateNode","results","some","every","exprPreviewRef","applyExpressionJSON","obj","conds","scrollIntoView","behavior","block","applyExpressionSmart","_","analyzeSurgeryData","surgeryStatistics","analyzeByLogIds","normalizeNode","normalizedValue","normalized","operatorOptionsByField","error_code","param1","param2","param3","param4","defaultOperatorOptions","cond","options","o","splice","render"],"sourceRoot":""}