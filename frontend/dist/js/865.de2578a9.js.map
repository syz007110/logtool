{"version":3,"file":"js/865.de2578a9.js","mappings":"2OAMA,IAAIA,EAAsB,KAKnB,MAAMC,EAAqBC,UAChC,IACE,MAAMC,QAAaC,MAAM,iBACnBC,QAAaF,EAAKE,OACU,kBAAvBA,EAAKC,gBACdN,EAAsBK,EAAKC,cAE/B,CAAE,MAAOC,GACPC,QAAQC,KAAK,eAAgBF,GAC7BP,EAAsB,IACxB,GAWWU,EAAa,CAACC,EAAWC,GAAoB,EAAMC,GAAY,KAC1E,IAAKF,EAAW,MAAO,IAGvB,IAAKE,GAAkC,kBAAdF,GAA0B,0CAA0CG,KAAKH,GAChG,OAAOA,EAGT,IAAII,EAGJ,GAAyB,kBAAdJ,EAET,GAAI,0CAA0CG,KAAKH,GAAY,CAE7D,MAAMK,EAAaL,EAAUM,QAAQ,IAAK,KAAO,IACjDF,EAAO,IAAIG,KAAKF,EAClB,MAEED,GAFS,mDAAmDD,KAAKH,GAE1D,IAAIO,KAAKP,SAKlBI,EAAO,IAAIG,KAAKP,GAGlB,GAAIQ,MAAMJ,EAAKK,WAAY,MAAO,IAGlC,GAAIR,GAC0B,OAAxBZ,EAA8B,CAEhC,MAAMqB,GAAeN,EAAKO,oBACpBC,EAA8C,IAArCvB,EAAsBqB,GAAoB,IACzDN,EAAKS,QAAQT,EAAKK,UAAYG,EAChC,CAMF,MAAME,EAAOV,EAAKW,cACZC,EAAQC,OAAOb,EAAKc,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOb,EAAKiB,WAAWF,SAAS,EAAG,KACzCG,EAAQL,OAAOb,EAAKmB,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOb,EAAKqB,cAAcN,SAAS,EAAG,KAChDO,EAAUT,OAAOb,EAAKuB,cAAcR,SAAS,EAAG,KAEhDS,EAAS,GAAGd,KAAQE,KAASI,KAAOE,KAASE,KAAWE,IAE9D,OAAOE,GAUIC,EAAkB,CAAC7B,EAAWC,GAAoB,EAAMC,GAAY,KAC/E,IAAKF,EAAW,MAAO,IAEvB,MAAMI,EAAO,IAAIG,KAAKP,GACtB,GAAIQ,MAAMJ,EAAKK,WAAY,MAAO,IAGlC,GAAIR,GAC0B,OAAxBZ,EAA8B,CAChC,MAAMqB,GAAeN,EAAKO,oBACpBC,EAA8C,IAArCvB,EAAsBqB,GAAoB,IACzDN,EAAKS,QAAQT,EAAKK,UAAYG,EAChC,CAMF,MAAMU,EAAQL,OAAOb,EAAKmB,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOb,EAAKqB,cAAcN,SAAS,EAAG,KAEtD,MAAO,GAAGG,KAASE,KASRM,EAAoB,CAACC,EAAS9B,GAAoB,KAC7D,IAAK8B,EAAQC,qBAAuBD,EAAQE,iBAC1C,MAAO,UAGT,MAAMC,EAAQnC,EAAWgC,EAAQC,mBAAoB/B,GAAmB,GAClEkC,EAAMpC,EAAWgC,EAAQE,iBAAkBhC,GAAmB,GAEpE,MAAO,GAAGiC,OAAWC,I,sHClIrB,QAAyG,OAApGC,IAAI,iBAAkBC,OAAK,eAAW,EAAAC,MAAQ,EAAAA,MAAQ,KAAO,OAAQC,OAAQ,EAAAA,OAAS,Q,+BAO7F,GACEC,KAAM,kBACNC,MAAO,CACLC,WAAY,CACVC,KAAMC,MACNC,QAAS,IAAM,IAEjBC,WAAY,CACVH,KAAM1B,OACN4B,QAAS,MAEXN,OAAQ,CACNI,KAAMI,OACNF,QAAS,KAEXP,MAAO,CACLK,KAAMI,OACNF,QAAS,KAEXG,YAAa,CACXL,KAAM1B,OACN4B,QAAS,WAEXI,gBAAiB,CACfN,KAAMO,QACNL,SAAS,IAGb,KAAAM,CAAMV,GACJ,MAAMW,GAAiB,QAAI,MAC3B,IAAIC,EAAgB,KAEpB,MAAMC,EAAc,KAClB,IAAKF,EAAeG,QAAUd,EAAMC,YAA0C,IAA5BD,EAAMC,WAAWc,OACjE,OAIEH,GACFA,EAAcI,UAIhBJ,EAAgBK,EAAA,GAAaN,EAAeG,OAG5C,MAAMI,EAAYlB,EAAMC,WAAWkB,OAAOC,GACxCjB,MAAMkB,QAAQD,IACdA,EAAKL,QAAU,GACI,kBAAZK,EAAK,IACO,kBAAZA,EAAK,KACXrD,MAAMqD,EAAK,MACXrD,MAAMqD,EAAK,KACZE,SAASF,EAAK,KACdE,SAASF,EAAK,KAGhB,GAAyB,IAArBF,EAAUH,OAGZ,OAFAH,EAAcI,eACdJ,EAAgB,MAKlB,MAAMW,EAAS,CACbC,WAAOC,EACPC,QAAS,CACPC,QAAS,OACTC,SAAWC,GAAO,CAACA,EAAG,GAAI,QAE5BC,YAAQL,EACRM,QAAS,CACPC,QAAS,CACPC,SAAU,CACRC,WAAY,QAEdC,QAAS,CAAC,EACVC,YAAa,CAAC,IAGlBC,MAAO,CACLnC,KAAM,OACNoC,aAAa,EACbC,IAAKC,KAAKD,OAAOrB,EAAUuB,IAAIC,GAAKA,EAAE,KACtCC,IAAKH,KAAKG,OAAOzB,EAAUuB,IAAIC,GAAKA,EAAE,MAExCE,MAAO,CACL1C,KAAM,QACNoC,YAAa,CAAC,EAAG,QACjBO,UAAW,CACThD,MAAO,GACPiD,SAAU,WACVC,UAAYjC,GACgB,YAAtBd,EAAMO,YACDiC,KAAKQ,MAAMlC,GAAOmC,WACM,YAAtBjD,EAAMO,YACRO,EAAMoC,QAAQ,GAEhBpC,EAAMmC,aAInBhB,SAAU,CACR,CACE/B,KAAM,SACNT,MAAO,EACPC,IAAK,IACLyD,UAAU,EACVC,SAAU,IACVC,UAAU,EACVC,WAAY,EACZC,WAAY,SACZC,yBAAyB,GAE3B,CACEtD,KAAM,SACNT,MAAO,EACPC,IAAK,IACLyD,UAAU,EACVC,SAAU,IACVC,UAAU,EACVI,YAAY,EACZC,gBAAgB,EAChBJ,WAAY,EACZK,OAAQ,GACRJ,WAAY,SACZK,eAAgB,EAChBJ,yBAAyB,IAG7BK,OAAQ,CACN,CACE9D,KAAMC,EAAMK,WACZH,KAAM,OACN4D,OAAQ,OACRC,UAAU,EACVC,KAAM9C,EACN+C,UAAW,CACTpE,MAAO,GAETqE,UAAW,CACTC,QAAS,OAMjBvD,EAAcwD,UAAU7C,GAAQ,IAG5B8C,EAAc,KACdzD,GACFA,EAAc0D,UA0ClB,OArCA,QAAM,IAAMtE,EAAMC,WAAY,MAC5B,QAAS,KACPY,OAED,CAAE0D,MAAM,KAGX,QAAM,IAAMvE,EAAMF,OAAQ,MACxB,QAAS,KACPuE,SAKJ,QAAM,IAAMrE,EAAMH,MAAO,MACvB,QAAS,KACPwE,SAIJ,QAAU,MACR,QAAS,KACPxD,MAIF2D,OAAOC,iBAAiB,SAAUJ,MAGpC,QAAgB,KACVzD,IACFA,EAAcI,UACdJ,EAAgB,MAElB4D,OAAOE,oBAAoB,SAAUL,KAGhC,CACL1D,iBAEJ,G,UCtMF,MAAMgE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,6GCROC,MAAM,4B,GAEJA,MAAM,yB,GAEJA,MAAM,cAAejF,MAAO,CAAEkF,aAAc,S,GAC1CD,MAAM,e,GAOAA,MAAM,0B,GAWZA,MAAM,gB,SAkCqBjF,MAAA,oB,aA+C7BiF,MAAM,iBAAkBjF,MAAO,CAAEmF,UAAW,Q,GAC1CF,MAAM,e,GAEJA,MAAM,a,GAmBNA,MAAM,a,GAmBNA,MAAM,a,GAEJA,MAAM,oB,SAEJA,MAAM,oB,GAOVA,MAAM,a,SAORA,MAAM,qB,GAEHA,MAAM,Q,GAKXA,MAAM,mB,GACJA,MAAM,kB,SAKSA,MAAM,mB,SAKdA,MAAM,mB,GA0BLA,MAAM,mB,uBAgBwCA,MAAM,qB,uBAYNA,MAAM,a,sBA0B9CA,MAAM,a,yCAuCZA,MAAM,oB,GAcNA,MAAM,mB,GACJA,MAAM,iB,GAGNA,MAAM,iB,GASFA,MAAM,qB,SAEqBA,MAAM,iB,GAe/BA,MAAM,kBAAkBjF,MAAA,2C,GA+BhCiF,MAAM,mB,aAyBAA,MAAM,gB,SAINA,MAAM,c,GAMFA,MAAM,a,GAEHA,MAAM,a,GACNA,MAAM,gB,SAKTA,MAAM,gB,SACNA,MAAM,a,IAEJA,MAAM,qB,UAOZA,MAAM,e,IACNA,MAAM,oB,UAUNA,MAAM,gB,IAEJA,MAAM,wB,UAuBtBA,MAAM,sB,IAmBJA,MAAM,yB,IAEJA,MAAM,qB,IACJA,MAAM,e,IAoBNA,MAAM,e,IAuBRA,MAAM,iB,IAaRA,MAAM,gB,IAGAA,MAAM,kB,eAGAA,MAAM,a,IAINA,MAAM,Y,IAEJA,MAAM,iB,UAWlBA,MAAM,oB,IACJA,MAAM,kB,mBAOFA,MAAM,mB,cAENA,MAAM,kB,IACJA,MAAM,kB,IAqBhBA,MAAM,oB,IAUJA,MAAM,iB,IAmBRA,MAAM,gB,IACJA,MAAM,mB,IACNA,MAAM,kBAAkBlF,IAAI,kB,UAQnBC,MAAA,gH,IAUfiF,MAAM,mB,IAEJA,MAAM,W,IACJA,MAAM,qB,IAEJA,MAAM,a,UAiBRA,MAAM,eAAyClF,IAAI,kB,IAEhDkF,MAAM,Q,UAGTA,MAAM,oB,IAEJA,MAAM,Y,IAINA,MAAM,qC,IAYRA,MAAM,c,IACJA,MAAM,gB,IAMJA,MAAM,iB,IAmBZA,MAAM,W,IAENA,MAAM,c,IAcLA,MAAM,iB,y8BA7tBlB,QA8uBM,MA9uBN,EA8uBM,EA5uBJ,QAgoBM,MAhoBN,EAgoBM,EA/nBJ,QA8nBU,IA9nBDA,MAAM,iBAAe,C,iBAC9B,IAiDM,EAjDN,QAiDM,MAjDN,EAiDM,EAhDJ,QAiBM,MAjBN,EAiBM,C,eAhBJ,QAAiC,QAA3BA,MAAM,SAAQ,UAAM,IACZ,GAAAG,WAAa,GAAK,GAAAC,kBAAoB,I,WAApD,QAEW,I,MAF4C/E,KAAK,OAAOgF,KAAK,S,kBAAQ,IACvE,E,QADuE,UACvE,QAAG,GAAAC,aAAa,IAAIC,WAAa,MAAJ,K,wBAEtC,QAWa,IAXDC,UAAU,SAASC,OAAO,QAAQC,WAAW,oBAAoB,eAAa,wBAAyBC,SAAgC,IAAtB,GAAAP,mB,CAChHQ,SAAO,QAChB,IAIM,EAJN,QAIM,MAJN,EAIM,G,aAHJ,QAES,mBAFa,GAAAN,aAAPO,K,WAAf,QAES,IAF4BC,IAAKD,EAAIE,GAAIV,KAAK,QAAQtF,MAAA,0B,kBAC7D,IAAuB,E,iBAApB8F,EAAIG,eAAa,K,wCAI1B,IAES,EAFT,QAES,IAFD3F,KAAK,OAAOgF,KAAK,S,kBAAQ,IAC3B,E,QAD2B,SAC3B,QAAG,GAAAD,mBAAoB,UAC7B,K,gCAGJ,QA6BM,MA7BN,EA6BM,EA3BK,GAAAa,SAAW,GAAAd,WAAa,I,WADjC,QAQY,I,MANT,QAAO,GAAAe,cACR7F,KAAK,OACLgF,KAAK,S,kBAEL,IAAmC,EAAnC,QAAmC,S,iBAA1B,IAAgB,EAAhB,QAAgB,M,6BAAU,SAErC,M,sCAES,GAAAY,SAAW,GAAAd,WAAa,I,WADjC,QAQY,I,MANT,QAAO,GAAAgB,YACR9F,KAAK,UACLgF,KAAK,S,kBAEL,IAA+B,EAA/B,QAA+B,S,iBAAtB,IAAY,EAAZ,QAAY,M,6BAAU,WAEjC,M,sCAES,GAAAY,SAAW,GAAAb,kBAAoB,GAAK,GAAAD,WAAa,I,WAD1D,QASY,I,MAPT,QAAO,GAAAiB,sBACR/F,KAAK,UACLgF,KAAK,QACLtF,MAAA,wB,kBAEA,IAAmC,EAAnC,QAAmC,S,iBAA1B,IAAgB,EAAhB,QAAgB,M,6BAAU,UAErC,M,0CAKJ,QAkCY,I,WAlCQ,GAAAsG,uB,qCAAA,GAAsB,0BAAE1E,MAAM,SAAS3B,MAAM,QAAQ,qB,CA+B5DsG,QAAM,QACf,IAA+D,EAA/D,QAA+D,IAAnD,QAAK,eAAE,GAAAD,wBAAuB,I,kBAAO,IAAE,oB,QAAF,MAAE,O,yBAlBlD,IAIa,CAjBL,GAAmB,sB,WAA9B,QAEM,MAFN,EAEM,EADJ,QAAsC,IAA5BE,YAAY,qB,WAExB,QA0BM,UAzBJ,QAwBW,IAxBApC,KAAM,GAAAqC,aAAczG,MAAA,gB,kBAC7B,IAA8D,EAA9D,QAA8D,IAA7C0G,KAAK,aAAaC,MAAM,OAAO1G,MAAM,SACtD,QAIkB,IAJD0G,MAAM,OAAO,YAAU,O,CAC3BnG,SAAO,QAChB,EADoBoG,SAAG,E,iBACpBA,GAAKC,sBAAsBC,eAAeC,WAAaH,GAAKE,eAAeC,WAAa,KAAJ,K,OAG3F,QAEkB,IAFDJ,MAAM,SAAS1G,MAAM,O,CACzBO,SAAO,QAAW,EAAPoG,SAAG,E,iBAAO,GAAAI,qBAAqBJ,EAAIjH,oBAAsBiH,EAAIK,aAAU,K,OAE/F,QAEkB,IAFDN,MAAM,SAAS1G,MAAM,O,CACzBO,SAAO,QAAW,EAAPoG,SAAG,E,iBAAO,GAAAI,qBAAqBJ,EAAIhH,kBAAoBgH,EAAIM,WAAQ,K,OAE3F,QAUkB,IAVDP,MAAM,KAAK1G,MAAM,MAAOkH,MAAO,GAAAV,aAAatF,OAAS,GAAI,S,CAC7DX,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAAyF,IAA9EtB,KAAK,QAAQhF,KAAK,UAAW,QAAK,GAAE,GAAA8G,qBAAqBR,I,kBAAM,IAAG,oB,QAAH,OAAG,O,wBAC7E,QAAyE,IAA9DtB,KAAK,QAAS,QAAK,GAAE,GAAA+B,mBAAmBT,I,kBAAM,IAAI,oB,QAAJ,QAAI,O,uBAErD,GAAmB,sB,WAD3B,QAIe,I,MAFbtB,KAAK,QAAQhF,KAAK,UAAW4F,SAAgC,IAAvB,GAAAoB,aAAaV,EAAIZ,IACtD,QAAK,GAAE,GAAAuB,iBAAiBX,I,kBAC1B,IAAE,oB,QAAF,MAAE,O,sHAWb,QAQY,I,WARQ,GAAAY,yB,qCAAA,GAAwB,4BAAE5F,MAAM,qBAAqB3B,MAAM,QAAQ,qB,CAK1EsG,QAAM,QACf,IAAiE,EAAjE,QAAiE,IAArD,QAAK,eAAE,GAAAiB,0BAAyB,I,kBAAO,IAAE,oB,QAAF,MAAE,O,yBALvD,IAEM,C,eAFN,QAEM,OAFDxH,MAAA,yDAA0D,gCAE/D,KACA,QAA0E,IAAhEM,KAAK,WAAYmH,KAAM,G,WAAa,GAAAC,gB,qCAAA,GAAe,mBAAEC,SAAA,I,iDAOjE,QA+DM,MA/DN,EA+DM,EA9DJ,QAuDM,MAvDN,EAuDM,EArDJ,QAgBM,MAhBN,EAgBM,C,eAfJ,QAAkC,OAA7B1C,MAAM,cAAa,QAAI,KAC5B,QAaE,I,WAZS,GAAA2C,U,qCAAA,GAAS,aAClBtH,KAAK,gBACL,kBAAgB,IAChB,oBAAkB,OAClB,kBAAgB,OAChBuH,OAAO,sBACP,eAAa,sBACb5C,MAAM,aACNK,KAAK,QACH,gBAAe,GAAAwC,mBAChB,gBAAe,GAAAC,uBACf,SAAQ,GAAAC,uB,qEAKb,QAgBM,MAhBN,EAgBM,C,eAfJ,QAAiC,OAA5B/C,MAAM,cAAa,OAAG,KAC3B,QAaW,I,WAZA,GAAAgD,c,qCAAA,GAAa,iBACtBC,YAAY,aACZjD,MAAM,eACNkD,UAAA,GACC,QAAO,GAAAC,aACP,mBAAkB,GAAAC,mBAClB,iBAAgB,GAAAC,iBACjBhD,KAAK,S,CAEMiD,QAAM,QACf,IAA6B,EAA7B,QAA6B,S,iBAApB,IAAU,EAAV,QAAU,M,oFAMzB,QAQM,MARN,EAQM,C,eAPJ,QAAkC,OAA7BtD,MAAM,cAAa,QAAI,KAC5B,QAKM,MALN,EAKM,EAJJ,QAAkG,IAAvFK,KAAK,QAAQhF,KAAK,UAAUkI,MAAA,GAAO,QAAK,eAAE,GAAAC,oBAAqB,I,kBAAM,IAAM,oB,QAAN,UAAM,O,MAClD,GAAAC,mBAAqB,I,WAAzD,QAEM,MAFN,EAA4D,SACtD,QAAG,GAAAA,oBAAqB,YAAQ,QAAG,GAAAC,YAAYC,OAAQ,KAC7D,K,oBAKJ,QAGM,MAHN,EAGM,C,eAFJ,QAAkC,OAA7B3D,MAAM,cAAa,QAAI,KAC5B,QAAgE,IAArDK,KAAK,QAAS,QAAO,GAAAuD,c,kBAAc,IAAM,oB,QAAN,UAAM,O,wBAKnB,GAAgB,mB,WAArD,QAGM,MAHN,EAGM,C,eAFJ,QAAiC,QAA3B5D,MAAM,SAAQ,UAAM,KAC1B,QAAgD,OAAhD,GAAgD,QAA1B,GAAA6D,kBAAgB,O,kBAK1C,QAsdM,MAtdN,EAsdM,EArdJ,QAEM,MAFN,EAEM,EADJ,QAAmC,UAA/B,UAAM,QAAG,GAAAC,eAAgB,IAAC,KAIrB,GAAO,U,WAAlB,QAEM,MAFN,EAEM,EADJ,QAAsC,IAA5BvC,YAAY,qB,WAIxB,QAwRM,MAxRN,EAwRM,E,qBAtRJ,QAqRW,IApRRpC,KAAM,GAAA4E,iBACPhJ,MAAA,eAEAE,OAAO,OACN+I,QAAQ,EACT,eAAa,QACb,UAAQ,KACP,iBAAgB,GAAAC,gBAChB,YAAW,GAAAC,YACX,gBAAgB,GAAAC,cAChB,kBAAkB,GAAAA,cAClB,aAAa,GAAAA,cACb,eAAe,GAAAA,cACf,eAAe,GAAAA,e,kBAGhB,IAyCkB,EAzClB,QAyCkB,IAzCD1C,KAAK,aAAazG,MAAM,M,CAC5BoJ,QAAM,QACf,IAEM,oBAFN,QAEM,OAFDpE,MAAM,cAAY,EACrB,QAAa,U,OAGNzE,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAgCM,MAhCN,EAgCM,EA/BJ,QA8Ba,IA7BXnB,UAAU,eACTxF,MAAO,IACR8B,QAAQ,SACPuH,QAAS,GAAAC,0BAA4B3C,EAAIZ,GAC1C,eAAa,wB,CAEFwD,WAAS,QAClB,IAKO,EALP,QAKO,OAJLvE,OAAK,SAAC,kBAAiB,aACA2B,EAAI6C,cAC1BzJ,OAAK,QAAE4G,EAAI6C,WAAa,CAAEC,gBAAiB9C,EAAI6C,YAAe,CAAC,GAC/D,SAAK,WAAO,GAAAE,mBAAmB/C,GAAG,W,8BA2ElD,IA0BW,CAlGW,GAAA2C,0BAA4B3C,EAAIZ,K,WAA3C,QAcM,MAdN,EAcM,G,aAbJ,QAYM,mBAXY,GAAA4D,aAATC,K,WADT,QAYM,OAVH9D,IAAK8D,EAAM3I,OAAS,OACrB+D,OAAK,SAAC,eAAc,C,OACyB,EAAI,aAAe,EAAM,M,WAAwD,OAAX,EAAM,SAIxHjF,OAAK,QAAE6J,EAAM3I,MAAQ,CAAEwI,gBAAiBG,EAAM3I,OAAU,CAAC,GACzD,QAAK,GAAE,GAAA4I,YAAYlD,EAAKiD,EAAM3I,Q,CAEpB0F,EAAI6C,aAAeI,EAAM3I,Q,WAApC,QAAoE,MAApE,EAA6D,O,qFASzE,QAyBkB,IAzBDwF,KAAK,YAAYzG,MAAM,O,CAC3BoJ,QAAM,QACf,IAEM,oBAFN,QAEM,OAFDpE,MAAM,cAAY,EACrB,QAAqB,YAAf,c,OAGCzE,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAgBM,OAhBD3B,MAAM,iBAAkB,aAAU,GAAE,GAAA8E,iBAAmBnD,EAAIZ,GAAK,aAAU,eAAE,GAAA+D,iBAAmB,O,CAClF,GAAAA,mBAAqBnD,EAAIZ,K,WACvC,QASa,I,MARVH,QAASe,EAAIoD,SACdvE,UAAU,MACVC,OAAO,OACP,eAAa,2BACZuE,YAAY,EACZ,aAAY,K,kBAEb,IAAqD,EAArD,QAAqD,MAArD,GAAqD,QAA3BrD,EAAIsD,gBAAc,K,qCAI9C,QAA2E,O,MAAtEjF,MAAM,YAAarD,MAAOgF,EAAIoD,W,QAAapD,EAAIsD,gBAAc,O,eAO1E,QAkBkB,IAlBDxD,KAAK,aAAazG,MAAM,O,CAC5BoJ,QAAM,QACf,IAEM,oBAFN,QAEM,OAFDpE,MAAM,cAAY,EACrB,QAAgB,YAAV,S,OAGCzE,SAAO,QAChB,EADoBoG,SAAG,EACvB,QASM,OATD3B,MAAM,kBAAmB,QAAK,GAAE,GAAAkF,0BAA0BvD,EAAIwD,a,mBAC9DxD,EAAIwD,YAAa,IACpB,GACQ,GAAAC,6BAA+BzD,EAAIwD,YAAc,GAAAE,yBAAyB1D,EAAIwD,c,WADtF,QAMO,Q,MAJLnF,MAAM,mBACLrD,MAAO,GAAA2I,8BAA8B3D,EAAIwD,c,QAEvC,GAAAE,yBAAyB1D,EAAIwD,aAAU,O,8BAOlD,QAWkB,IAXD1D,KAAK,cAAczG,MAAM,O,CAC7BoJ,QAAM,QACf,IAEM,oBAFN,QAEM,OAFDpE,MAAM,cAAY,EACrB,QAAe,YAAT,Q,OAGCzE,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAEM,MAFN,EAEM,EADJ,QAA2C,IAAzB4D,KAAM5D,EAAI6D,a,4BAMlC,QAyDkB,IAzDD/D,KAAK,aAAazG,MAAM,O,CAC5BoJ,QAAM,QACf,IAEM,oBAFN,QAEM,OAFDpE,MAAM,cAAY,EACrB,QAAoB,YAAd,a,OAGCzE,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAgDM,MAhDN,EAgDM,EA/CJ,QAEM,MAFN,EAEM,G,aADJ,QAAqG,mBAAtEA,EAAI8D,eAAc,CAAnCC,EAAOC,M,WAArB,QAAqG,QAAjD7E,IAAK6E,EAAO3F,MAAM,e,QAAgB0F,GAAK,K,SAE7F,QA2CM,MA3CN,EA2CM,EA1CJ,QAyCa,IAxCVrB,QAAS,GAAAuB,0BAA4BjE,EAAIZ,GAC1CjE,QAAQ,SACR0D,UAAU,SACVxF,MAAM,QACLgK,YAAY,EACb,eAAa,iB,CAwBFT,WAAS,QACpB,IAQY,EARZ,QAQY,IAPVgB,KAAA,GACC,SAAK,WAAO,GAAAM,oBAAoBlE,GAAG,UACpC3B,MAAM,oBACLW,SAAU,GAAAmF,gBAAgB5J,QAAU,EACpCS,MAAO,GAAAmJ,gBAAgB5J,QAAU,EAAI,aAAe,I,kBAErD,IAAmC,EAAnC,QAAmC,S,iBAA1B,IAAgB,EAAhB,QAAgB,M,qEA9B3B,IAqBM,EArBN,QAqBM,MArBN,EAqBM,C,eApBJ,QAAmE,OAA9D8D,MAAM,gBAAgBjF,MAAA,yBAA2B,WAAO,IAClD,GAAiB,oB,WAA5B,QAAqE,MAArE,EAAoD,kB,WACpD,QAaiB,I,iBAXN,GAAAgL,kB,qCAAA,GAAiB,qBAC1B/F,MAAM,qB,kBAGJ,IAAgB,G,WADlB,QAOW,mBANK,EAAPgG,IADT,QAOW,IALRlF,IAAKkF,EACLtE,MAAOsE,EACPrF,SAAU,GAAAsF,oBAAsB,GAAAC,qBAAqBF,I,kBAEtD,IAAuC,E,iBAApC,GAAAG,WAAWH,EAAM,IAAM,KAAKA,KAAG,K,iEAGtC,QAGM,MAHN,EAGM,EAFJ,QAA8E,IAAnE3F,KAAK,QAAS,QAAK,iBAAE,GAAAuF,wBAA0B,O,kBAAM,IAAE,oB,QAAF,MAAE,O,OAClE,QAAmF,IAAxEvF,KAAK,QAAQhF,KAAK,UAAW,QAAO,GAAA+K,sB,kBAAsB,IAAE,oB,QAAF,MAAE,O,8DAsBrF,QA2FkB,IA3FD3E,KAAK,aAAazG,MAAM,O,CAC5BoJ,QAAM,QACf,IAEM,oBAFN,QAEM,OAFDpE,MAAM,cAAY,EACrB,QAAe,YAAT,Q,OAGCzE,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAkFM,MAlFN,EAkFM,EAhFJ,QAMY,IALV4D,KAAA,GACC,QAAK,GAAE,GAAAc,sBAAsB1E,GAC9B3B,MAAM,iB,kBAEN,IAA2B,EAA3B,QAA2B,S,iBAAlB,IAAQ,EAAR,QAAQ,M,gCAEnB,QAMY,IALVuF,KAAA,GACC,QAAK,GAAE,GAAAe,iBAAiB3E,GACzB3B,MAAM,iB,kBAEN,IAAmC,EAAnC,QAAmC,S,iBAA1B,IAAgB,EAAhB,QAAgB,M,gCAE3B,QAiEa,IAhEXQ,UAAU,aACTxF,MAAO,IACR8B,QAAQ,SACPuH,QAAS,GAAAkC,0BAA4B5E,EAAIZ,GAC1C,eAAa,iB,CAEFxF,SAAO,aACL,GAAAgL,0BAA4B5E,EAAIZ,K,WAA3C,QA8CM,UA7CN,QAGM,MAHN,EAGM,C,eAFJ,QAAe,YAAT,MAAE,KACR,QAAqE,IAA1DyF,KAAA,GAAKnG,KAAK,QAAS,QAAK,GAAE,GAAAoG,YAAY9E,I,kBAAM,IAAE,oB,QAAF,MAAE,O,yBAE7B,GAAA+E,SAAS/E,GAAKgF,MAAMzK,OAAS,I,WAA3D,QAuBM,MAvBN,EAuBM,G,aAtBJ,QAqBM,mBAnBW,GAAAwK,SAAS/E,GAAKgF,MAAtBpK,K,WAFT,QAqBM,OApBJyD,MAAM,YAELc,IAAKvE,EAAKwE,I,EAEX,QAOM,MAPN,EAOM,EANJ,QAAmI,QAA7Hf,OAAK,SAAC,YAAW,SAAoBzD,EAAKqK,YAAc,Y,QAAYrK,EAAKsK,UAAW,KAAC,QAAG,GAAAC,UAAUvK,EAAKqK,aAAc,IAAC,IAC5H,QAA0E,OAA1E,GAA0E,QAA/C,GAAA7E,qBAAqBxF,EAAKwK,aAAU,IAC/D,QAGO,OAHP,EAGO,CAFY,GAAAC,YAAYzK,K,WAA7B,QAAgH,I,MAA5EiK,KAAA,GAAKnL,KAAK,UAAUgF,KAAK,QAAS,QAAK,GAAE,GAAA4G,cAAc1K,I,kBAAO,IAAE,oB,QAAF,MAAE,O,wCACnF,GAAA2K,cAAc3K,K,WAA/B,QAAqH,I,MAA/EiK,KAAA,GAAKnL,KAAK,SAASgF,KAAK,QAAS,QAAK,GAAE,GAAA8G,kBAAkB5K,I,kBAAO,IAAE,oB,QAAF,MAAE,O,4CAG7E,GAAA6K,gBAAkB7K,EAAKwE,K,WAAvD,QAAmF,MAAnF,GAAmF,QAArBxE,EAAKqE,SAAO,M,WAC1E,QAMM,MANN,EAMM,EALJ,QAAiG,I,WAA9E,GAAAyG,mB,uCAAA,GAAkB,sBAAEC,UAAU,KAAK,qBAAgBjM,KAAK,WAAWmH,KAAK,K,wBAC3F,QAGM,MAHN,GAGM,EAFJ,QAA8D,IAAnDnC,KAAK,QAAS,QAAO,GAAAkH,gB,kBAAgB,IAAE,oB,QAAF,MAAE,O,qBAClD,QAAmF,IAAxElH,KAAK,QAAQhF,KAAK,UAAW,QAAK,GAAE,GAAAmM,eAAejL,I,kBAAO,IAAE,oB,QAAF,MAAE,O,sDAK/E,QAA0C,MAA1C,GAAgC,UAChC,QASM,MATN,GASM,EARJ,QAOE,IANAkL,OAAO,oBACPC,MAAA,GACC,YAAW,GAAAhB,SAAS/E,GAAKgG,SACzBC,MAAO,GAAAlB,SAAS/E,GAAKiG,MACrB,eAAc,GAAAlB,SAAS/E,GAAKkG,KAC5B,gBAAiBC,GAAI,GAAAC,gBAAgBpG,EAAImG,I,iEAGd,GAAa,gB,WAA7C,QAKM,MALN,GAKM,EAJJ,QAAuH,I,WAApG,GAAAE,e,uCAAA,GAAc,kBAAE/E,YAAY,cAAcqE,UAAU,KAAK,qBAAgBjM,KAAK,WAAWmH,KAAK,K,wBACjH,QAEM,MAFN,GAEM,EADJ,QAAmF,IAAxEnC,KAAK,QAAQhF,KAAK,UAAW,QAAK,GAAE,GAAA4M,cAActG,I,kBAAM,IAAI,oB,QAAJ,QAAI,O,iEAKlE4C,WAAS,QACtB,IAMY,EANZ,QAMY,IALVgB,KAAA,GACAvF,MAAM,gBACD,SAAK,WAAO,GAAAkI,UAAUvG,GAAG,W,kBAE9B,IAA2B,EAA3B,QAA2B,S,iBAAlB,IAAQ,EAAR,QAAQ,M,+MA3Qd,GAAAV,cAsRuB,GAAA6C,cAAgB,I,WAAtD,QAUM,MAVN,GAUM,EATJ,QAQE,IAPC,eAAc,GAAAqE,YACd,YAAW,GAAAR,SACX,aAAY,CAAC,GAAI,IAAK,IAAK,KAC3BC,MAAO,GAAAQ,WACRX,OAAO,0CACN,aAAa,GAAAY,iBACb,gBAAgB,GAAAC,qB,kGAKrB,QAwDY,I,WAvDD,GAAAC,uB,uCAAA,GAAsB,0BAC/B5L,MAAM,QACN3B,MAAM,QACL,wBAAsB,G,CA+CZsG,QAAM,QACf,IAEM,EAFN,QAEM,MAFN,GAEM,EADJ,QAA0E,IAA/DjG,KAAK,UAAW,QAAO,GAAAmN,wB,kBAAwB,IAAI,oB,QAAJ,QAAI,O,yCA/ClE,IA2CM,EA3CN,QA2CM,MA3CN,GA2CM,C,eA1CJ,QAA6C,OAAxCxI,MAAM,iBAAgB,gBAAY,KACvC,QAwCM,MAxCN,GAwCM,EAvCJ,QAkBM,MAlBN,GAkBM,C,eAjBJ,QAAgB,aAAT,KAAC,KACR,QAME,I,WALS,GAAAyI,c,uCAAA,GAAa,iBACrB/K,IAAK,EACLI,IAAK,GACN,oBAAkB,QAClB/C,MAAA,gB,sCAEF,QAAkC,QAA5BiF,MAAM,cAAa,MAAE,KAC3B,QAME,I,WALS,GAAA0I,c,uCAAA,GAAa,iBACrBhL,IAAK,EACLI,IAAK,GACN,oBAAkB,QAClB/C,MAAA,oC,sCAEF,QAAiC,QAA3BiF,MAAM,cAAa,KAAC,M,eAE5B,QAAc,YAAR,KAAC,KACP,QAkBM,MAlBN,GAkBM,C,eAjBJ,QAAgB,aAAT,KAAC,KACR,QAME,I,WALS,GAAA2I,a,uCAAA,GAAY,gBACpBjL,IAAK,EACLI,IAAK,GACN,oBAAkB,QAClB/C,MAAA,gB,sCAEF,QAAkC,QAA5BiF,MAAM,cAAa,MAAE,KAC3B,QAME,I,WALS,GAAA4I,a,uCAAA,GAAY,gBACpBlL,IAAK,EACLI,IAAK,GACN,oBAAkB,QAClB/C,MAAA,oC,sCAEF,QAAiC,QAA3BiF,MAAM,cAAa,KAAC,Y,wBAalC,QA0DY,I,WAzDD,GAAA6I,iB,uCAAA,GAAgB,oBACzBC,UAAU,MACVzI,KAAK,QACJ,eAAa,G,kBAEd,IAmDM,EAnDN,QAmDM,MAnDN,GAmDM,EAlDJ,QAiDU,I,WAjDQ,GAAA0I,iB,uCAAA,GAAgB,oBAAEC,QAAA,I,kBAClC,IAmBc,EAnBd,QAmBc,IAnBAtH,MAAK,SAAW,GAAAuH,kBAAmB/N,KAAK,Q,kBACpD,IAiBM,EAjBN,QAiBM,MAjBN,GAiBM,CAhBQ,GAAAgO,iBAAiBhN,OAAO,GAAM,GAAAiN,mB,WAA1C,QAcM,WAbJ,QAYM,OAZDnJ,MAAM,sBAAuB,QAAK,iBAAE,GAAAoJ,wBAAyB,I,EAChE,QAGM,MAHN,GAGM,EAFJ,QAAmC,S,iBAA1B,IAAgB,EAAhB,QAAgB,M,qBACzB,QAAsC,QAAhCpJ,MAAM,eAAc,SAAK,OAEjC,QAGM,MAHN,GAGM,EAFJ,QAAwE,OAAnEA,MAAM,iBAAkBjF,OAAK,eAAW,GAAAsO,YAAc,O,SAC3D,QAA+E,MAA/E,IAA+E,QAAjD,GAAAJ,gBAAiB,KAAC,QAAG,GAAAK,qBAAmB,MAExE,QAEY,IAFDtJ,MAAM,aAAauF,KAAA,GAAKgE,OAAA,GAAQ,SAAK,QAAO,GAAAC,eAAc,W,kBACnE,IAA6B,EAA7B,QAA6B,S,iBAApB,IAAU,EAAV,QAAU,M,8CAIzB,QAAyC,I,MAAxBjI,YAAY,iB,mBAGjC,QA2Bc,IA3BAG,MAAK,QAAU,GAAAoE,gBAAgB5J,UAAWhB,KAAK,U,uBAC3B,GAAA4K,gBAAgB5J,OAAS,I,WAA7D,QAwBM,MAxBN,GAwBM,EAvBJ,QAsBM,MAtBN,GAsBM,G,aArBJ,QAoBM,mBAnBY,GAAA4J,gBAAT2D,K,WADT,QAoBM,OAlBH3I,IAAK2I,EAAM1I,GACZf,MAAM,uBACL,QAAK,GAAE,GAAA0J,gBAAgBD,I,EAExB,QAAoD,MAApD,IAAoD,QAApBA,EAAM9M,OAAK,IAC3C,QAAmE,OAA9DqD,MAAM,kBAAmBe,GAAE,eAAiB0I,EAAM1I,M,YACvD,QAEM,MAFN,GAEM,EADJ,QAAwE,MAAxE,IAAwE,QAAzC,GAAA4I,gBAAgBF,EAAM/Q,YAAS,MAEhE,QAQY,IAPV2H,KAAK,QACLkF,KAAA,GACAgE,OAAA,GACAvJ,MAAM,uBACL,SAAK,WAAO,GAAA4J,qBAAqBH,EAAM1I,IAAE,W,kBAE1C,IAA6B,EAA7B,QAA6B,S,iBAApB,IAAU,EAAV,QAAU,M,gEAKvB,QAAyC,I,MAAxBQ,YAAY,e,uEAMrC,QAgBY,I,WAhBQ,GAAA6H,uB,uCAAA,GAAsB,0BAAEzM,MAAM,QAAQ3B,MAAM,S,CAUnDsG,QAAM,QACf,IAGM,EAHN,QAGM,MAHN,GAGM,EAFJ,QAA+E,IAAnE,QAAO,GAAAkI,eAAiB7I,UAAW,GAAAwI,kB,kBAAkB,IAAE,oB,QAAF,MAAE,O,gCACnE,QAAuG,IAA5F9N,KAAK,UAAW,QAAO,GAAAwO,qBAAuBlJ,UAAW,GAAAwI,kB,kBAAkB,IAAK,oB,QAAL,SAAK,O,oDAZ/F,IAQM,EARN,QAQM,MARN,GAQM,EAPJ,QAME,IALA9N,KAAK,W,WACI,GAAA8N,iB,uCAAA,GAAgB,oBACxBW,SAAU,CAAEC,QAAS,GAAIC,QAAS,IACnChK,MAAM,qBACNiD,YAAY,mB,mDAgBlB,QAoBY,I,WAnBD,GAAAgH,mB,uCAAA,GAAkB,sBAC3BtN,MAAM,UACN3B,MAAM,MACL,wBAAsB,EACtB,SAAQ,GAAAkP,qB,kBAET,IAYM,EAZN,QAYM,MAZN,GAYM,EAXJ,QAAmD,MAAnD,IAAmD,QAAnB,GAAAC,YAAU,IAC1C,QASM,MATN,GASM,CAPI,GAAAC,kBAAoB9O,MAAMkB,QAAQ,GAAA4N,iBAAiBjL,OAAS,GAAAiL,iBAAiBjL,KAAKjD,OAAS,I,WADnG,QAME,I,MAJC,cAAa,GAAAkO,iBAAiBjL,KAC9B,cAAa,GAAAiL,iBAAiBC,gBAAkB,KAChDpP,OAAQ,IACR,qBAAmB,G,oDAEtB,QAA4H,MAA5H,GAAkH,U,wDAS5H,QA6FY,I,WA7FQ,GAAAuI,mB,uCAAA,GAAkB,sBAAE7G,MAAM,OAAO3B,MAAM,S,CAuF9CsG,QAAM,QACf,IAGO,EAHP,QAGO,OAHP,GAGO,EAFL,QAA6D,IAAjD,QAAK,iBAAE,GAAAkC,oBAAqB,I,kBAAO,IAAE,oB,QAAF,MAAE,O,OACjD,QAAsE,IAA3DnI,KAAK,UAAW,QAAO,GAAAiP,sB,kBAAsB,IAAE,oB,QAAF,MAAE,O,yCAzF9D,IAqFM,EArFN,QAqFM,MArFN,GAqFM,EAnFJ,QAkEM,MAlEN,GAkEM,EAjEJ,QAkBM,MAlBN,GAkBM,C,eAjBJ,QAA6C,OAAxCtK,MAAM,iBAAgB,gBAAY,KACvC,QAeM,MAfN,GAeM,EAdJ,QAME,I,WALS,GAAAuK,iB,uCAAA,GAAgB,oBACzBlK,KAAK,QACL,cAAY,KACZ,gBAAc,MACd,oB,wBAEF,QAMmB,IALjBA,KAAK,QACLhF,KAAK,SACLkK,KAAA,GACC,QAAO,GAAAiF,uBACP7J,UAAW,GAAA+C,YAAY+G,YAAgD,IAAlC,GAAA/G,YAAY+G,WAAWvO,Q,kBAC9D,IAAM,oB,QAAN,UAAM,O,mCAGqB,GAAkB,qB,WAAlD,QAGM,MAHN,GAGM,C,eAFJ,QAAiC,QAA3B8D,MAAM,SAAQ,UAAM,KAC1B,QAAkD,OAAlD,IAAkD,QAA5B,GAAA0K,oBAAkB,I,sBAGN,GAAAC,WAAa,GAAAA,UAAUzO,S,WAA3D,QAiBM,MAjBN,GAiBM,C,eAhBJ,QAAwC,OAAnC8D,MAAM,iBAAgB,WAAO,KAClC,QAGM,MAHN,GAGM,EAFJ,QAAiI,IAAtHK,KAAK,QAAQhF,KAAK,UAAUkI,MAAA,GAAO,QAAO,GAAAqH,sBAAwBjK,UAAW,GAAAkK,sB,kBAAsB,IAAO,oB,QAAP,WAAO,O,8CACrH,QAAmD,QAA7C7K,MAAM,QAAO,6BAAyB,OAE9C,QAUM,MAVN,GAUM,G,aATJ,QAQkB,mBAPF,GAAA2K,UAAPG,K,WADT,QAQkB,IANfhK,IAAKgK,EAAI5P,KACT6P,QAAS,GAAAF,uBAAyBC,EAAI5P,KACtC,SAAS6P,GAAY,GAAAC,uBAAuBF,EAAI5P,KAAM6P,GACvD/K,MAAM,oB,kBAEN,IAAc,E,iBAAX8K,EAAI5P,MAAI,K,gEAIjB,QAsBM,MAtBN,GAsBM,EArBJ,QAUM,MAVN,GAUM,C,eATJ,QAAkB,YAAZ,SAAK,KACX,QAGa,I,WAHY,GAAAwI,YAAYC,M,uCAAZ,GAAAD,YAAiB,U,kBAC5C,IAAkD,EAAlD,QAAkD,IAAjChC,MAAM,OAAK,C,iBAAC,IAAG,oB,QAAH,OAAG,O,OAChC,QAAgD,IAA/BA,MAAM,MAAI,C,iBAAC,IAAE,oB,QAAF,MAAE,O,gCAE5B,QAGA,MAHA,GAGA,EAFE,QAAiG,IAAtFrB,KAAK,QAAQhF,KAAK,UAAW,QAAK,iBAAE,GAAA4P,oBAAoB,GAAAvH,e,kBAAc,IAAI,oB,QAAJ,QAAI,O,OACrF,QAA8E,IAAnErD,KAAK,QAAS,QAAK,iBAAE,GAAA6K,gBAAgB,GAAAxH,e,kBAAc,IAAI,oB,QAAJ,QAAI,O,WAGtE,QASE,IARCyH,MAAO,GAAAzH,YACP,uBAAsB,GAAA0H,mBACtB,kBAAiB,GAAAC,cACjB,qBAAoB,GAAAC,iBACpB,yBAAwB,GAAAL,oBACxB,qBAAoB,GAAAC,gBACpB,iBAAgB,GAAAK,aAChB,WAAS,G,oJAMhB,QAWM,MAXN,GAWM,C,eAVJ,QAAyC,OAApCvL,MAAM,iBAAgB,YAAQ,KACrC,QAQM,MARN,GAQM,EAPJ,QAMY,IALT,kBAAgB,EACjBwL,OAAO,mBACN,gBAAe,GAAAC,uB,kBAEd,IAA+C,EAA/C,QAA+C,IAApCpL,KAAK,SAAO,C,iBAAC,IAAW,oB,QAAX,eAAW,O,kEAgB7C,QAQE,I,WAPS,GAAAqL,kB,uCAAA,GAAiB,qBACzB,aAAY,GAAAC,YAAYC,UACxB,gBAAe,GAAAD,YAAYE,aAC3B,WAAU,GAAAF,YAAYG,QACtBC,YAAa,GAAAJ,YAAYI,YACzB,eAAc,GAAAJ,YAAYK,YAC1B,YAAS,iBAAE,GAAAN,mBAAoB,I,siCCjoBtC,MAAMvQ,EAAQ,EA2BR8Q,EAAO,EAEP5H,GAAU,QAAS,CACvB6H,IAAK,IAAM/Q,EAAMgR,WACjBC,IAAMnQ,GAAUgQ,EAAK,oBAAqBhQ,KAGtCoQ,GAAa,UAAI,GACjBC,GAAsB,UAAI,GAC1BC,GAAY,SAAI,UAGtB,QAAUtU,gBACF,aAIR,MAAMuU,EAAgB,IAAIC,IAGpBC,EAAc,CAACzQ,EAAO0Q,EAAWC,EAAW,SAChD,GAAc,OAAV3Q,QAA4BW,IAAVX,EAAqB,MAAO,IAGlD,GAAI0Q,IAAcA,EAAUE,SAAS,OAASF,EAAUE,SAAS,WAE9C,QAAbD,GAAqC,SAAdD,GAAsC,SAAdA,GAA0BH,EAAcM,IAAIH,KAC7FpU,QAAQsI,IAAI,UAAU8L,MAAc1Q,KACpCuQ,EAAcO,IAAIJ,IAEC,kBAAV1Q,GAAuC,KAAjBA,EAAM+Q,QAAe,CACpD,MAAMC,GAAY,SAAWhR,GAK7B,MAJiB,QAAb2Q,GAAqC,SAAdD,GAAsC,SAAdA,IAAyBH,EAAcM,IAAIH,KAC5FpU,QAAQsI,IAAI,UAAU8L,SAAiBM,KACvCT,EAAcU,OAAOP,IAEhBM,CACT,CAGF,MAAqB,kBAAVhR,EACFkR,KAAKC,UAAUnR,EAAO,KAAM,GAE9BtC,OAAOsC,IAIVoR,EAAwBC,IAC5B,GAAY,OAARA,QAAwB1Q,IAAR0Q,EAAmB,OAAOA,EAE9C,GAAIhS,MAAMkB,QAAQ8Q,GAChB,OAAOA,EAAI1P,IAAIrB,GAAQ8Q,EAAqB9Q,IAG9C,GAAmB,kBAAR+Q,EAAkB,CAC3B,MAAMhT,EAAS,CAAC,EAChB,IAAK,MAAOwG,EAAK7E,KAAUsR,OAAOC,QAAQF,GAAM,CAE9C,MAAMG,EAAc3M,EAAI4M,cAAcb,SAAS,SAC5B/L,EAAI4M,cAAcb,SAAS,cACnB,eAAR/L,GACQ,aAARA,GACQ,YAARA,GACQ,aAARA,GACQ,eAARA,GACQ,eAARA,GACQ,qBAARA,EAGjBxG,EAAOwG,GADL2M,GAAexR,GACH,SAAWA,GAEXoR,EAAqBpR,EAEvC,CACA,OAAO3B,CACT,CAEA,OAAOgT,GAIHK,EAAwBxO,IAC5B,IAAKA,EAAM,MAAO,IAGlB,MAAMyO,EAAgBT,KAAKU,MAAMV,KAAKC,UAAUjO,IAG1C7E,EAAS+S,EAAqBO,GAEpC,OAAOT,KAAKC,UAAU9S,EAAQ,KAAM,IAKhCwT,EAAgBzS,IACpB,MAAM0S,EAAW,CACf,MAAS,UACT,WAAc,UACd,KAAQ,UACR,MAAS,OACT,YAAe,SACf,YAAe,UAEjB,OAAOA,EAAS1S,IAAS,WAIrB2S,EAAgB3S,IACpB,MAAM4S,EAAW,CACf,MAAS,OACT,WAAc,QACd,KAAQ,OACR,MAAS,OACT,YAAe,OACf,YAAe,QAEjB,OAAOA,EAAS5S,IAASA,GAIrB6S,EAAkBjW,UACtB,UACQ,KAAakW,QACjB,2BACA,OACA,CACEC,kBAAmB,OACnBC,iBAAkB,KAClBhT,KAAM,YAIVgR,EAAWpQ,OAAQ,EAEnB,MAAMqS,QAAiBC,GAAA,EAAIC,kBAAkBC,2BAC3CtT,EAAM6Q,aACN,GAGEsC,EAASnP,KAAKuP,SAChB,MAAUA,QAAQ,2BAClBzC,EAAK,aACL5H,EAAQpI,OAAQ,GAEhB,MAAU3D,MAAMgW,EAASnP,KAAKwP,SAAW,OAE7C,CAAE,MAAOrW,GACO,WAAVA,IACFC,QAAQD,MAAM,YAAaA,GAC3B,MAAUA,MAAM,cAAgBA,EAAMgW,UAAUnP,MAAMwP,SAAWrW,EAAMqW,UAE3E,CAAE,QACAtC,EAAWpQ,OAAQ,CACrB,G,uOAhSA,QAkGY,G,WAjGDoI,EAAA,M,uCAAO,SAChB1H,MAAM,SACN3B,MAAM,SACL,wBAAsB,EACvB,qB,kBAEA,IA0FM,EA1FN,QA0FM,MA1FN,GA0FM,EAxFJ,QAeM,MAfN,GAeM,EAdJ,QAME,GALAK,KAAK,UACJsB,MAAK,gBAAkB,EAAAiP,uBAAuB,EAAAG,YAAY7P,aAC3D,eACC0S,UAAU,EACX7T,MAAA,0B,mBAGF,QAKM,MALN,GAKM,EAJJ,QAAkD,GAAtC,QAAK,eAAEsJ,EAAA,OAAU,I,kBAAO,IAAE,kB,QAAF,MAAE,O,OACtC,QAEY,GAFDhJ,KAAK,UAAW,QAAO6S,EAAkBjN,QAASoL,EAAA,O,kBAAY,IAEzE,kB,QAFyE,UAEzE,O,yBAKJ,QA0BM,MA1BN,GA0BM,C,aAzBJ,QAAe,UAAX,UAAM,KACV,QAuBW,GAvBAlN,KAAM,EAAA4M,YAAahR,MAAA,eAAoB,aAAW,O,kBAC3D,IAA6D,EAA7D,QAA6D,GAA5C0G,KAAK,YAAYC,MAAM,OAAO1G,MAAM,SACpD,QAMkB,GAND0G,MAAM,OAAO,YAAU,O,CAC3BnG,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAEM,MAFN,GAEM,EADJ,QAAgE,oBAAxD+K,EAAY/K,EAAIkN,SAAUlN,EAAIgL,UAAW,QAAF,O,OAIrD,QAMkB,GANDjL,MAAM,MAAM,YAAU,O,CAC1BnG,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAEM,MAFN,GAEM,EADJ,QAAgE,oBAAxD+K,EAAY/K,EAAImN,SAAUnN,EAAIgL,UAAW,QAAF,O,OAItD,QAMkB,GANDlL,KAAK,OAAOC,MAAM,KAAK1G,MAAM,O,CACjCO,SAAO,QAChB,EADoBoG,SAAG,EACvB,QAES,GAFAtG,KAAMyS,EAAanM,EAAItG,O,kBAC9B,IAA4B,E,iBAAzB2S,EAAarM,EAAItG,OAAI,K,iDAQvBiR,EAAmB,Q,WAA9B,QA6BM,MA7BN,GA6BM,C,eA5BJ,QAAe,UAAX,UAAM,KACV,QA0BU,G,WA1BQC,EAAA,M,uCAAS,U,kBACxB,IAWc,EAXd,QAWc,GAXD7K,MAAM,OAAOxG,KAAK,S,kBAC7B,IASM,EATN,QASM,MATN,GASM,EARJ,QAGM,MAHN,GAGM,C,aAFJ,QAAgB,UAAZ,WAAO,KACX,QAAwE,MAAxE,IAAwE,QAA3CyS,EAAqB,EAAA9B,eAAY,MAEhE,QAGM,MAHN,GAGM,C,aAFJ,QAAe,UAAX,UAAM,KACV,QAAmE,MAAnE,IAAmE,QAAtC8B,EAAqB,EAAA7B,UAAO,S,OAK/D,QAWc,GAXDpK,MAAM,QAAQxG,KAAK,c,kBAC9B,IASM,EATN,QASM,MATN,GASM,EARJ,QAGM,MAHN,GAGM,C,aAFJ,QAAmB,UAAf,cAAU,KACd,QAAwF,MAAxF,IAAwF,QAA3DyS,EAAqB,EAAA9B,aAAakD,kBAAe,MAEhF,QAGM,MAHN,GAGM,C,eAFJ,QAAkB,UAAd,aAAS,KACb,QAAmF,MAAnF,IAAmF,QAAtDpB,EAAqB,EAAA7B,QAAQiD,kBAAe,S,mDAQpF,QAQM,MARN,GAQM,EAPJ,QAMY,GALV1T,KAAK,OACJ,QAAK,eAAEiR,EAAA,OAAuBA,EAAA,OAC9B0C,KAAM1C,EAAA,MAAsB,UAAY,a,kBAEzC,IAAuC,E,iBAApCA,EAAA,MAAsB,KAAO,MAAO,QACzC,K,4DC1FR,MAAMxM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,U,WFuvBA,IACE5E,KAAM,gBACN+T,WAAY,CACVC,OAAM,UACNC,SAAQ,YACRC,UAAS,aACTC,aAAY,gBACZC,QAAO,WACPC,gBAAe,KACfC,mBAAkB,GAClBC,gBAAiB,CACfvU,KAAM,kBACNC,MAAO,CAAEoK,KAAM,CAAElK,KAAM1B,OAAQ4B,QAAS,KACxC,KAAAM,CAAMV,GAEJ,MAAO,KAAM,IAAAuU,GAAE,OAAQ,CACrB1P,MAAO,uBACPrD,MAAOxB,EAAMoK,KACbxK,MAAO,2IACNI,EAAMoK,KACX,GAEFoK,eAAgB,CACdzU,KAAM,iBACNC,MAAO,CACLgQ,MAAO,CAAE9P,KAAMkS,OAAQqC,UAAU,GACjCxE,mBAAoB,CAAE/P,KAAMwU,SAAUD,UAAU,GAChDvE,cAAe,CAAEhQ,KAAMwU,SAAUD,UAAU,GAC3CtE,iBAAkB,CAAEjQ,KAAMwU,SAAUD,UAAU,GAC9C3E,oBAAqB,CAAE5P,KAAMwU,SAAUD,UAAU,GACjD1E,gBAAiB,CAAE7P,KAAMwU,SAAUD,UAAU,GAC7CrE,aAAc,CAAElQ,KAAMwU,SAAUD,UAAU,GAC1CE,OAAQ,CAAEzU,KAAMO,QAASL,SAAS,IAEpC,KAAAM,CAAMV,GACJ,MAAM4U,GAAW,QAAiB,aAC5BC,GAAW,QAAiB,aAC5BC,GAAU,QAAiB,YAC3BC,GAAW,QAAiB,aAC5BC,GAAe,QAAiB,kBAChCC,GAAgB,QAAiB,mBACjCC,GAAO,QAAiB,kBAExBC,EAAkB,CAACC,EAAMvK,EAAKwK,KAC3B,IAAAd,GAAE,MAAO,CAAE1P,MAAO,YAAac,IAAKkF,GAAO,EAChD,IAAA0J,GAAEK,EAAU,CACV5D,WAAYoE,EAAKE,MACjB1V,MAAO,gBACPkI,YAAa,KACb,sBAAwByN,IAEF,kBAATH,GAA8B,OAATA,GAC9BA,EAAKE,MAAQC,EACbvV,EAAMkQ,cAAckF,KAGpBhD,OAAOoD,OAAOJ,EAAM,CAAEE,MAAOC,IAC7BvV,EAAMkQ,cAAckF,MAGvB,CACDhV,QAAS,IAAM,EACb,IAAAmU,GAAEM,EAAU,CAAEtO,MAAO,MAAOzF,MAAO,eACnC,IAAAyT,GAAEM,EAAU,CAAEtO,MAAO,MAAOzF,MAAO,gBACnC,IAAAyT,GAAEM,EAAU,CAAEtO,MAAO,MAAOzF,MAAO,YACnC,IAAAyT,GAAEM,EAAU,CAAEtO,MAAO,MAAOzF,MAAO,YACnC,IAAAyT,GAAEM,EAAU,CAAEtO,MAAO,MAAOzF,MAAO,YACnC,IAAAyT,GAAEM,EAAU,CAAEtO,MAAO,MAAOzF,MAAO,YACnC,IAAAyT,GAAEM,EAAU,CAAEtO,MAAO,KAAMzF,MAAO,oBAGtC,IAAAyT,GAAEK,EAAU,CACV5D,WAAYoE,EAAKK,SACjB7V,MAAO,kCACPkI,YAAa,MACb,sBAAwByN,IAEF,kBAATH,GAA8B,OAATA,GAC9BA,EAAKK,SAAWF,EAChBvV,EAAMmQ,iBAAiBiF,KAGvBhD,OAAOoD,OAAOJ,EAAM,CAAEK,SAAUF,IAChCvV,EAAMmQ,iBAAiBiF,MAG1B,CACDhV,QAAS,KAAOJ,EAAMiQ,mBAAmBmF,EAAKE,QAAU,IAAI7S,IAAIiT,IAAM,IAAAnB,GAAEM,EAAU,CAAEtO,MAAOmP,EAAGnP,MAAOzF,MAAO4U,EAAG5U,MAAO6E,IAAK+P,EAAG5U,WAE9G,YAAlBsU,EAAKK,SACD,EACE,IAAAlB,GAAEO,EAAS,CACT9D,WAAY7Q,MAAMkB,QAAQ+T,EAAKtU,OAASsU,EAAKtU,MAAM,GAAK,GACxDgH,YAAa,IACblI,MAAO,iCACP,sBAAwB2V,IACtB,MAAMI,EAAMxV,MAAMkB,QAAQ+T,EAAKtU,OAASsU,EAAKtU,MAAM8U,MAAM,EAAE,GAAK,CAAC,GAAI,IACrED,EAAI,GAAKJ,EACTH,EAAKtU,MAAQ6U,MAGjB,IAAApB,GAAEO,EAAS,CACT9D,WAAY7Q,MAAMkB,QAAQ+T,EAAKtU,OAASsU,EAAKtU,MAAM,GAAK,GACxDgH,YAAa,IACblI,MAAO,iCACP,sBAAwB2V,IACtB,MAAMI,EAAMxV,MAAMkB,QAAQ+T,EAAKtU,OAASsU,EAAKtU,MAAM8U,MAAM,EAAE,GAAK,CAAC,GAAI,IACrED,EAAI,GAAKJ,EACTH,EAAKtU,MAAQ6U,OAInB,IAAApB,GAAEO,EAAS,CACT9D,WAAY7Q,MAAMkB,QAAQ+T,EAAKtU,OAASsU,EAAKtU,MAAM+U,KAAK,KAAQT,EAAKtU,OAAS,GAC9EgH,YAAa,IACblI,MAAO,iCACP,sBAAwB2V,IAEI,kBAAfH,EAAKtU,OAAqC,OAAfsU,EAAKtU,MACzCsU,EAAKtU,MAAQyU,EAGbnD,OAAOoD,OAAOJ,EAAM,CAAEtU,MAAOyU,QAIvC,IAAAhB,GAAEQ,EAAU,CAAE7U,KAAM,SAAUkK,MAAM,EAAMxK,MAAO,mBAAoBkW,QAAS,IAAM9V,EAAMoQ,aAAaiF,EAAQxK,IAAQ,CAAEzK,QAAS,IAAM,SAItI2V,EAAc,CAAC/F,EAAOqF,EAAQW,EAAQ,KAC1C,MAAMC,EAAW9V,MAAMkB,QAAQ2O,EAAMV,YAAcU,EAAMV,WAAa,GAChE1P,EAAQoW,EAAQ,EAAI,gBAAwB,GAARA,OAAkB,GAC5D,OAAO,IAAAzB,GAAE,MAAO,CAAE1P,MAAO,YAAajF,SAAS,IAC1CqW,EAASxT,IAAI,CAAC2S,EAAMvK,IACjBuK,GAAQA,EAAKE,MACRH,EAAgBC,EAAMvK,EAAKmF,IAE7B,IAAAuE,GAAE,MAAO,CAAE1P,MAAO,YAAac,IAAKkF,EAAKjL,MAAO,gBAA8B,IAAboW,EAAQ,SAAgB,EAC9F,IAAAzB,GAAE,MAAO,CAAE1P,MAAO,uBAAyB,EACzC,IAAA0P,GAAE,OAAQ,KAAM,SAChB,IAAAA,GAAES,EAAc,CACdhE,WAAYoE,EAAK5M,OAAS,MAC1B,sBAAwB+M,IAEF,kBAATH,GAA8B,OAATA,EAC9BA,EAAK5M,MAAQ+M,EAGbnD,OAAOoD,OAAOJ,EAAM,CAAE5M,MAAO+M,MAGhC,CACDnV,QAAS,IAAM,EACb,IAAAmU,GAAEU,EAAe,CAAE1O,MAAO,OAAS,CAAEnG,QAAS,IAAM,SACpD,IAAAmU,GAAEU,EAAe,CAAE1O,MAAO,MAAQ,CAAEnG,QAAS,IAAM,WAGvD,IAAAmU,GAAE,MAAO,CAAE1P,MAAO,iBAAmB,EACnC,IAAA0P,GAAEQ,EAAU,CAAE7P,KAAM,QAAShF,KAAM,UAAW4V,QAAS,IAAM9V,EAAM8P,oBAAoBsF,IAAS,CAAEhV,QAAS,IAAM,UACjH,IAAAmU,GAAEQ,EAAU,CAAE7P,KAAM,QAAS4Q,QAAS,IAAM9V,EAAM+P,gBAAgBqF,IAAS,CAAEhV,QAAS,IAAM,UAC5F,IAAAmU,GAAEQ,EAAU,CAAE7P,KAAM,QAAShF,KAAM,SAAUkK,MAAM,EAAM0L,QAAS,IAAM9V,EAAMoQ,aAAaJ,EAAOnF,IAAQ,CAAEzK,QAAS,IAAM,aAG/H,IAAAmU,GAAEW,EAAM,CACNlF,MAAOoF,EACPnF,mBAAoBjQ,EAAMiQ,mBAC1BC,cAAelQ,EAAMkQ,cACrBC,iBAAkBnQ,EAAMmQ,iBACxBL,oBAAqB9P,EAAM8P,oBAC3BC,gBAAiB/P,EAAM+P,gBACvBK,aAAcpQ,EAAMoQ,aACpB4F,MAAQA,EAAQ,QAGtB,IAAAzB,GAAE,MAAO,CAAE1P,MAAO,iBAAmB,EACnC,IAAA0P,GAAEQ,EAAU,CAAE7P,KAAM,QAAShF,KAAM,UAAW4V,QAAS,IAAM9V,EAAM8P,oBAAoBE,IAAU,CAAE5P,QAAS,IAAM,UAClH,IAAAmU,GAAEQ,EAAU,CAAE7P,KAAM,QAAS4Q,QAAS,IAAM9V,EAAM+P,gBAAgBC,IAAU,CAAE5P,QAAS,IAAM,cAKnG,MAAO,IAAM2V,EAAY/V,EAAMgQ,MAAOhQ,EAAMgQ,MAAO,EACrD,IAGJ,KAAAtP,GACE,MAAMwV,GAAQ,WACRC,GAAQ,WAGRrQ,IAFS,YAEC,UAAI,IACdX,GAAe,SAAI,IACnBiR,GAAkB,SAAI,IACtBvO,GAAgB,SAAI,IACpBL,GAAY,SAAI,MAChBwF,GAAc,SAAI,GAClBR,GAAW,SAAI,IACfS,GAAa,SAAI,GACjBoJ,GAAa,SAAI,GAEjBC,GAAc,SAAI,MAClBC,GAAc,SAAI,MAClBC,GAAe,UAAI,GACnBpH,GAAmB,UAAI,GAKvBhC,GAAyB,UAAI,GAC7BqJ,GAAqB,SAAI,MACzBnJ,GAAgB,SAAI,GACpBE,GAAe,SAAI,GACnBD,GAAgB,SAAI,GACpBE,GAAe,SAAI,GAGnBC,GAAmB,UAAI,GACvBK,GAAmB,SAAI,IACvBI,EAAsB,GACtBH,GAAmB,SAAI,IACvBC,GAAyB,UAAI,GAC7BL,GAAmB,SAAI,QACvBE,GAAiB,QAAS,IAC1BC,EAAiBjN,MAAMC,OAAS,EAAUgN,EAAiBjN,MAAMC,OAChEiN,EAAiBlN,MACfkN,EAAiBlN,MAAM4V,MAAM,SAASvV,OAAOwV,GAAQA,EAAK9E,OAAO9Q,OAAS,GAAGA,OADhD,GAGhCmN,GAAc,QAAS,KAC3B,MAAM0I,EAAM9I,EAAehN,MACrB+V,EAAOD,EAAMzI,EAAuB,IAC1C,OAAO3L,KAAKG,IAAI,EAAGH,KAAKD,IAAI,IAAKC,KAAKQ,MAAM6T,OAIxCC,GAAyB,UAAI,GAC7B3N,GAA0B,SAAI,MAC9BiC,GAA0B,SAAI,MAC9BzB,GAAmB,SAAI,MACvBc,GAA0B,SAAI,MAC9BG,GAAoB,SAAI,MACxBE,GAAoB,UAAI,GACxBiM,GAAsB,SAAI,IAC1BC,GAAoB,SAAI,EAAC,GAAO,GAAO,GAAO,IAC9ChM,GAAa,SAAI,CAAC,MAAO,MAAO,MAAO,QACvCiM,GAAY,SAAI,GAChBC,GAA0B,SAAI,MAC9BpI,GAAqB,UAAI,GACzBE,GAAa,SAAI,IACjBrO,GAAiB,SAAI,MACrBC,GAAgB,SAAI,MACpB+J,GAAkB,SAAI,IACtBsE,GAAmB,SAAI,MAGvBkI,GAAY,SAAI,CAAC,GACjBC,GAAkB,SAAI,CAAC,GACvBC,GAAwB,SAAI,CAAC,GAC7BC,GAA0B,SAAI,CAAC,GAC/BC,GAAkB,SAAI,CAAC,GAEvBC,GAAuB,QAAS,KACpC,MAAMC,EAAStS,EAAarE,MAAM2B,IAAIiV,GAAKA,EAAE9R,IAAIiQ,KAAK,KAChD8B,EAAS,CAAEC,QAASH,GAC1B,GAAIjB,EAAa1V,OAASwH,GAAmBxH,MAAQ,EAAG,CACtD,MAAM+W,EAAiBC,KACnBD,IAAgBF,EAAOI,QAAU/F,KAAKC,UAAU4F,GACtD,CACIrQ,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,SACrC4W,EAAO9Q,WAAaW,EAAU1G,MAAM,GACpC6W,EAAO7Q,SAAWU,EAAU1G,MAAM,IAEhC+G,EAAc/G,QAChB6W,EAAOK,OAASnQ,EAAc/G,OAEhC,IACE,OAAOkR,KAAKC,UAAU0F,EACxB,CAAE,MAAOM,GACP,MAAO,EACT,IAEIhO,IAA6B,SAAI,MAGjCiO,GAAwBpb,UAC5B,IACE,MAAM6a,EAAS,CACbC,QAASzS,EAAarE,MAAM2B,IAAIiV,GAAKA,EAAE9R,IAAIiQ,KAAK,MAGlDzY,QAAQsI,IAAI,eAAgBiS,GAC5B,MAAMxE,QAAiBC,GAAA,EAAI+E,KAAKC,cAAcT,GAE9C,GAAIxE,EAASnP,KAAKuP,QAAS,CACzB8D,EAAsBvW,MAAQqS,EAASnP,KAAKoT,iBAAmB,CAAC,EAGhE,IACEiB,eAAeC,QAAQ,wBAAyBtG,KAAKC,UAAUoF,EAAsBvW,QACrFuX,eAAeC,QAAQ,4BAA6Bxa,KAAKya,MAAMtV,WACjE,CAAE,MAAO9F,GACPC,QAAQC,KAAK,cAAeF,EAC9B,CAEAC,QAAQsI,IAAI,cAAe,CACzB2R,sBAAuBjF,OAAOoG,KAAKnB,EAAsBvW,OAAOC,OAChE0X,OAAQrG,OAAOoG,KAAKnB,EAAsBvW,OAAO8U,MAAM,EAAG,IAE9D,MACExY,QAAQC,KAAK,eAAgB8V,EAASnP,KAE1C,CAAE,MAAO7G,GACPC,QAAQD,MAAM,cAAeA,GAC7Bka,EAAsBvW,MAAQ,CAAC,CACjC,GAII4X,GAA0B5b,UAC9B,IAEE,MAAM2a,EAAStS,EAAarE,MAAM2B,IAAIiV,GAAKA,EAAE9R,IAAIiQ,KAAK,KAChD8B,EAAS,CACbC,QAASH,GAIX,GAAIjB,EAAa1V,OAASwH,GAAmBxH,MAAQ,EAAG,CACtD,MAAM+W,EAAiBC,KACnBD,IACFF,EAAOI,QAAU/F,KAAKC,UAAU4F,GAEpC,CAGIrQ,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,SACrC4W,EAAO9Q,WAAaW,EAAU1G,MAAM,GACpC6W,EAAO7Q,SAAWU,EAAU1G,MAAM,IAIhC+G,EAAc/G,QAChB6W,EAAOK,OAASnQ,EAAc/G,OAIhC,MAAM6X,EAAW3G,KAAKC,UAAU0F,GAGhC,GAAIJ,EAAgBzW,MAAM6X,GAExB,YADArB,EAAwBxW,MAAQyW,EAAgBzW,MAAM6X,IAKxD,MAAMxF,QAAiBC,GAAA,EAAI+E,KAAKC,cAAcT,GAE9C,GAAIxE,EAASnP,KAAKuP,QAAS,CACzB,MAAMqF,EAAoBzF,EAASnP,KAAKoT,iBAAmB,CAAC,EAC5DE,EAAwBxW,MAAQ8X,EAGhCrB,EAAgBzW,MAAM6X,GAAYC,EAGlC,IACEP,eAAeC,QAAQ,0BAA2BtG,KAAKC,UAAU2G,IACjEP,eAAeC,QAAQ,8BAA+Bxa,KAAKya,MAAMtV,YACjEoV,eAAeC,QAAQ,kBAAmBtG,KAAKC,UAAUsF,EAAgBzW,QACzEuX,eAAeC,QAAQ,uBAAwBK,EACjD,CAAE,MAAOxb,GACPC,QAAQC,KAAK,cAAeF,EAC9B,CAIF,MACEC,QAAQC,KAAK,eAAgB8V,EAASnP,KAE1C,CAAE,MAAO7G,GACPC,QAAQD,MAAM,cAAeA,GAC7Bma,EAAwBxW,MAAQ,CAAC,CACnC,GAII+X,GAA6B/b,gBAC3B4b,KAENtB,EAAgBtW,MAAQwW,EAAwBxW,MAChDqW,EAAUrW,MAAQwW,EAAwBxW,OAMtCgY,GAAoB,CAACC,EAAWC,GAAY,KAChD,GAAIA,EACF,OAAO3B,EAAsBvW,MAAMiY,IAAc,EAGnD,MAAMpT,EAAM6R,EAAqB1W,MAC3BmY,EAAUtT,GAAO4R,EAAgBzW,MAAM6E,GACzC4R,EAAgBzW,MAAM6E,GACtB2R,EAAwBxW,MAC5B,OAAQmY,GAAUA,EAAOF,GAAcE,EAAOF,GAAa,GAKvD7O,GAA4B6O,IAChC,MAAMG,EAAcJ,GAAkBC,GAAW,GAC3CpQ,EAAgBmQ,GAAkBC,GAAW,GAGnD,OAAKI,GAAiBrY,MAKf6H,EAAgB,EAAIA,EAAc1F,WAAa,GAJ7CiW,EAAc,EAAIA,EAAYjW,WAAa,IAQhDkW,IAAmB,QAAS,KAChC,MAAMC,IAAcvR,EAAc/G,MAC5BuY,EAAwB/Q,GAAmBxH,MAAQ,EAGnDwY,KAAsB9R,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,SAC7DwY,GAAezY,OACd0G,EAAU1G,MAAM,KAAO0N,GAAgB+K,GAAezY,MAAM,KAC5D0G,EAAU1G,MAAM,KAAO0N,GAAgB+K,GAAezY,MAAM,KAE/D,SAAUsY,GAAaE,GAAoBD,KAIvCG,GAAwB,KAC5B,IAEE,MAAMC,EAA4BpB,eAAeqB,QAAQ,yBACrDD,IACFpC,EAAsBvW,MAAQkR,KAAKU,MAAM+G,IAI3C,MAAME,EAAsBtB,eAAeqB,QAAQ,mBAC/CC,IACFpC,EAAgBzW,MAAQkR,KAAKU,MAAMiH,IAGrC,MAAMC,EAAYvB,eAAeqB,QAAQ,wBACzC,GAAIE,GAAaA,IAAcpC,EAAqB1W,MAAO,CACzD,MAAM+Y,EAA8BxB,eAAeqB,QAAQ,2BACvDG,IACFvC,EAAwBxW,MAAQkR,KAAKU,MAAMmH,GAE/C,MACEvC,EAAwBxW,MAAQ,CAAC,EAInC,MAAMgZ,EAAgBzB,eAAeqB,QAAQ,aACzCI,IACF3C,EAAUrW,MAAQkR,KAAKU,MAAMoH,IAG/B,MAAMC,EAAsB1B,eAAeqB,QAAQ,mBAC/CK,IACF3C,EAAgBtW,MAAQkR,KAAKU,MAAMqH,IAGrC3c,QAAQsI,IAAI,2BAA4B,CACtCwT,YAAa9G,OAAOoG,KAAKnB,EAAsBvW,OAAOC,OACtD4H,cAAeyJ,OAAOoG,KAAKlB,EAAwBxW,OAAOC,OAC1DiZ,WAAY5H,OAAOoG,KAAKjB,EAAgBzW,OAAOC,QAEnD,CAAE,MAAO5D,GACPC,QAAQC,KAAK,YAAaF,EAC5B,GAMI4M,GAA4BjN,MAAOic,IACnC9O,GAA2BnJ,QAAUiY,EAEvC9O,GAA2BnJ,MAAQ,MAGnCmJ,GAA2BnJ,MAAQiY,EAG/BI,GAAiBrY,QACnB1D,QAAQsI,IAAI,2BACNgT,QAMNuB,GAA2BlB,IAC/B,MAAMG,EAAcJ,GAAkBC,GAAW,GAC3CpQ,EAAgBmQ,GAAkBC,GAAW,GAEnD,IAAIvF,EAAU,OAAOuF,YACrBvF,GAAW,UAAU0F,MAEjBC,GAAiBrY,MACnB0S,GAAW,aAAa7K,IAExB6K,GAAW,iBAGb,MAAU0G,KAAK,CACb1G,QAASA,EACT2G,SAAU,IACVC,WAAW,KAKTjQ,GAAiC4O,IACrC,MAAMG,EAAcJ,GAAkBC,GAAW,GAC3CpQ,EAAgBmQ,GAAkBC,GAAW,GAEnD,OAAII,GAAiBrY,MACZ,MAAMoY,WAAqBvQ,MAE3B,QAAQuQ,OAKb1P,IAAe,SAAI,CACvB,CAAE1I,MAAO,UAAWyF,MAAO,MAC3B,CAAEzF,MAAO,UAAWyF,MAAO,MAC3B,CAAEzF,MAAO,UAAWyF,MAAO,MAC3B,CAAEzF,MAAO,UAAWyF,MAAO,MAC3B,CAAEzF,MAAO,KAAMyF,MAAO,OAGlB8T,IAAe,SAAI,CACvB,CAAE/T,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,YAAaC,MAAO,WAC5B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,QAIzB8B,IAAqB,UAAI,GACzBE,IAAc,SAAI,CAAEC,MAAO,MAAO8G,WAAY,KAG9CgL,IAA2B,UAAI,GAC/BzJ,IAAc,SAAI,MAClB0J,IAAY,UAAI,GAChB/K,IAAY,SAAI,IAChBE,IAAuB,SAAI,IAC3B8K,IAAuB,SAAI,IAG3BC,GAAiBrF,IACrB,IAAKA,EAAM,MAAO,GAElB,GAAIA,EAAKE,OAASF,EAAKK,SAAU,CAC/B,MAAMiF,EAAMva,MAAMkB,QAAQ+T,EAAKtU,OAASsU,EAAKtU,MAAM+U,KAAK,KAAQT,EAAKtU,OAAS,GAC9E,MAAO,GAAGsU,EAAKE,SAASF,EAAKK,YAAYiF,GAC3C,CAEA,GAAIva,MAAMkB,QAAQ+T,EAAK9F,YAAa,CAClC,MAAM9G,EAAQ4M,EAAK5M,OAAS,MACtBmS,EAAQvF,EAAK9F,WAChB7M,IAAImY,GAASH,GAAcG,IAC3BzZ,OAAOV,SACPoV,KAAK,IAAIrN,MACZ,OAAKmS,GAEQpS,GAAYzH,MAChB,IAAI6Z,MAHM,EAMrB,CACA,MAAO,IAEHjS,IAAmB,QAAS,KAChC,MAAMmS,EAAW,GACjB,GAAIrT,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,OAAc,CACnD,MAAOtB,EAAOC,GAAO8H,EAAU1G,MAC/B+Z,EAASC,KAAK,OAAOtM,GAAgB/O,QAAY+O,GAAgB9O,KACnE,CACImI,EAAc/G,OAChB+Z,EAASC,KAAK,YAAYjT,EAAc/G,SAE1C,MAAMia,EAAMN,GAAclS,GAAYzH,OAGtC,OAFIia,GAAKF,EAASC,KAAK,GAAGC,KAEnBF,EAAShF,KAAK,WAIjBtG,IAAqB,QAAS,KAClC,MAAMwL,EAAMN,GAAclS,GAAYzH,OACtC,OAAOia,GAAO,KAGVC,GAAuB5F,GACtBA,EACDA,EAAKE,OAASF,EAAKK,SAAiB,EACpCtV,MAAMkB,QAAQ+T,EAAK9F,YAAoB8F,EAAK9F,WAAW2L,OAAO,CAACC,EAAKC,IAAMD,EAAMF,GAAoBG,GAAI,GACrG,EAHW,EAKd7S,IAAqB,QAAS,IAAM0S,GAAoBzS,GAAYzH,QAGpEsa,IAAkB,QAAS,KAC/B,MAAMC,EAAOlb,MAAMkB,QAAQ+U,EAAgBtV,OAASsV,EAAgBtV,MAAQ,GAC5E,IAAIuR,EAAUgJ,EAOd,OAJI7E,EAAa1V,OAASsO,EAAiBtO,OAASwH,GAAmBxH,MAAQ,IAC7EuR,EAAUA,EAAQlR,OAAOma,GAAKC,GAAiBD,KAG1CjJ,IAGHrN,IAAa,QAAS,IAAM7E,MAAMkB,QAAQ+U,EAAgBtV,OAASsV,EAAgBtV,MAAMC,OAAS,GAClGkE,IAAoB,QAAS,IAAM9E,MAAMkB,QAAQ8D,EAAarE,OAASqE,EAAarE,MAAMC,OAAS,GACnG4H,IAAgB,QAAS,IAAMsE,EAAWnM,OAG1CyY,IAAiB,QAAS,KAE9B,GAAIjD,EAAYxV,OAASyV,EAAYzV,MAAO,CAC1C,MAAMyB,EAAM,IAAIzE,KAAKwY,EAAYxV,OAC3B6B,EAAM,IAAI7E,KAAKyY,EAAYzV,OACjC,IAAKR,OAAOvC,MAAMwE,EAAIvE,aAAesC,OAAOvC,MAAM4E,EAAI3E,WACpD,MAAO,CAACuE,EAAKI,EAEjB,CAEA,MAAM0P,EAAU+D,EAAgBtV,MAChC,IAAKuR,GAA8B,IAAnBA,EAAQtR,OAAc,OAAO,KAC7C,MAAMya,EAAQnJ,EACX5P,IAAI6Y,GAAK,IAAIxd,KAAKwd,EAAE/d,YACpB4D,OAAOuB,IAAM3E,MAAM2E,IACtB,GAAqB,IAAjB8Y,EAAMza,OAAc,OAAO,KAC/B,MAAMwB,EAAM,IAAIzE,KAAK0E,KAAKD,OAAOiZ,IAC3B7Y,EAAM,IAAI7E,KAAK0E,KAAKG,OAAO6Y,IACjC,MAAO,CAACjZ,EAAKI,KAITiG,IAAmB,QAAS,IACzBwS,GAAgBta,OAInB2a,GAAmB3e,UAEvB,MAAM4e,EAAmBvF,EAAMwB,QAAQF,OACjCkE,EAAkBxF,EAAMyF,OAAOnE,OAC/BoE,EAAgB1F,EAAMwB,QAAQ/R,GAC9BkW,EAAgB3F,EAAMyF,OAAOhW,GAEnC,IAAImW,EAASL,GAAoBC,GAAmBE,GAAiBC,EACrE,IAAKC,EAAQ,OAEb,MAAMC,EAAMxd,OAAOud,GAChBrF,MAAM,KACNjU,IAAImD,GAAMqW,SAASrW,IACnBzE,OAAOga,IAAM7a,OAAOvC,MAAMod,IAE7B,GAAmB,IAAfa,EAAIjb,OAER,IAEE,MAAMoS,QAAiB+C,EAAMgG,SAAS,iBAAkB,CAAExP,KAAM,EAAGyP,MAAO,MACpEC,EAAUjJ,EAASnP,KAAKmU,KAC9BhT,EAAarE,MAAQsb,EAAQjb,OAAOuE,GAAOsW,EAAItK,SAAShM,EAAIE,IAC9D,CAAE,MAAOzI,GACP,MAAUA,MAAM,WAClB,GAIIkf,GAAsBvf,MAAO4P,EAAO,EAAG4P,GAAY,EAAOC,EAAS,QAEvE,GAAkC,IAA9BpX,EAAarE,MAAMC,OAIvB,IACE+E,EAAQhF,OAAQ,EAGZwb,IACFlG,EAAgBtV,MAAQ,GACxBkM,EAAYlM,MAAQ4L,GAItB,MAAM+K,EAAStS,EAAarE,MAAM2B,IAAIiV,GAAKA,EAAE9R,IAAIiQ,KAAK,KAChD2G,EAAa,CACjB5E,QAASH,EACT/K,OACAyP,MAAO3P,EAAS1L,OAIlB,GAAI0V,EAAa1V,OAASwH,GAAmBxH,MAAQ,EAAG,CACtD,MAAM+W,EAAiBC,KACnBD,IACF2E,EAAWzE,QAAU/F,KAAKC,UAAU4F,GAExC,CAGIrQ,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,SACrCyb,EAAW3V,WAAaW,EAAU1G,MAAM,GACxC0b,EAAW1V,SAAWU,EAAU1G,MAAM,IAIpC+G,EAAc/G,QAChB0b,EAAWxE,OAASnQ,EAAc/G,OAIpC,MAAMqS,QAAiB+C,EAAMgG,SAAS,4BAA6BM,EAAYD,IACzE,QAAElK,EAAO,MAAE5F,EAAO4J,WAAYoG,EAAkB/P,KAAMgQ,EAAU,aAAEC,EAAY,aAAEC,GAAiBzJ,EAASnP,KAGhH,GAAIsY,GAAsB,IAAT5P,EAAY,CAE3B,MAAMmQ,EAAgB,GAGkC,IAApDzK,OAAOoG,KAAKnB,EAAsBvW,OAAOC,QAC3C8b,EAAc/B,KAAK5C,MAIrB2E,EAAc/B,KAAKpC,MAGnBoE,QAAQC,IAAIF,GAAeG,MAAM7f,IAC/BC,QAAQC,KAAK,YAAaF,IAE9B,CAGA,MAAM8f,EAAW,IAAIC,IAAI/X,EAAarE,MAAM2B,IAAIiV,GAAK,CAACA,EAAE9R,GAAI8R,EAAE7R,iBACxDsX,EAAmB9K,EAAQ5P,IAAI2a,IACnC,MAAMC,EAAS7O,GAAgB4O,EAAM7f,WAC/B+f,EAAgB,CAACF,EAAMG,OAAQH,EAAMI,OAAQJ,EAAMK,OAAQL,EAAMM,QAAQvc,OAAOwL,GAAKA,GAC3F,MAAO,IACFyQ,EACHxT,SAAUqT,EAASlM,IAAIqM,EAAMO,SAAW,GACxCtU,WAAY+T,EAAM/T,YAAc,KAChCuU,QAASR,EAAMQ,SAAW,GAC1B9T,eAAgBuT,EAChB/S,eAAgBgT,KAyBpB,GApBIhB,EACFlG,EAAgBtV,MAAQqc,EAGxB/G,EAAgBtV,MAAMga,QAAQqC,GAIhCU,KAEAC,KAGA7Q,EAAWnM,MAAQ2L,EACnB4J,EAAWvV,MAAQ2b,EACO,kBAAfC,GAA4Bpc,OAAOvC,MAAM2e,KAClD1P,EAAYlM,MAAQ4b,GAIlBC,GAAgBC,EAAc,CAEhC,MAAMra,EAAM,IAAIzE,KAAK6e,GACfha,EAAM,IAAI7E,KAAK8e,GACrB,IAAKtc,OAAOvC,MAAMwE,EAAIvE,aAAesC,OAAOvC,MAAM4E,EAAI3E,WAAY,CAChEsY,EAAYxV,MAAQyB,EACpBgU,EAAYzV,MAAQ6B,EAEpB,MAAMob,GAAYvW,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,QAC9Cid,EAAUC,GAAUF,EAAW,CAAC,KAAM,MAAQvW,EAAU1G,MACzDod,EAAeF,EAAW,IAAIlgB,KAAKkgB,GAAY,KAC/CG,EAAaF,EAAS,IAAIngB,KAAKmgB,GAAU,KACzCG,GAAcF,IAAiBC,GAAcD,EAAe3b,GAAO4b,EAAaxb,GAClFob,GAAYK,KACd5W,EAAU1G,MAAQ,CAChB0N,GAAgBjM,GAChBiM,GAAgB7L,IAGtB,CACF,CAIF,CAAE,MAAOxF,GACP,MAAUA,MAAM,YAAcA,EAAMgW,UAAUnP,MAAMwP,SAAWrW,EAAMqW,SACvE,CAAE,QACA1N,EAAQhF,OAAQ,EAEZsV,EAAgBtV,MAAMC,OAAS,SAC3B8X,IAEV,GAIIwF,IAAc,UAAI,GAClBpW,GAAqB,KAAQoW,GAAYvd,OAAQ,GACjDoH,GAAmB,KACvBmW,GAAYvd,OAAQ,EAEpBwd,MAIF,IAAIC,GAAc,KACdC,GAAwB,KAE5B,MAAMF,GAAkB,KACtB,GAAID,GAAYvd,MAAO,OAGnB0d,IACFA,GAAsBC,QAIpBF,IACFG,aAAaH,IAIfC,GAAwB,IAAIG,gBAG5B,MAAMC,EAAQC,KAEdN,GAAcO,WAAWhiB,UAClBuhB,GAAYvd,QACfkM,EAAYlM,MAAQ,QACdub,GAAoB,GAAG,EAAMmC,GAAsBjC,cAEnD7D,OAEPkG,IAICC,GAAuB,KAC3B,IAAIE,EAAY,IAgBhB,OAbIvI,EAAa1V,OAASwH,GAAmBxH,MAAQ,IACnDie,GAAwC,IAA3BzW,GAAmBxH,OAG9B0G,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,SACrCge,GAAa,KAGXlX,EAAc/G,OAAS+G,EAAc/G,MAAMC,OAAS,KACtDge,GAAa,KAIRvc,KAAKD,IAAIwc,EAAW,MAIvB/W,GAAe,KACnBsW,MAGIU,GAAcliB,UAEd0hB,IACFA,GAAsBC,QAGxBzR,EAAYlM,MAAQ,QACdub,GAAoB,GAAG,SAEvB3D,MAIF9Q,GAAwB9K,UAE5B,GAAIyc,GAAezY,OAAS0G,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,OAAc,CAC3E,MAAOwB,EAAKI,GAAO4W,GAAezY,MAClC,IAAKrB,EAAOC,GAAO8H,EAAU1G,MAC7B,MAAMme,EAAI,IAAInhB,KAAK2B,GACb6b,EAAI,IAAIxd,KAAK4B,GACnB,IAAIwf,GAAU,EACVD,EAAI1c,IAAO9C,EAAQ8C,EAAK2c,GAAU,GAClC5D,EAAI3Y,IAAOjD,EAAMiD,EAAKuc,GAAU,GAChCA,IAAS1X,EAAU1G,MAAQ,CAAC0N,GAAgB/O,GAAQ+O,GAAgB9O,IAC1E,CAGI8e,IACFA,GAAsBC,QAGxBzR,EAAYlM,MAAQ,QACdub,GAAoB,GAAG,SAGvB3D,MAIFjQ,GAAe3L,UAEf0hB,IACFA,GAAsBC,QAGxB5W,EAAc/G,MAAQ,GACtB0G,EAAU1G,MAAQ,KAClByH,GAAYzH,MAAQ,CAAE0H,MAAO,MAAO8G,WAAY,IAChDkH,EAAa1V,OAAQ,EACrBkM,EAAYlM,MAAQ,QAEdub,GAAoB,GAAG,SAEvBnE,MAIF7I,GAAyB,KAC7B9G,GAAYzH,MAAQ,CAAE0H,MAAO,MAAO8G,WAAY,IAEhDgP,MAIIa,GAAczc,GAAM,IAAI5E,KAAK4E,EAAEpE,cAAeoE,EAAEjE,WAAYiE,EAAE9D,WAC9DwgB,GAAY1c,GAAM,IAAI5E,KAAK4E,EAAEpE,cAAeoE,EAAEjE,WAAYiE,EAAE9D,UAAW,GAAI,GAAI,GAAI,KACnF+I,GAA0BhK,IAC9B,IAAK4b,GAAezY,QAAUnD,EAAM,OAAO,EAC3C,MAAO4E,EAAKI,GAAO4W,GAAezY,MAClC,OAAOnD,EAAOwhB,GAAW,IAAIrhB,KAAKyE,KAAS5E,EAAOyhB,GAAS,IAAIthB,KAAK6E,KAIhE+E,IAAqB,QAAS,IAC7B6R,GAAezY,MACb,CAACyY,GAAezY,MAAM,GAAIyY,GAAezY,MAAM,IADpB,MAK9BkF,GAAclJ,UAClB,IACE,MAAMuiB,EAAQnJ,EAAMoJ,MAAMC,MAAMF,MAChC,IAAKA,EAEH,YADA,MAAUliB,MAAM,aAGlB,MAAMsa,EAAStS,EAAarE,MAAM2B,IAAIiV,GAAKA,EAAE9R,IAAIiQ,KAAK,KAChD8B,EAAS,IAAI6H,gBAEnB,GADI/H,GAAQE,EAAO1G,IAAI,UAAWwG,GAC9BjB,EAAa1V,OAASwH,GAAmBxH,MAAQ,EAAG,CACtD,MAAM+W,EAAiBC,KACnBD,GAAgBF,EAAO1G,IAAI,UAAWe,KAAKC,UAAU4F,GAC3D,CACIrQ,EAAU1G,OAAoC,IAA3B0G,EAAU1G,MAAMC,SACrC4W,EAAO1G,IAAI,aAAczJ,EAAU1G,MAAM,IACzC6W,EAAO1G,IAAI,WAAYzJ,EAAU1G,MAAM,KAErC+G,EAAc/G,OAAO6W,EAAO1G,IAAI,SAAUpJ,EAAc/G,OAE5D6W,EAAO1G,IAAI,QAASoO,GACpB,MAAMI,EAAO,2BACPC,EAAM,GAAGD,KAAQ9H,EAAO1U,aAE9BuB,OAAOmb,KAAKD,EAAK,SACnB,CAAE,MAAOviB,GACP,MAAUA,MAAM,aAAeA,GAAOgW,UAAUnP,MAAMwP,SAAWrW,GAAOqW,SAAW,QACrF,GAIItG,GAAoBhI,IACxBsH,EAAS1L,MAAQoE,EACjB8H,EAAYlM,MAAQ,EACpBub,GAAoB,GAAG,IAGnBlP,GAAsBrQ,MAAO4P,IACjCM,EAAYlM,MAAQ4L,QAEd2P,GAAoB3P,GAAM,IAI5BkT,GAAiB9iB,UAChB+iB,cAAc/e,OAEfkM,EAAYlM,MAAQuV,EAAWvV,QAAUgF,EAAQhF,QACnDkM,EAAYlM,cACNub,GAAoBrP,EAAYlM,OAAO,KAK3CkI,GAAgB,OAMhBwF,GAAmBjR,IACvB,IAAKA,EAAW,MAAO,IACvB,MAAMI,EAAO,IAAIG,KAAKP,GACtB,GAAkC,OAA9BX,GAAoBkE,MAAgB,CAEtC,MAAM7C,GAAeN,EAAKO,oBACpBC,EAAoD,IAA3CvB,GAAoBkE,MAAQ7C,GAAoB,IAC/DN,EAAKS,QAAQT,EAAKK,UAAYG,EAChC,CACA,MAAME,EAAOV,EAAKW,cACZC,EAAQC,OAAOb,EAAKc,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOb,EAAKiB,WAAWF,SAAS,EAAG,KACzCG,EAAQL,OAAOb,EAAKmB,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOb,EAAKqB,cAAcN,SAAS,EAAG,KAChDO,EAAUT,OAAOb,EAAKuB,cAAcR,SAAS,EAAG,KACtD,MAAO,GAAGL,KAAQE,KAASI,KAAOE,KAASE,KAAWE,KAIlDrC,IAAsB,SAAI,MAC1BC,GAAqBC,UACzB,IACE,MAAMC,QAAaC,MAAM,iBACnBC,QAAaF,EAAKE,OACU,kBAAvBA,EAAKC,gBAA4BN,GAAoBkE,MAAQ7D,EAAKC,cAC/E,CAAE,MAAO+a,GACPrb,GAAoBkE,MAAQ,IAC9B,GAIIgf,GAAyB9b,IAC7B,IAAKA,GAAQA,EAAKjD,OAAS,EAAG,OAAOyN,GAErC,MAAMuR,EAAY,IAAIjiB,KAAKkG,EAAK,GAAG,IAC7Bgc,EAAU,IAAIliB,KAAKkG,EAAKA,EAAKjD,OAAS,GAAG,IACzCkf,EAAWD,EAAQhiB,UAAY+hB,EAAU/hB,UAG/C,OAAIiiB,EAAW,IACL1iB,IACN,MAAMI,EAAO,IAAIG,KAAKP,GAChBsB,EAAQL,OAAOb,EAAKmB,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOb,EAAKqB,cAAcN,SAAS,EAAG,KAChDO,EAAUT,OAAOb,EAAKuB,cAAcR,SAAS,EAAG,KACtD,MAAO,GAAGG,KAASE,KAAWE,KAIzBghB,EAAW,MACV1iB,IACN,MAAMI,EAAO,IAAIG,KAAKP,GAChBgB,EAAQC,OAAOb,EAAKc,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOb,EAAKiB,WAAWF,SAAS,EAAG,KAC/C,MAAO,GAAGH,KAASI,KAIdshB,EAAW,KACV1iB,IACN,MAAMI,EAAO,IAAIG,KAAKP,GAChBgB,EAAQC,OAAOb,EAAKc,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOb,EAAKiB,WAAWF,SAAS,EAAG,KACzCG,EAAQL,OAAOb,EAAKmB,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOb,EAAKqB,cAAcN,SAAS,EAAG,KACtD,MAAO,GAAGH,KAASI,KAAOE,KAASE,KAK9ByP,IAKL0R,GAAkBC,IACtB,IAAKA,GAAmB,IAAVA,EAAa,MAAO,MAClC,MAAMC,EAAI,KACJC,EAAQ,CAAC,IAAK,KAAM,KAAM,MAC1BC,EAAI9d,KAAK+d,MAAM/d,KAAKkD,IAAIya,GAAS3d,KAAKkD,IAAI0a,IAChD,OAAOI,YAAYL,EAAQ3d,KAAKie,IAAIL,EAAGE,IAAIpd,QAAQ,IAAM,IAAMmd,EAAMC,IAMjEra,GAAwBnJ,UAE5B,GAAKoZ,EAAMwK,QAAQ,wBAAwB,mBAK3C,GAAqC,IAAjCtK,EAAgBtV,MAAMC,OAK1B,IACEmF,GAAuBpF,OAAQ,EAC/B6f,GAAoB7f,OAAQ,EAC9B,MAAM2W,EAAStS,EAAarE,MAAM2B,IAAIiD,GAAOA,EAAIE,IACzC7I,QAAaqW,GAAA,EAAIC,kBAAkBuN,gBAAgBnJ,GAAQ,GAEjE,GAAI1a,EAAKiH,MAAM6c,OAAQ,CACrB,MAAMA,EAAS9jB,EAAKiH,KAAK6c,OACzB,IAAIC,EAAW,EACf,MAAMC,EAAc,GACpB,MAAOD,EAAWC,EAAa,CAC7B,IACE,MAAMC,QAAe5N,GAAA,EAAIC,kBAAkB4N,sBAAsBJ,GAC3D1hB,EAAS6hB,EAAOhd,MAAMA,MAAM7E,OAClC,GAAIgB,MAAMkB,QAAQlC,GAAS,CACzBkH,GAAavF,MAAQ3B,EACrB,KACF,CACF,CAAE,MAAO8Y,GAET,OACM,IAAI6E,QAAQoE,GAAKpC,WAAWoC,EAAG,MACrCJ,GACF,CACK3gB,MAAMkB,QAAQgF,GAAavF,QAAwC,IAA9BuF,GAAavF,MAAMC,QAC3D,MAAUogB,QAAQ,mBAEtB,MAEE9a,GAAavF,MAAQ/D,EAAKiH,MAAMA,MAAQ,EAE5C,CAAE,MAAOsX,GACP,MAAUne,MAAM,SAClB,CAAE,QACAwjB,GAAoB7f,OAAQ,CAC9B,MAvCE,MAAUqgB,QAAQ,mBALlB,MAAUA,QAAQ,kBAgDhBC,GAAgBtkB,UACpB,IACE,MAAMukB,QAAYjO,GAAA,EAAI+E,KAAKmJ,qBAC3B9R,GAAU1O,MAAQugB,EAAIrd,KAAKwL,WAAa,EAC1C,CAAE,MAAO,GAILtJ,IAAyB,UAAI,GAC7Bya,IAAsB,UAAI,GAC1Bta,IAAe,SAAI,IACnBa,IAAe,SAAI,CAAC,GACpBE,IAA2B,UAAI,GAC/BE,IAAkB,SAAI,IACtBiJ,IAAoB,UAAI,GACxBC,IAAc,SAAI,CAAC,GAGnB+Q,IAAsB,QAAS,IAAMrL,EAAMwK,QAAQ,wBAAwB,mBAE3E1Z,GAAwBR,KAE5B,SAAqBA,IAGjBS,GAAsBT,IAG1B,MAAMxC,EAAOwC,GAAKgb,wBAA0Bhb,EAC5Cc,GAAgBxG,MAAQkR,KAAKC,UAAUjO,EAAM,KAAM,GACnDoD,GAAyBtG,OAAQ,GAG7BqG,GAAmBrK,MAAO0J,IAC9B,GAAK0P,EAAMwK,QAAQ,wBAAwB,kBAC3C,IACExZ,GAAapG,MAAM0F,EAAIZ,KAAM,EAG7B,MAAMuN,QAAiBC,GAAA,EAAIC,kBAAkBoO,wBAAwBjb,GAEjE2M,EAASnP,KAAKuP,QAChB,MAAUA,QAAQ,2BACTJ,EAASnP,KAAK0d,mBAEvBnR,GAAkBzP,OAAQ,EAC1B0P,GAAY1P,MAAQ,CAClB2P,UAAW0C,EAASnP,KAAK2d,WACzBjR,aAAcyC,EAASnP,KAAK0M,aAC5BC,QAASwC,EAASnP,KAAK2M,QACvBC,YAAauC,EAASnP,KAAK4M,YAC3BC,YAAarK,IAGf,MAAU2a,QAAQhO,EAASnP,KAAKwP,SAAW,kBAE/C,CAAE,MAAO8H,GACPle,QAAQD,MAAM,mBAAoBme,GAClC,MAAUne,MAAM,wBAA0Bme,EAAEnI,UAAUnP,MAAMwP,SAAW8H,EAAE9H,SAC3E,CAAE,QACAtM,GAAapG,MAAM0F,EAAIZ,KAAM,CAC/B,GAGIgc,GAAuB7hB,IAC3B,MAAM4P,EAAMH,GAAU1O,MAAM+gB,KAAKC,GAAKA,EAAE/hB,OAASA,GAC5C4P,IAELpH,GAAYzH,MAAQ,CAClB0H,MAAOmH,EAAIoI,SAASvP,OAAS,MAC7B8G,WAAYnP,MAAMkB,QAAQsO,EAAIoI,SAASzI,YAAc,IAAIK,EAAIoI,QAAQzI,YAAc,MAKjFgB,GAAwBxT,MAAOilB,IACnC,IACE,MAAM3X,QAAa2X,EAAK3X,OAClBnN,EAAO+U,KAAKU,MAAMtI,GAExB,IAAI5B,EAAQ,MACR8G,EAAa,GACjB,GAAIrS,IAASkD,MAAMkB,QAAQpE,EAAKqS,aAAenP,MAAMkB,QAAQpE,EAAK8a,SAASzI,aACzE9G,EAAQvL,EAAKuL,OAASvL,EAAK8a,SAASvP,OAAS,MAC7C8G,EAAanP,MAAMkB,QAAQpE,EAAKqS,YAAcrS,EAAKqS,WAAcrS,EAAK8a,SAASzI,YAAc,QACxF,GAAInP,MAAMkB,QAAQpE,EAAKuS,YAAcvS,EAAKuS,UAAUzO,OAAS,EAAG,CACrE,MAAMihB,EAAQ/kB,EAAKuS,UAAU,GAC7BhH,EAAQwZ,GAAOjK,SAASvP,OAAS,MACjC8G,EAAanP,MAAMkB,QAAQ2gB,GAAOjK,SAASzI,YAAc0S,EAAMjK,QAAQzI,WAAa,EACtF,CACIA,EAAWvO,OAAS,GACtBwH,GAAYzH,MAAQ,CAAE0H,QAAO8G,WAAY,IAAIA,IAC7C,MAAUiE,QAAQ,gBAElB,MAAU4N,QAAQ,eAEtB,CAAE,MAAO7F,GACP,MAAUne,MAAM,QAAUme,EAAE9H,QAC9B,CACA,OAAO,GAIH3D,GAAyB,CAAC9P,EAAM6P,KACpCF,GAAqB5O,MAAQ8O,EAAU7P,EAAO,IAG1CkiB,GAAgB,IAAI3Q,IAAI,CAAC,SAAU,SAAU,SAAU,WACvD4Q,GAAiB,CAAC5M,EAAOG,EAAU3U,KACvC,MAAM4U,EAAKlX,OAAOiX,GAAY,IAAIlD,cAC5B4P,EAAYF,GAActQ,IAAI2D,GAGpC,QAAc7T,IAAVX,GAAiC,OAAVA,GAA4B,KAAVA,EAC3C,OAAO,KAGT,GAAW,YAAP4U,GAA2B,eAAPA,EAAqB,CAC3C,MAAMC,EAAMxV,MAAMkB,QAAQP,GAASA,EAAQtC,OAAOsC,GAAO4V,MAAM,KAC/D,GAAIf,EAAI5U,OAAS,EAAG,OAAO,KAE3B,MAAMqhB,GAAKzM,EAAI,IAAM,IAAI1S,WAAW4O,OAC9BwQ,GAAK1M,EAAI,IAAM,IAAI1S,WAAW4O,OAEpC,GAAIsQ,EAAW,CACb,MAAMG,EAAOhiB,OAAO8hB,GACdG,EAAOjiB,OAAO+hB,GACpB,OAAI/hB,OAAOvC,MAAMukB,IAAShiB,OAAOvC,MAAMwkB,GAAc,KAC9C,CAACD,EAAMC,EAChB,CACA,MAAO,CAACH,EAAGC,EACb,CAEA,GAAW,OAAP3M,GAAsB,UAAPA,EAAgB,CACjC,MAAMC,EAAMxV,MAAMkB,QAAQP,GAASA,EAAQ,CAACA,GACtC0hB,EAAU7M,EAAIlT,IAAIwc,GAAKA,EAAEhc,WAAW4O,QAAQ1Q,OAAO8d,GAAW,KAANA,GAC9D,OAAIkD,EACKK,EAAQ/f,IAAI8S,GAAKjV,OAAOiV,IAAIpU,OAAOoU,IAAMjV,OAAOvC,MAAMwX,IAExDiN,CACT,CAEA,GAAIL,EAAW,CACb,MAAMhH,EAAI7a,OAAOQ,GACjB,OAAOR,OAAOvC,MAAMod,GAAKra,EAAQqa,CACnC,CAEA,OAAOra,GAIH2hB,GAAgB,CAACrF,EAAO9H,IACd,cAAVA,EAA8B,IAAIxX,KAAKsf,EAAM7f,WAC1C6f,EAAM9H,GAGToN,GAAYhI,IAChB,MAAMS,EAAI7a,OAAOoa,GACjB,OAAOpa,OAAOvC,MAAMod,GAAK,KAAOA,GAG5BwH,GAAgB,CAACrN,EAAOG,EAAU3U,EAAOsc,KAC7C,MAAM1H,EAAKlX,OAAOiX,GAAY,IAAIlD,cAC5BqQ,EAAMH,GAAcrF,EAAO9H,GACjC,QAAY7T,IAARmhB,GAA6B,OAARA,EAAc,OAAO,EAE9C,MAAMT,EAAYF,GAActQ,IAAI2D,GAC9BuN,EAAwB,cAAVvN,EAEpB,GAAW,YAAPI,GAA2B,eAAPA,EAAqB,CAC3C,MAAMC,EAAMxV,MAAMkB,QAAQP,GAASA,EAAQtC,OAAOsC,GAAS,IAAI4V,MAAM,KACrE,GAAIf,EAAI5U,OAAS,EAAG,OAAO,EAC3B,GAAIohB,EAAW,CACb,MAAMC,EAAIM,GAAS/M,EAAI,IAAW0M,EAAIK,GAAS/M,EAAI,IACnD,GAAU,OAANyM,GAAoB,OAANC,EAAY,OAAO,EACrC,MAAMlH,EAAIuH,GAASE,GACnB,GAAU,OAANzH,EAAY,OAAO,EACvB,MAAM2H,EAAK3H,GAAK3Y,KAAKD,IAAI6f,EAAEC,IAAMlH,GAAK3Y,KAAKG,IAAIyf,EAAEC,GACjD,MAAc,YAAP3M,EAAmBoN,GAAMA,CAClC,CACA,GAAID,EAAa,CACf,MAAMT,EAAI,IAAItkB,KAAK6X,EAAI,IAAW0M,EAAI,IAAIvkB,KAAK6X,EAAI,IAC7CmM,EAAI,IAAIhkB,KAAK8kB,GACbE,EAAKhB,IAAMM,EAAIC,EAAID,EAAIC,IAAMP,IAAMM,EAAIC,EAAIA,EAAID,GACrD,MAAc,YAAP1M,EAAmBoN,GAAMA,CAClC,CACA,MAAM7D,EAAIzgB,OAAOokB,GACXE,EAAK7D,GAAKzgB,OAAOmX,EAAI,KAAOsJ,GAAKzgB,OAAOmX,EAAI,IAClD,MAAc,YAAPD,EAAmBoN,GAAMA,CAClC,CAEA,GAAW,OAAPpN,GAAsB,UAAPA,EAAgB,CACjC,MAAMC,EAAMxV,MAAMkB,QAAQP,GAASA,EAAQtC,OAAOsC,GAAS,IAAI4V,MAAM,KAAKjU,IAAI8S,GAAKA,EAAE1D,QAAQ1Q,OAAOV,SACpG,GAAI0hB,EAAW,CACb,MAAMlR,EAAM,IAAIK,IAAIqE,EAAIlT,IAAIigB,IAAUvhB,OAAOoU,GAAW,OAANA,IAC5C4F,EAAIuH,GAASE,GACbE,EAAW,OAAN3H,GAAclK,EAAIU,IAAIwJ,GACjC,MAAc,OAAPzF,EAAcoN,GAAMA,CAC7B,CACA,MAAM7R,EAAM,IAAIK,IAAIqE,EAAIlT,IAAI8S,GAAKA,EAAEtS,aAC7B6f,EAAK7R,EAAIU,IAAInT,OAAOokB,IAC1B,MAAc,OAAPlN,EAAcoN,GAAMA,CAC7B,CAEA,GAAW,UAAPpN,EACF,IACE,MAAMqN,EAAK,IAAIC,OAAOxkB,OAAOsC,IAC7B,OAAOiiB,EAAGrlB,KAAKc,OAAOokB,GACxB,CAAE,MAAQ,OAAO,CAAM,CAGzB,GAAW,aAAPlN,GAA4B,SAAPA,EACvB,OAAOlX,OAAOokB,GAAKrQ,cAAcb,SAASlT,OAAOsC,GAAS,IAAIyR,eAEhE,GAAW,gBAAPmD,EACF,OAAQlX,OAAOokB,GAAKrQ,cAAcb,SAASlT,OAAOsC,GAAS,IAAIyR,eAEjE,GAAW,eAAPmD,EACF,OAAOlX,OAAOokB,GAAKK,WAAWzkB,OAAOsC,GAAS,KAEhD,GAAW,aAAP4U,EACF,OAAOlX,OAAOokB,GAAKM,SAAS1kB,OAAOsC,GAAS,KAG9C,GAAIqhB,EAAW,CACb,MAAMhH,EAAIuH,GAASE,GAAYrN,EAAImN,GAAS5hB,GAC5C,GAAU,OAANqa,GAAoB,OAAN5F,EAAY,OAAO,EACrC,OAAQG,GACN,IAAK,IAAK,OAAOyF,IAAM5F,EACvB,IAAK,KAAM,IAAK,KAAM,OAAO4F,IAAM5F,EACnC,IAAK,IAAK,OAAO4F,EAAI5F,EACrB,IAAK,KAAM,OAAO4F,GAAK5F,EACvB,IAAK,IAAK,OAAO4F,EAAI5F,EACrB,IAAK,KAAM,OAAO4F,GAAK5F,EACvB,QAAS,OAAO,EAEpB,CACA,GAAIsN,EAAa,CACf,MAAMf,EAAI,IAAIhkB,KAAK8kB,GAAK5kB,UAAiBuX,EAAI,IAAIzX,KAAKgD,GAAO9C,UAC7D,OAAQ0X,GACN,IAAK,IAAK,OAAOoM,IAAMvM,EACvB,IAAK,KAAM,IAAK,KAAM,OAAOuM,IAAMvM,EACnC,IAAK,IAAK,OAAOuM,EAAIvM,EACrB,IAAK,KAAM,OAAOuM,GAAKvM,EACvB,IAAK,IAAK,OAAOuM,EAAIvM,EACrB,IAAK,KAAM,OAAOuM,GAAKvM,EACvB,QAAS,OAAO,EAEpB,CACA,MAAM0J,EAAIzgB,OAAOokB,GAAYrN,EAAI/W,OAAOsC,GAAS,IACjD,OAAQ4U,GACN,IAAK,IAAK,OAAOuJ,IAAM1J,EACvB,IAAK,KAAM,IAAK,KAAM,OAAO0J,IAAM1J,EACnC,IAAK,IAAK,OAAO0J,EAAI1J,EACrB,IAAK,KAAM,OAAO0J,GAAK1J,EACvB,IAAK,IAAK,OAAO0J,EAAI1J,EACrB,IAAK,KAAM,OAAO0J,GAAK1J,EACvB,QAAS,OAAO,IAId4N,GAAe,CAAC/N,EAAMgI,KAC1B,IAAKhI,EAAM,OAAO,EAClB,GAAIA,EAAKE,OAASF,EAAKK,SACrB,OAAOkN,GAAcvN,EAAKE,MAAOF,EAAKK,SAAUL,EAAKtU,MAAOsc,GAE9D,GAAIjd,MAAMkB,QAAQ+T,EAAK9F,YAAa,CAClC,MAAM9G,EAAQ4M,EAAK5M,OAAS,MACtB4a,EAAUhO,EAAK9F,WAAW7M,IAAImY,GAASuI,GAAavI,EAAOwC,IACjE,MAAiB,OAAV5U,EAAiB4a,EAAQC,KAAK5iB,SAAW2iB,EAAQE,MAAM7iB,QAChE,CACA,OAAO,GAGH8a,GAAoB6B,GAAU+F,GAAa5a,GAAYzH,MAAOsc,GAE9DmG,IAAiB,SAAI,MAErBC,GAAsB1mB,UAC1B,GAAK0d,GAAqB1Z,MAC1B,IACE,MAAMqR,EAAMH,KAAKU,MAAM8H,GAAqB1Z,OAC5C,GAAIqR,IAAQhS,MAAMkB,QAAQ8Q,EAAI7C,aAAenP,MAAMkB,QAAQ8Q,EAAI4F,SAASzI,aAAc,CACpF,MAAM9G,EAAQ2J,EAAI3J,OAAS2J,EAAI4F,SAASvP,OAAS,MAC3Cib,EAAQtjB,MAAMkB,QAAQ8Q,EAAI7C,YAAc6C,EAAI7C,WAAa6C,EAAI4F,SAASzI,WAC5E/G,GAAYzH,MAAQ,CAAE0H,QAAO8G,WAAYnP,MAAMkB,QAAQoiB,GAAS,IAAIA,GAAS,IAE7E,MAAUlQ,QAAQ,sBAClBlL,GAAmBvH,OAAQ,QACrB,UACFyiB,GAAeziB,OAASyiB,GAAeziB,MAAM4iB,gBAC/CH,GAAeziB,MAAM4iB,eAAe,CAAEC,SAAU,SAAUC,MAAO,WAErE,MACE,MAAUzmB,MAAM,0BAEpB,CAAE,MAAOme,GACP,MAAUne,MAAM,QAAUme,EAAE9H,QAC9B,GAGIqQ,GAAuB/mB,UAC3B,GAAK0d,GAAqB1Z,MAE1B,IACE,MAAMqR,EAAMH,KAAKU,MAAM8H,GAAqB1Z,OAC5C,GAAIqR,IAAQhS,MAAMkB,QAAQ8Q,EAAI7C,aAAenP,MAAMkB,QAAQ8Q,EAAI4F,SAASzI,aAAc,CACpF,MAAM9G,EAAQ2J,EAAI3J,OAAS2J,EAAI4F,SAASvP,OAAS,MAC3Cib,EAAQtjB,MAAMkB,QAAQ8Q,EAAI7C,YAAc6C,EAAI7C,WAAa6C,EAAI4F,SAASzI,WAG5E,OAFA/G,GAAYzH,MAAQ,CAAE0H,QAAO8G,WAAYnP,MAAMkB,QAAQoiB,GAAS,IAAIA,GAAS,SAC7E,MAAUlQ,QAAQ,qBAEpB,CACA,MAAU4N,QAAQ,eACpB,CAAE,MAAOlJ,GACP,MAAU9a,MAAM,oBAClB,GAMI2mB,GAAqBhnB,UACzByd,GAAUzZ,OAAQ,EAClB,IAEE,MAAM2W,EAAStS,EAAarE,MAAM2B,IAAIiD,GAAOA,EAAIE,IAC3CuN,QAAiBC,GAAA,EAAIC,kBAAkBuN,gBAAgBnJ,GAAQ,GAEjEtE,EAASnP,KAAKuP,QAChB,MAAUA,QAAQJ,EAASnP,KAAKwP,SAAW,SAASL,EAASnP,KAAKA,MAAMjD,QAAU,SAElF,MAAU5D,MAAMgW,EAASnP,KAAKwP,SAAW,aAE7C,CAAE,MAAOrW,GACP,MAAUA,MAAM,gBAAkBA,EAAMgW,UAAUnP,MAAMwP,SAAWrW,EAAMqW,SAC3E,CAAE,QACA+G,GAAUzZ,OAAQ,CACpB,GAIIgX,GAAsB,KAC1B,MAAMiM,EAAiB3O,IACrB,IAAKA,EAAM,OAAO,KAClB,GAAIA,EAAKE,OAASF,EAAKK,SAAU,CAC/B,QAAmBhU,IAAf2T,EAAKtU,OAAsC,OAAfsU,EAAKtU,OAAiC,KAAfsU,EAAKtU,MAAc,OAAO,KAEjF,MAAMkjB,EAAkB9B,GAAe9M,EAAKE,MAAOF,EAAKK,SAAUL,EAAKtU,OACvE,OAAwB,OAApBkjB,EAAiC,KAE9B,CACL1O,MAAOF,EAAKE,MACZG,SAAUL,EAAKK,SACf3U,MAAOkjB,EAEX,CACA,GAAI7jB,MAAMkB,QAAQ+T,EAAK9F,YAAa,CAClC,MAAM2G,EAAWb,EAAK9F,WAAW7M,IAAIshB,GAAe5iB,OAAOV,SAC3D,OAAwB,IAApBwV,EAASlV,OAAqB,KAC3B,CAAEyH,MAAO4M,EAAK5M,OAAS,MAAO8G,WAAY2G,EACnD,CACA,OAAO,MAEHgO,EAAaF,EAAcxb,GAAYzH,OAC7C,OAAOmjB,GAIHC,GAAyB,CAC7B3mB,UAAW,CACT,CAAEgJ,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,UAAWzF,MAAO,YAE7BkJ,WAAY,CACV,CAAEzD,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,WAAYzF,MAAO,YAC5B,CAAEyF,MAAO,MAAOzF,MAAO,eACvB,CAAEyF,MAAO,KAAMzF,MAAO,SACtB,CAAEyF,MAAO,KAAMzF,MAAO,cACtB,CAAEyF,MAAO,KAAMzF,MAAO,aAExByc,OAAQ,CACN,CAAEhX,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,UAAWzF,MAAO,WAC3B,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,WAAYzF,MAAO,YAC5B,CAAEyF,MAAO,MAAOzF,MAAO,gBAEzB0c,OAAQ,CACN,CAAEjX,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,UAAWzF,MAAO,WAC3B,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,WAAYzF,MAAO,YAC5B,CAAEyF,MAAO,MAAOzF,MAAO,gBAEzB2c,OAAQ,CACN,CAAElX,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,UAAWzF,MAAO,WAC3B,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,WAAYzF,MAAO,YAC5B,CAAEyF,MAAO,MAAOzF,MAAO,gBAEzB4c,OAAQ,CACN,CAAEnX,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,UAAWzF,MAAO,WAC3B,CAAEyF,MAAO,KAAMzF,MAAO,MACtB,CAAEyF,MAAO,WAAYzF,MAAO,YAC5B,CAAEyF,MAAO,MAAOzF,MAAO,gBAEzBuJ,YAAa,CACX,CAAE9D,MAAO,WAAYzF,MAAO,YAC5B,CAAEyF,MAAO,MAAOzF,MAAO,eACvB,CAAEyF,MAAO,KAAMzF,MAAO,SACtB,CAAEyF,MAAO,KAAMzF,MAAO,cACtB,CAAEyF,MAAO,KAAMzF,MAAO,cAIpBqjB,GAAyB,CAC7B,CAAE5d,MAAO,IAAKzF,MAAO,KACrB,CAAEyF,MAAO,KAAMzF,MAAO,OAGlBmP,GAAsBqF,GACrBA,GACE4O,GAAuB5O,IADX6O,GAIfjU,GAAiBkU,IACrB,IAAKA,EAAM,OACX,MAAMC,EAAUpU,GAAmBmU,EAAK9O,OAEnC+O,EAAQhB,KAAKiB,GAAKA,EAAExjB,QAAUsjB,EAAK3O,YACtC2O,EAAK3O,SAAW4O,EAAQ,IAAIvjB,OAGc,YAAxCtC,OAAO4lB,EAAK3O,UAAUlD,cACxB6R,EAAKtjB,MAAQX,MAAMkB,QAAQ+iB,EAAKtjB,OAASsjB,EAAKtjB,MAAM8U,MAAM,EAAG,GAAK,CAAC,GAAI,IAEvEwO,EAAKtjB,MAAQX,MAAMkB,QAAQ+iB,EAAKtjB,OAASsjB,EAAKtjB,MAAM+U,KAAK,KAAQuO,EAAKtjB,OAAS,IAI7EgP,GAAuBE,IACtBA,EAAMV,aAAYU,EAAMV,WAAa,IAC1CU,EAAMV,WAAWwL,KAAK,CAAExF,MAAO,aAAcG,SAAU,WAAY3U,MAAO,MAEtEiP,GAAmBC,IAClBA,EAAMV,aAAYU,EAAMV,WAAa,IAC1CU,EAAMV,WAAWwL,KAAK,CAAEtS,MAAO,MAAO8G,WAAY,MAE9Cc,GAAe,CAACJ,EAAOnF,KACvB1K,MAAMkB,QAAQ2O,EAAMV,aAAezE,GAAO,GAAKA,EAAMmF,EAAMV,WAAWvO,QACxEiP,EAAMV,WAAWiV,OAAO1Z,EAAK,IAG3BsE,GAAuBrS,UAE3BuL,GAAmBvH,OAAQ,EAC3B0V,EAAa1V,OAAQ,EACrBkM,EAAYlM,MAAQ,QACdub,GAAoB,GAAG,SAGvB3D,MAIF8L,GAA0B,KAC9B,MAAMC,EAAa,CAAC,EACpBrO,EAAgBtV,MAAM4jB,QAAQtH,IACxBA,EAAM/T,aACRob,EAAWrH,EAAMxX,IAAMwX,EAAM/T,cAGjCgP,eAAeC,QAAQ,qBAAsBtG,KAAKC,UAAUwS,KAIxD5G,GAA4B,KAChC,IACE,MAAM8G,EAAStM,eAAeqB,QAAQ,sBACtC,GAAIiL,EAAQ,CACV,MAAMF,EAAazS,KAAKU,MAAMiS,GAC9BvO,EAAgBtV,MAAM4jB,QAAQtH,IACxBqH,EAAWrH,EAAMxX,MACnBwX,EAAM/T,WAAaob,EAAWrH,EAAMxX,MAG1C,CACF,CAAE,MAAOzI,GACPC,QAAQD,MAAM,YAAaA,EAC7B,GAIIuM,GAAc,CAAClD,EAAKoe,KAEpBpe,EAAI6C,aAAeub,EACrBpe,EAAI6C,WAAa,KAEjB7C,EAAI6C,WAAaub,EAInBJ,MAEA,QAAS,SAOL1b,GAAkB,EAAGtC,UACzB,GAAIA,EAAI6C,WAAY,CAElB,IAAIwb,EAAY,GAChB,OAAQre,EAAI6C,YACV,IAAK,UAAWwb,EAAY,iBAAkB,MAC9C,IAAK,UAAWA,EAAY,oBAAqB,MACjD,IAAK,UAAWA,EAAY,kBAAmB,MAC/C,IAAK,UAAWA,EAAY,mBAAoB,MAChD,QAASA,EAAY,GAGvB,OADAznB,QAAQsI,IAAI,SAAUmf,EAAW,OAAQre,EAAI6C,WAAY,OAAQ7C,GAC1Dqe,CACT,CACA,MAAO,IAIH9b,GAAc,EAAGvC,UACrB,GAAIA,EAAI6C,WAAY,CAElB,MAAMyb,EAAY,CAACC,EAAKC,EAAQ,MAC9B,MAAM9D,EAAIjF,SAAS8I,EAAInP,MAAM,EAAG,GAAI,IAC9BqP,EAAIhJ,SAAS8I,EAAInP,MAAM,EAAG,GAAI,IAC9ByM,EAAIpG,SAAS8I,EAAInP,MAAM,EAAG,GAAI,IACpC,MAAO,QAAQsL,MAAM+D,MAAM5C,MAAM2C,MAG7B1b,EAAkBwb,EAAUte,EAAI6C,WAAY,IAElD,OADAjM,QAAQsI,IAAI,SAAU4D,EAAiB,OAAQ9C,EAAI6C,YAC5C,CACLC,gBAAiBA,EAErB,CACA,MAAO,CAAC,GAKJ4B,GAAyB1E,IAC7BpJ,QAAQsI,IAAI,SAAUc,GACtBiQ,EAAmB3V,MAAQ0F,EAC3B4G,EAAuBtM,OAAQ,GAG3BqK,GAAoB3E,IAIxB,GAHApJ,QAAQsI,IAAI,QAASc,GAGjBuH,EAAiBjN,MAAMC,QAAUoN,EAEnC,YADA,MAAUgT,QAAQ,eAAehT,SAKnCJ,EAAiBjN,MAAMga,KAAK,CAC1BlV,GAAIY,EAAIZ,GACRrI,UAAWiJ,EAAIjJ,UACfyM,WAAYxD,EAAIwD,WAChBK,YAAa7D,EAAI6D,cAInB,MAAM9M,EAAYiR,GAAgBhI,EAAIjJ,WAChCoZ,EAAO,GAAGpZ,KAAaiJ,EAAIwD,cAAcxD,EAAI6D,cAAcwH,OACjE7D,EAAiBlN,OAASkN,EAAiBlN,MAAQkN,EAAiBlN,MAAQ,KAAO,IAAM6V,EAGzF/I,EAAiB9M,MAAQ,OACzB4M,EAAiB5M,OAAQ,EAEzB,MAAUyS,QAAQ,cAAcxF,EAAiBjN,MAAMC,UAAUoN,OAI7D+W,GAAyB,OAMzB7W,GAAiB,KACrBN,EAAiBjN,MAAQ,GACzBkN,EAAiBlN,MAAQ,GACzB,MAAUyS,QAAQ,aAad7E,GAAuB,KAC3B,IAAKV,EAAiBlN,MAEpB,YADA,MAAUqgB,QAAQ,cAIpB,MAAMgE,EAAO,IAAIC,KAAK,CAACpX,EAAiBlN,OAAQ,CAAEZ,KAAM,6BAClDwf,EAAM2F,IAAIC,gBAAgBH,GAC1B/C,EAAImD,SAASC,cAAc,KACjCpD,EAAEqD,KAAO/F,EACT0C,EAAEsD,SAAW,SAAQ,IAAI5nB,MAAO6nB,cAAc/P,MAAM,EAAG,IAAI/X,QAAQ,KAAM,WACzE0nB,SAASK,KAAKC,YAAYzD,GAC1BA,EAAE0D,QACFP,SAASK,KAAKG,YAAY3D,GAC1BiD,IAAIW,gBAAgBtG,GAEpB,MAAUnM,QAAQ,cAId0S,GAAuB,KAC3B,IACA5N,eAAeC,QAAQ,mBAAoBtK,EAAiBlN,OAC1D,MAAUyS,QAAQ,MACpB,CAAE,MAAOpW,GACPC,QAAQD,MAAM,aAAcA,GAC5B,MAAUA,MAAM,OAClB,GAII+oB,GAAuB,KAC3B,IACE,MAAMC,EAAQ9N,eAAeqB,QAAQ,oBACvB,OAAVyM,IACFnY,EAAiBlN,MAAQqlB,EAE7B,CAAE,MAAOhpB,GACPC,QAAQD,MAAM,aAAcA,EAC9B,GAII4I,GAAgB,KACpB2H,EAAiB5M,OAAQ,GAIrB4J,GAAsB5N,MAAO0J,IAEjC,MAAMmR,EAAS,CAACnR,EAAI+W,OAAQ/W,EAAIgX,OAAQhX,EAAIiX,OAAQjX,EAAIkX,QAExD,GADA1G,EAAkBlW,MAAQ6W,EAAOlV,IAAIkK,MAAQA,IAAKnO,OAAOmO,GAAGkF,UACvDmF,EAAkBlW,MAAMuiB,KAAK9N,GAAKA,GAErC,YADA,MAAU4L,QAAQ,qBAKpBpK,EAAoBjW,MAAQ6W,EAAOlV,IAAIkK,GAAMA,GAAKnO,OAAOmO,GAAGkF,OAAUrT,OAAOmO,GAAGkF,OAAS,IACzF7G,EAAWlK,MAAQ,CAAC,MAAO,MAAO,MAAO,OACzCoW,EAAwBpW,MAAQ0F,EAChCoE,EAAkB9J,MAAQ,KAC1BmW,EAAUnW,SACV,QAAS,KAAQ2J,EAAwB3J,MAAQ0F,EAAIZ,KAErD,MAAMwgB,EAAuB9K,IAE3B,GAAI7Q,EAAwB3J,QAAU0F,EAAIZ,GAExC,YADA2f,SAAS7gB,oBAAoB,QAAS0hB,GAAqB,GAI7D,MAAMC,EAAS/K,EAAE+K,OACXC,EAAMD,GAAUA,EAAOE,SAAWF,EAAOE,QAAQ,sBACjDC,EAAMH,GAAUA,EAAOE,SAAWF,EAAOE,QAAQ,eACnDD,GAAOE,IAEX/b,EAAwB3J,MAAQ,KAChCykB,SAAS7gB,oBAAoB,QAAS0hB,GAAqB,KAG7Db,SAAS9gB,iBAAiB,QAAS2hB,GAAqB,GAGxDtb,EAAkBhK,OAAQ,EAC1B,IACE,MAAM2lB,EAAgBjgB,EAAIwD,YAAY0c,iBAAmB,GACzD,IAAIC,EAAmBF,EACnBG,EAAmB,EACvB,GAA6B,IAAzBH,EAAc1lB,QAAgB,sBAAsBrD,KAAK+oB,GAAgB,CAC3EG,EAAmBH,EAAcI,OAAO,GACxC,MAAMC,EAAgBL,EAAcM,UAAU,GAC9CJ,EAAmB,KAAKG,GAC1B,MAAWL,EAAc1lB,QAAU,GAAK,+BAA+BrD,KAAK+oB,IAC1EG,EAAmBH,EAAcI,OAAO,GACxCF,EAAmBF,EAAcM,UAAU,IAClC,yBAAyBrpB,KAAK+oB,KACvCE,EAAmBF,GAErB,MAAM1pB,QAAaqW,GAAA,EAAI4T,WAAWC,sBAAsBN,EAAkBC,GACpE1M,EAAOnd,GAAMiH,MAAM+U,UACrBmB,IACFlP,EAAWlK,MAAQ,CACjBoZ,EAAKqD,QAAU,MACfrD,EAAKsD,QAAU,MACftD,EAAKuD,QAAU,MACfvD,EAAKwD,QAAU,OAGrB,CAAE,MAAOpC,GACPle,QAAQC,KAAK,uBACf,CAAE,QAEIoN,EAAwB3J,QAAU0F,EAAIZ,KACxCkF,EAAkBhK,OAAQ,EAE9B,GAGIiK,GAAwBF,KAEnBmM,EAAkBlW,MAAM+J,EAAM,GAGnCI,GAAuB,KACtBL,EAAkB9J,OAKvB2J,EAAwB3J,MAAQ,KAChComB,MALE,MAAU/F,QAAQ,YAQhB+F,GAAgBpqB,UACpB,IAAKoa,EAAwBpW,MAAO,OACpC,MAAM0F,EAAM0Q,EAAwBpW,MAElCgO,EAAmBhO,OAAQ,QACrBD,GAAY2F,IAGhB3F,GAAc/D,MAAO0J,IACzB,IACE,MAAU0T,KAAK,eACf,MAAMzC,EAAStS,EAAarE,MAAM2B,IAAIiV,GAAKA,EAAE9R,IAAIiQ,KAAK,KAChDsR,EAAavc,EAAkB9J,MAC/B2lB,EAAgBjgB,EAAIwD,WAAW0c,cACrC,IAAIE,EAAmB,GACM,IAAzBH,EAAc1lB,QAAgB,sBAAsBrD,KAAK+oB,IAElDA,EAAc1lB,QAAU,GAAK,+BAA+BrD,KAAK+oB,MAD1EG,EAAmBH,EAAcI,OAAO,IAI1C,MAAMO,EAAsB,CAAExP,QAASH,EAAQzN,WAAYxD,EAAIwD,WAAYqd,gBAAiBF,EAAYG,UAAWV,GAEnH,GAAIpQ,EAAa1V,OAASwH,GAAmBxH,MAAQ,EAAG,CACtD,MAAM+W,EAAiBC,KACnBD,IACFuP,EAAoBrP,QAAU/F,KAAKC,UAAU4F,GAEjD,CACIrQ,EAAU1G,OAASX,MAAMkB,QAAQmG,EAAU1G,SAC7CsmB,EAAoBvgB,WAAaW,EAAU1G,MAAM,GACjDsmB,EAAoBtgB,SAAWU,EAAU1G,MAAM,IAE7C+G,EAAc/G,QAChBsmB,EAAoBpP,OAASnQ,EAAc/G,OAE7C,MAAMqS,QAAiBC,GAAA,EAAI+E,KAAKoP,qBAAqBH,IAC/C,UAAEI,EAAWxY,WAAYyY,EAAa,UAAEC,GAAcvU,EAASnP,KAAKA,KAC1E,IAAK7D,MAAMkB,QAAQmmB,IAAmC,IAArBA,EAAUzmB,OAEzC,YADA,MAAUogB,QAAQ,eAGpBnS,EAAWlO,MAAQ2mB,EACnB,MAAMvmB,EAAYsmB,EAChBvY,EAAiBnO,MAAQ,CACvB8E,GAAI,SAAS9H,KAAKya,QAClB/W,MAAOimB,EACPlqB,WAAW,IAAIO,MAAO6nB,cACtBgC,UAAW/c,EAAkB9J,MAC7BoO,eAAgBwY,EAChB1jB,KAAM9C,EACN6X,UAAWvS,EAAIwD,YAEjB4d,KACF,MAAUrU,QAAQ,OAAOiU,EAAUzmB,aACnC,CAAE,MAAO5D,GACT,MAAUA,MAAM,cAAgBA,GAAOgW,UAAUnP,MAAMwP,SAAWrW,EAAMqW,SAC1E,GAGIoU,GAAoB,KACxB,IAAK3Y,EAAiBnO,MAAO,OAG7B,GAAI6J,EAAgB7J,MAAMC,QAAU,EAElC,YADA,MAAUogB,QAAQ,iBAKAxW,EAAgB7J,MAAMC,OAA1C,MACM8mB,EAAkB,IAAK5Y,EAAiBnO,MAAOU,MAAOyN,EAAiBnO,MAAMU,OAGnFmJ,EAAgB7J,MAAMga,KAAK+M,GAG3Bja,EAAiB9M,MAAQ,SACzB4M,EAAiB5M,OAAQ,GAGzB,QAAS,MACP,QAAS,KAEPge,WAAW,KACTgJ,GAAqBD,IACpB,SAIP,MAAUtU,QAAQ,cAGduU,GAAwBN,IAC5B,IACE,MAAMO,EAAmBxC,SAASyC,eAAe,eAAeR,EAAU5hB,MAC1E,IAAKmiB,EAEH,YADA3qB,QAAQC,KAAK,yBAAyBmqB,EAAU5hB,MAKlD,GAAqC,IAAjCmiB,EAAiBE,aAAuD,IAAlCF,EAAiBG,aAIzD,OAHA9qB,QAAQC,KAAK,cAAc0qB,EAAiBE,eAAeF,EAAiBG,qBAE5EpJ,WAAW,IAAMgJ,GAAqBN,GAAY,KAKpD,MAAMW,EAAmBlnB,GAAA,GAAyB8mB,GAC9CI,GACFA,EAAiBnnB,UAGnB,MAAMonB,EAAoBnnB,GAAA,GAAa8mB,GAGjCM,EAAO7lB,KAAKD,OAAOilB,EAAUxjB,KAAKvB,IAAIC,GAAKA,EAAE,KAC7C4lB,EAAO9lB,KAAKG,OAAO6kB,EAAUxjB,KAAKvB,IAAIC,GAAKA,EAAE,KAC7C6lB,EAAkB,CACtBC,KAAM,CAAEC,KAAM,EAAGC,MAAO,EAAGC,IAAK,EAAGhlB,OAAQ,EAAGilB,cAAc,GAC5DpnB,WAAOC,EACPC,QAAS,CAAEmnB,MAAM,GACjBxmB,MAAO,CACLnC,KAAM,OACNoC,aAAa,EACbO,UAAW,CAAEgmB,MAAM,GACnBC,SAAU,CAAED,MAAM,GAClBE,SAAU,CAAEF,MAAM,GAClBtmB,IAAK8lB,EACL1lB,IAAK2lB,GAEP1lB,MAAO,CACL1C,KAAM,QACNoC,YAAa,CAAC,EAAG,MACjBO,UAAW,CAAEgmB,MAAM,GACnBC,SAAU,CAAED,MAAM,GAClBE,SAAU,CAAEF,MAAM,GAClBtmB,IAAK,UACLI,IAAK,UACLqmB,OAAO,GAETnlB,OAAQ,CAAC,CACP9D,KAAM,GAAGynB,EAAUtY,iBACnBhP,KAAM,OACN4D,OAAQ,OACRC,UAAU,EACVE,UAAW,CAAEpE,MAAO,IAAK4J,MAAO,WAChCvF,UAAW,CACTuF,MAAO,IAAIxI,GAAA,kBAA+B,EAAG,EAAG,EAAG,EAAG,CACpD,CAAEgoB,OAAQ,EAAGxf,MAAO,yBACpB,CAAEwf,OAAQ,EAAGxf,MAAO,4BAGxBzF,KAAMwjB,EAAUxjB,QAIpBokB,EAAkBhkB,UAAUmkB,GAG5B,MAAMW,EAAgB,KAChBd,IAAsBA,EAAkBe,cAC1Cf,EAAkB9jB,UAItBE,OAAOC,iBAAiB,SAAUykB,GAGlCnB,EAAiBqB,iBAAmBhB,EACpCL,EAAiBsB,eAAiBH,CAEpC,CAAE,MAAO/rB,GACPC,QAAQD,MAAM,WAAYA,EAC5B,GAGIoR,GAAmBiZ,IAEvB,MAAM8B,EAAuBlsB,QAAQD,MAC/BosB,EAAgB/kB,OAAOglB,QAE7BpsB,QAAQD,MAAQ,YAAYssB,GAC1B,MAAMC,EAAeD,EAAK5T,KAAK,KAC3B6T,EAAahY,SAAS,eACtBgY,EAAahY,SAAS,wCACtBgY,EAAahY,SAAS,mBAI1B4X,EAAqBK,MAAMvsB,QAASqsB,EACtC,EAEAjlB,OAAOglB,QAAU,SAASI,EAAKlK,EAAK/I,EAAMkT,EAAK1sB,GAC7C,SAAIysB,GAAOA,EAAIlY,UAAYkY,EAAIlY,SAAS,wCACpCkY,EAAIlY,SAAS,sBAIb6X,GACKA,EAAcK,EAAKlK,EAAK/I,EAAMkT,EAAK1sB,EAG9C,EAGA8R,EAAiBnO,MAAQ0mB,EACzBxY,EAAWlO,MAAQ0mB,EAAUhmB,MAG7BsN,EAAmBhO,OAAQ,GAG3B,QAAS,KACPge,WAAW,KACPle,EAAcE,QAChBF,EAAcE,MAAME,UACpBJ,EAAcE,MAAQ,MAExB,MAAMgpB,EAAevE,SAASyC,eAAe,sBAC3C,IAAK8B,EAAc,OACnB,GAAiC,IAA7BA,EAAa7B,aAAmD,IAA9B6B,EAAa5B,aAGjD,YADApJ,WAAW,IAAMje,GAAY2mB,GAAY,IAM3C,GAHA5mB,EAAcE,MAAQG,GAAA,GAAa6oB,IAG9BtC,EAAUxjB,OAAS7D,MAAMkB,QAAQmmB,EAAUxjB,OAAmC,IAA1BwjB,EAAUxjB,KAAKjD,OAEtE,YADA,MAAU5D,MAAM,UAKlB,MAAM+D,EAAYsmB,EAAUxjB,KAAK7C,OAAOC,GACtCjB,MAAMkB,QAAQD,IACdA,EAAKL,QAAU,GACI,kBAAZK,EAAK,IACO,kBAAZA,EAAK,KACXrD,MAAMqD,EAAK,MACXrD,MAAMqD,EAAK,KACZE,SAASF,EAAK,KACdE,SAASF,EAAK,KAGhB,GAAyB,IAArBF,EAAUH,OAEZ,YADA,MAAU5D,MAAM,aAKS2iB,GAAsB5e,GAAjD,MAGMK,EAAS,CACbC,WAAOC,EACPC,QAAS,CACPC,QAAS,OACTC,SAAU,SAAUC,GAClB,MAAO,CAACA,EAAG,GAAI,MACjB,GAEFC,YAAQL,EACRM,QAAS,CACPC,QAAS,CACPC,SAAU,CACRC,WAAY,QAEdC,QAAS,CAAC,EACVC,YAAa,CAAC,IAGlBC,MAAO,CACLnC,KAAM,OACNoC,aAAa,EACbC,IAAKC,KAAKD,OAAOrB,EAAUuB,IAAIC,GAAKA,EAAE,KACtCC,IAAKH,KAAKG,OAAOzB,EAAUuB,IAAIC,GAAKA,EAAE,MAExCE,MAAO,CACL1C,KAAM,QACNoC,YAAa,CAAC,EAAG,SAEnBL,SAAU,CACR,CACE/B,KAAM,SACNT,MAAO,EACPC,IAAK,IACLyD,UAAU,EACVC,SAAU,IACVC,UAAU,EACVC,WAAY,EACZC,WAAY,SACZC,yBAAyB,GAE3B,CACEtD,KAAM,SACNT,MAAO,EACPC,IAAK,IACLyD,UAAU,EACVC,SAAU,IACVC,UAAU,EACVI,YAAY,EACZC,gBAAgB,EAChBJ,WAAY,EACZK,OAAQ,GACRJ,WAAY,SACZK,eAAgB,EAChBJ,yBAAyB,EACzBumB,eAAgB,CACd9lB,UAAW,CACTwF,MAAO,QAETvF,UAAW,CACTuF,MAAO,YAGXugB,uBAAwB,CACtB/lB,UAAW,CACTwF,MAAO,WAETvF,UAAW,CACTuF,MAAO,cAKf5F,OAAQ,CACN,CACE9D,KAAMynB,EAAUtY,gBAAkB,KAClChP,KAAM,OACN4D,OAAQ,OACRC,UAAU,EACVkmB,UAAW,CACTxgB,MAAO,qBAETvF,UAAW,CACTuF,MAAO,CACLvJ,KAAM,SACNgqB,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,EACJC,WAAY,CAAC,CACXrB,OAAQ,EAAGxf,MAAO,qBACjB,CACDwf,OAAQ,EAAGxf,MAAO,sBAEpB8gB,QAAQ,IAGZvmB,KAAM9C,KAMNqoB,EAAgB/kB,OAAOglB,QAC7BhlB,OAAOglB,QAAU,SAASI,EAAKlK,EAAK/I,EAAMkT,EAAK1sB,GAC7C,SAAIysB,GAAOA,EAAIlY,UAAYkY,EAAIlY,SAAS,wCACpCkY,EAAIlY,SAAS,sBAIb6X,GACKA,EAAcK,EAAKlK,EAAK/I,EAAMkT,EAAK1sB,EAG9C,EAEA,KAEE,QAAS,KACP,IAEE,IAAKyD,EAAcE,OAASF,EAAcE,MAAMqoB,aAE9C,YADA/rB,QAAQD,MAAM,UAKhByD,EAAcE,MAAM0pB,QAGpB5pB,EAAcE,MAAMsD,UAAU7C,GAAQ,GAGtCud,WAAW,KACT,IACE,GAAIle,EAAcE,QAAUF,EAAcE,MAAMqoB,aAAc,CAE5D,MAAMsB,EAAQ7pB,EAAcE,MAAM4pB,WAC9BD,GAASA,EAAME,aAAa,SAAU,IACxC/pB,EAAcE,MAAMwD,SAGpBwa,WAAW,KACLle,EAAcE,QAAUF,EAAcE,MAAMqoB,cAC9CvoB,EAAcE,MAAM8pB,eAAe,CACjC1qB,KAAM,WACNT,MAAO,EACPC,IAAK,OAGR,KAEHtC,QAAQC,KAAK,eAEjB,CACF,CAAE,MAAOwtB,GACPztB,QAAQC,KAAK,cAAewtB,EAC9B,GACC,IAEL,CAAE,MAAO1tB,GACPC,QAAQC,KAAK,aAAcF,GAE3B,IACE,MAAM2tB,EAAe,CACnBzoB,MAAO,CAAEnC,KAAM,QACf0C,MAAO,CAAE1C,KAAM,SACf2D,OAAQ,CAAC,CACP9D,KAAM,KACNG,KAAM,OACN8D,KAAM9C,EACN6C,UAAU,IAEZgnB,WAAW,GAEbnqB,EAAcE,MAAM0pB,QACpB5pB,EAAcE,MAAMsD,UAAU0mB,GAAc,EAC9C,CAAE,MAAOE,GACP5tB,QAAQD,MAAM,aAAc6tB,GAC5B,MAAU7tB,MAAM,gBAClB,CACF,GAEJ,CAAE,QAEA2hB,WAAW,KACTta,OAAOglB,QAAUD,GAChB,IACL,GACD,MAIHzK,WAAW,KACT1hB,QAAQD,MAAQmsB,EAChB9kB,OAAOglB,QAAUD,GAChB,MAGC9a,GAAwBwc,IAC5B,MAAMzgB,EAAQG,EAAgB7J,MAAMoqB,UAAU5c,GAASA,EAAM1I,KAAOqlB,GACpE,GAAIzgB,GAAS,EAAG,CAEd,MAAMud,EAAmBxC,SAASyC,eAAe,eAAeiD,KAC5DlD,IAEEA,EAAiBsB,gBACnB7kB,OAAOE,oBAAoB,SAAUqjB,EAAiBsB,gBAIpDtB,EAAiBqB,kBACnBrB,EAAiBqB,iBAAiBpoB,WAItC2J,EAAgB7J,MAAMyjB,OAAO/Z,EAAO,GAGpCG,EAAgB7J,MAAM4jB,QAASpW,IAC7BA,EAAM9M,MAAQ8M,EAAM9M,MAAM3D,QAAQ,YAAa,MAGjD,MAAU0V,QAAQ,QACpB,GAGI4X,GAAqB,KACrBlc,EAAiBnO,QACnB2N,GAAqBQ,EAAiBnO,MAAM8E,IAC5CkJ,EAAmBhO,OAAQ,EACvBF,EAAcE,QAChBF,EAAcE,MAAME,UACpBJ,EAAcE,MAAQ,QAKtBiO,GAAsB,MAC1B,QAAS,KACP,MAAM+a,EAAevE,SAASyC,eAAe,sBAC7C,GAAK8B,EACL,GAAiC,IAA7BA,EAAa7B,aAAmD,IAA9B6B,EAAa5B,cASnD,GALItnB,EAAcE,QAChBF,EAAcE,MAAME,UACpBJ,EAAcE,MAAQ,MAExBF,EAAcE,MAAQG,GAAA,GAAa6oB,GAC/B7a,EAAiBnO,OAASX,MAAMkB,QAAQ4N,EAAiBnO,MAAMkD,MAAO,CACxE,MAAM9C,EAAY+N,EAAiBnO,MAAMkD,KAAK7C,OAAOC,GACnDjB,MAAMkB,QAAQD,IAASA,EAAKL,QAAU,GAAwB,kBAAZK,EAAK,IAAsC,kBAAZA,EAAK,IAExF,GAAyB,IAArBF,EAAUH,OAAc,OAC5B,MAAMQ,EAAS,CACbC,WAAOC,EACPC,QAAS,CAAEC,QAAS,OAAQC,SAAWC,GAAO,CAACA,EAAG,GAAI,QACtDC,YAAQL,EACRM,QAAS,CAAEC,QAAS,CAAEC,SAAU,CAAEC,WAAY,QAAUC,QAAS,CAAC,EAAGC,YAAa,CAAC,IACnFC,MAAO,CAAEnC,KAAM,OAAQoC,aAAa,EAAOC,IAAKC,KAAKD,OAAOrB,EAAUuB,IAAIC,GAAKA,EAAE,KAAMC,IAAKH,KAAKG,OAAOzB,EAAUuB,IAAIC,GAAKA,EAAE,MAC7HE,MAAO,CAAE1C,KAAM,QAASoC,YAAa,CAAC,EAAG,SACzCL,SAAU,CACR,CAAE/B,KAAM,SAAUT,MAAO,EAAGC,IAAK,IAAKyD,UAAU,EAAMC,SAAU,IAAKC,UAAU,EAAOC,WAAY,EAAGC,WAAY,SAAUC,yBAAyB,GACpJ,CAAEtD,KAAM,SAAUT,MAAO,EAAGC,IAAK,IAAKyD,UAAU,EAAMC,SAAU,IAAKC,UAAU,EAAOI,YAAY,EAAMC,gBAAgB,EAAMJ,WAAY,EAAGK,OAAQ,GAAIJ,WAAY,SAAUK,eAAgB,EAAGJ,yBAAyB,IAE7NK,OAAQ,CAAE,CAAE9D,KAAM,KAAMG,KAAM,OAAQ4D,OAAQ,OAAQC,UAAU,EAAOC,KAAM9C,KAE/EN,EAAcE,MAAMsD,UAAU7C,GAAQ,GACtCud,WAAW,KACT,IACA,GAAIle,EAAcE,QAAUF,EAAcE,MAAMqoB,aAAc,CAC1D,MAAMiC,EAASxqB,EAAcE,MAAM4pB,UAAY9pB,EAAcE,MAAM4pB,WAC/DU,GAAUA,EAAOT,cAAgBS,EAAOT,aAAa,WAAY,IACvE/pB,EAAcE,MAAM8pB,eAAe,CAAE1qB,KAAM,WAAYT,MAAO,EAAGC,IAAK,KAEtE,CACF,CAAE,MAAO4b,GACPle,QAAQC,KAAK,sBAAuBie,EACtC,GACC,GACL,OAvCEwD,WAAW/P,GAAqB,OA2ChCsc,GAAqB,KACzB,GAAKzqB,EAAcE,MAKnB,IAEE,MAAMwqB,EAAU1qB,EAAcE,MAAMyqB,WAAW,CAC7CrrB,KAAM,MACNsrB,WAAY,EACZliB,gBAAiB,SAIb+B,EAAOka,SAASC,cAAc,KACpCna,EAAKqa,SAAW,UAAS,IAAI5nB,MAAOE,gBACpCqN,EAAKoa,KAAO6F,EACZjgB,EAAKya,QAEL,MAAUvS,QAAQ,WACpB,CAAE,MAAOpW,GACPC,QAAQD,MAAM,UAAWA,GACzB,MAAUA,MAAM,SAClB,MAtBE,MAAUA,MAAM,YA4BdsuB,IAAa,SAAI,CAAC,GAClB5e,IAAiB,SAAI,IACrBZ,IAAgB,SAAI,MACpBC,IAAqB,SAAI,IAEzBwf,IAAgB,QAAS,IAAMxV,EAAMwK,QAAQ,yBAC7C/U,GAAauV,GAAY,UAANA,EAAgB,MAAe,WAANA,EAAiB,KAAO,OACpEyK,GAAenlB,GAAQA,EAAIZ,GAC3B2F,GAAY/E,GAAQilB,GAAW3qB,MAAM6qB,GAAYnlB,KAAS,CAAEgF,MAAO,GAAIiB,MAAO,EAAGC,KAAM,EAAGF,SAAU,GAAI1G,SAAS,GAEjHiH,GAAYjQ,MAAO0J,IACvB4E,EAAwBtK,MAAQ0F,EAAIZ,SAC9B0F,GAAY9E,GAClB,MAAM4f,EAAuB9K,IAC3B,GAAIlQ,EAAwBtK,QAAU0F,EAAIZ,GAExC,YADA2f,SAAS7gB,oBAAoB,QAAS0hB,GAAqB,GAG7D,MAAMC,EAAS/K,EAAE+K,OACXC,EAAMD,GAAUA,EAAOE,SAAWF,EAAOE,QAAQ,kBACjDC,EAAMH,GAAUA,EAAOE,SAAWF,EAAOE,QAAQ,eACnDD,GAAOE,IACXpb,EAAwBtK,MAAQ,KAChCykB,SAAS7gB,oBAAoB,QAAS0hB,GAAqB,KAE7Db,SAAS9gB,iBAAiB,QAAS2hB,GAAqB,IAEpD7c,GAAsB/C,IAC1B2C,EAAwBrI,MAAQqI,EAAwBrI,QAAU0F,EAAIZ,GAAK,KAAOY,EAAIZ,GACtF,MAAMgmB,EAAYplB,EAAIZ,GAChBwgB,EAAuB9K,IAC3B,GAAInS,EAAwBrI,QAAU8qB,EAEpC,YADArG,SAAS7gB,oBAAoB,QAAS0hB,GAAqB,GAG7D,MAAMC,EAAS/K,EAAE+K,OACXwF,EAAQxF,GAAUA,EAAOE,SAAWF,EAAOE,QAAQ,oBACnDC,EAAMH,GAAUA,EAAOE,SAAWF,EAAOE,QAAQ,eACnDsF,GAASrF,IACbrd,EAAwBrI,MAAQ,KAChCykB,SAAS7gB,oBAAoB,QAAS0hB,GAAqB,KAE7Db,SAAS9gB,iBAAiB,QAAS2hB,GAAqB,IAGpD9a,GAAcxO,MAAO0J,IACzB,MAAMb,EAAMgmB,GAAYnlB,GAClB8Y,EAAQmM,GAAW3qB,MAAM6E,IAAQ,CAAE6F,MAAO,GAAIiB,MAAO,EAAGC,KAAM,EAAGF,SAAU,GAAI1G,SAAS,GAC9FwZ,EAAMxZ,SAAU,EAChB2lB,GAAW3qB,MAAM6E,GAAO2Z,EACxB,IACE,MAAM,KAAEtb,SAAeoP,GAAA,EAAI0Y,MAAMzQ,KAAK7U,EAAIZ,GAAI,CAAE8G,KAAM4S,EAAM5S,KAAMF,SAAU8S,EAAM9S,WAClFif,GAAW3qB,MAAM6E,GAAO,IAAK2Z,EAAO9T,MAAOxH,EAAKwH,OAAS,GAAIiB,MAAOzI,EAAKyI,OAAS,EAAGC,KAAM1I,EAAK0I,MAAQ,EAAGF,SAAUxI,EAAKwI,UAAY,GAAI1G,SAAS,EACrJ,CAAE,MAAOwV,GACPgE,EAAMxZ,SAAU,CAClB,GAGI8G,GAAkB9P,MAAO0J,EAAKkG,KAClC,MAAM/G,EAAMgmB,GAAYnlB,GAClB8Y,EAAQmM,GAAW3qB,MAAM6E,IAAQ,CAAE6F,MAAO,GAAIiB,MAAO,EAAGC,KAAM,EAAGF,SAAU,GAAI1G,SAAS,GAC9FwZ,EAAM5S,KAAOA,EACb+e,GAAW3qB,MAAM6E,GAAO2Z,QAClBhU,GAAY9E,IAGdsG,GAAgBhQ,MAAO0J,IAC3B,GAAKqG,GAAe/L,MAAM+Q,OAI1B,UACQuB,GAAA,EAAI0Y,MAAMC,OAAOvlB,EAAIZ,GAAIiH,GAAe/L,MAAM+Q,QACpDhF,GAAe/L,MAAQ,SACjBwK,GAAY9E,EACpB,CAAE,MAAO8U,GAAkC,MAPzC,MAAU6F,QAAQ,YAUhBtV,GAAezK,IACnB,MAAM4qB,EAAU9V,EAAMwK,QAAQ,oBAC9B,QAAKsL,MACD9V,EAAMwK,QAAQ,sBAAsB,gBACjCtf,EAAK6qB,UAAYD,EAAQpmB,KAG5BmG,GAAgBF,GAEhBC,GAAiB1K,IACrB6K,GAAcnL,MAAQM,EAAKwE,GAC3BsG,GAAmBpL,MAAQM,EAAKqE,SAE5B2G,GAAiB,KACrBH,GAAcnL,MAAQ,KACtBoL,GAAmBpL,MAAQ,IAEvBuL,GAAiBvP,MAAOsE,IAC5B,GAAK8K,GAAmBpL,MAAM+Q,OAI9B,UACQuB,GAAA,EAAI0Y,MAAMI,OAAO9qB,EAAKwE,GAAIsG,GAAmBpL,MAAM+Q,QACzD5F,GAAcnL,MAAQ,KACtBoL,GAAmBpL,MAAQ,GAC3B,MAAM0F,EAAM,CAAEZ,GAAIxE,EAAK+qB,oBACjB7gB,GAAY9E,EACpB,CAAE,MAAO8U,GAA4B,MATnC,MAAU6F,QAAQ,YAYhBnV,GAAqB5K,IACzB,KAAa4R,QAAQ,aAAc,KAAM,CAAE9S,KAAM,YAC9CksB,KAAKtvB,gBACEsW,GAAA,EAAI0Y,MAAMO,OAAOjrB,EAAKwE,IAC5B,MAAMY,EAAM,CAAEZ,GAAIxE,EAAK+qB,oBACjB7gB,GAAY9E,KAEnBwW,MAAM,SAGLpW,GAAuB,CAACkb,EAAGrkB,GAAY,KAC3C,IAAM,OAAO,SAAWqkB,GAAG,EAAMrkB,EAAW,CAAE,MAAQ,OAAOqkB,CAAE,GAe3DhE,GAAyB,KAC7B,IACE,MAAM6G,EAAStM,eAAeqB,QAAQ,mBACtC,GAAIiL,EAAQ,CACV,MAAM/G,EAAU5L,KAAKU,MAAMiS,GAC3BvO,EAAgBtV,MAAM4jB,QAAQtH,IACxBQ,EAAQR,EAAMxX,MAChBwX,EAAMQ,QAAUA,EAAQR,EAAMxX,MAGpC,CACF,CAAE,MAAOzI,GACPC,QAAQD,MAAM,UAAWA,EAC3B,GAIIkQ,GAAyBvQ,UAC7B,GAAK2Z,EAAmB3V,MAExB,IACE,MAAMwrB,EAAgB,IAAIxuB,KAAK2Y,EAAmB3V,MAAMvD,WAClDgvB,EAA8D,KAA5B,GAAtBjf,EAAcxM,MAAayM,EAAczM,OACrD0rB,EAA2D,KAA3B,GAArBhf,EAAa1M,MAAa2M,EAAa3M,OACxD,GAAiB,IAAbyrB,GAA8B,IAAZC,EAEpB,YADA,MAAUrL,QAAQ,qBAGpB,MAAMsL,EAAa,IAAI3uB,KAAKwuB,EAActuB,UAAYuuB,GAChDG,EAAY,IAAI5uB,KAAKwuB,EAActuB,UAAYwuB,GAErDpvB,QAAQsI,IAAI,WAAY,CACtBinB,QAASlW,EAAmB3V,MAC5BwM,cAAeA,EAAcxM,MAC7ByM,cAAeA,EAAczM,MAC7B0M,aAAcA,EAAa1M,MAC3B2M,aAAcA,EAAa3M,MAC3B0G,UAAW,CACTolB,OAAQH,EAAW9G,cACnBkH,MAAOH,EAAU/G,iBAKrB,MAAMmH,EAAa,CACjBxX,MAAO,YACPG,SAAU,UACV3U,MAAO,CAAC0N,GAAgBie,GAAaje,GAAgBke,KAIvDnkB,GAAYzH,MAAQ,CAAE0H,MAAO,MAAO8G,WAAY,CAACwd,IACjDtW,EAAa1V,OAAQ,EACrBkM,EAAYlM,MAAQ,QAGdub,GAAoB,GAAG,GAG7BjP,EAAuBtM,OAAQ,EAE/B,MAAMisB,EAAa,GAAGzf,EAAcxM,SAASyM,EAAczM,SACrDksB,EAAY,GAAGxf,EAAa1M,SAAS2M,EAAa3M,SACxD,MAAUyS,QAAQ,QAAQwZ,MAAeC,QAE3C,CAAE,MAAO7vB,GACPC,QAAQD,MAAM,WAAYA,GAC1B,MAAUA,MAAM,cAClB,GAIIsS,GAAwB,KAC5B,IAAKC,GAAqB5O,MAAO,OACjC,MAAM6O,EAAMH,GAAU1O,MAAM+gB,KAAKC,GAAKA,EAAE/hB,OAAS2P,GAAqB5O,OACjE6O,IACLpH,GAAYzH,MAAQ,CAClB0H,MAAOmH,EAAIoI,SAASvP,OAAS,MAC7B8G,WAAYnP,MAAMkB,QAAQsO,EAAIoI,SAASzI,YAAc,IAAIK,EAAIoI,QAAQzI,YAAc,MAKjFa,GAAoBiU,IACxB,IAAKA,EAAM,OACX,MAAM1O,EAAKlX,OAAO4lB,EAAK3O,UAAY,IAAIlD,cAC5B,YAAPmD,EACGvV,MAAMkB,QAAQ+iB,EAAKtjB,OAEbsjB,EAAKtjB,MAAMC,OAAS,IAC7BqjB,EAAKtjB,MAAQ,CAACsjB,EAAKtjB,MAAM,IAAM,GAAIsjB,EAAKtjB,MAAM,IAAM,KAFpDsjB,EAAKtjB,MAAQ,CAAC,GAAI,IAKhBX,MAAMkB,QAAQ+iB,EAAKtjB,SACrBsjB,EAAKtjB,MAAQsjB,EAAKtjB,MAAM+U,KAAK,OA0DnC,OArDA,QAAU/Y,gBAEFD,WAEA4e,WACA2F,KAEN5H,KAGIrU,EAAarE,MAAMC,OAAS,SACxBmX,KAIJqB,GAAezY,QACjB0G,EAAU1G,MAAQ,CAChB0N,GAAgB+K,GAAezY,MAAM,IACrC0N,GAAgB+K,GAAezY,MAAM,YAInCub,GAAoB,GAAG,GAG7B6J,QAIF,QAAgB,KACVtlB,EAAcE,QAChBF,EAAcE,MAAME,UACpBJ,EAAcE,MAAQ,MAIxB6J,EAAgB7J,MAAM4jB,QAAQpW,IAC5B,MAAMyZ,EAAmBxC,SAASyC,eAAe,eAAe1Z,EAAM1I,MAClEmiB,IACEA,EAAiBsB,gBACnB7kB,OAAOE,oBAAoB,SAAUqjB,EAAiBsB,gBAEpDtB,EAAiBqB,kBACnBrB,EAAiBqB,iBAAiBpoB,gBAM1C,QAAMgN,EAAmB0M,IACvB,IAAMrC,eAAeC,QAAQ,mBAAoBoC,GAAO,GAAI,CAAE,MAAMzC,GAAG,IAGlE,CACL9O,0BACAiC,0BACAzB,mBACAJ,sBACAzD,UACAX,eACAiR,kBACAvO,gBACAL,YACAwF,cACAR,WACAS,aACAoJ,aACAG,eACApH,mBACAiL,gBACAhS,sBACAE,eACA6S,mBACAxS,oBACAF,oBACA6G,sBAEAvK,cACAC,qBACA0D,iBACAL,sBACAmT,oBACAY,uBACArU,gBACAgX,eACApX,yBACAa,gBACAzC,eACAkH,oBACAC,uBACAyS,kBACA5W,iBACAwF,mBACA0R,kBACAJ,yBACA7Z,yBACAC,0BACAya,uBACAta,gBACAa,gBACAE,4BACAE,mBACAia,uBACAva,wBACAC,sBACAE,oBACA2c,sBACAxJ,4BACAzJ,eACA0J,aACAhB,kBACA7R,sBACAC,0BACA6H,aACAoS,uBACAtR,yBACAZ,wBACAG,0BACAJ,yBACA+K,wBAEAgJ,uBACAK,wBACA/T,uBACAC,mBACAK,gBACAmT,kBACApU,wBACAE,0BAEAY,sBACAC,iBACAC,oBAEA3G,gBACAE,eACAZ,mBACAC,eACAyb,2BACA3G,6BACA3S,yBACAC,oBACA4B,aACAzB,eACAC,YACAqB,mBACAE,iBACAjB,eACAE,iBACAD,iBACAM,kBACAC,kBACAL,qBACAyf,cACA5e,kBACAZ,iBACAC,sBACAP,aACA/E,wBACA8kB,iBAEAte,yBACAqJ,qBACAnJ,gBACAE,eACAD,gBACAE,eACAJ,0BAEAK,mBACAK,mBACAC,mBACAkX,0BACA7W,kBACAK,wBACAuX,wBACAC,wBACAngB,iBACAkI,yBACAH,iBACAI,cACAC,sBAEA2I,yB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","sources":["webpack://logtool-frontend/./src/utils/timeFormatter.js","webpack://logtool-frontend/./src/components/TimeSeriesChart.vue","webpack://logtool-frontend/./src/components/TimeSeriesChart.vue?8000","webpack://logtool-frontend/./src/views/BatchAnalysis.vue","webpack://logtool-frontend/./src/components/SurgeryDataCompare.vue","webpack://logtool-frontend/./src/components/SurgeryDataCompare.vue?7bb0","webpack://logtool-frontend/./src/views/BatchAnalysis.vue?7d02","webpack://logtool-frontend/./src/utils/surgeryDataAdapter.js","webpack://logtool-frontend/./src/utils/visualizationHelper.js"],"sourcesContent":["/**\r\n * 修复后的时间格式化工具\r\n * 处理UTC时间到本地时间的转换，确保所有页面显示一致\r\n */\r\n\r\n// 服务器时区偏移量（分钟）\r\nlet serverOffsetMinutes = null\r\n\r\n/**\r\n * 加载服务器时区信息\r\n */\r\nexport const loadServerTimezone = async () => {\r\n  try {\r\n    const resp = await fetch('/api/timezone')\r\n    const json = await resp.json()\r\n    if (typeof json.offsetMinutes === 'number') {\r\n      serverOffsetMinutes = json.offsetMinutes\r\n    }\r\n  } catch (error) {\r\n    console.warn('加载服务器时区信息失败:', error)\r\n    serverOffsetMinutes = null\r\n  }\r\n}\r\n\r\n/**\r\n * 统一的时间格式化函数\r\n * 将UTC时间转换为服务器时区时间显示\r\n * @param {string|Date|number} timestamp - 时间戳\r\n * @param {boolean} useServerTimezone - 是否使用服务器时区转换，默认为true\r\n * @param {boolean} isUtcTime - 输入时间是否为UTC时间，默认为true（数据库时间）\r\n * @returns {string} 格式化后的时间字符串\r\n */\r\nexport const formatTime = (timestamp, useServerTimezone = true, isUtcTime = true) => {\r\n  if (!timestamp) return '-'\r\n\r\n  // 如果明确指定为本地时间且是本地时间格式，直接返回\r\n  if (!isUtcTime && typeof timestamp === 'string' && /^\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2}:\\d{2}$/.test(timestamp)) {\r\n    return timestamp\r\n  }\r\n\r\n  let date\r\n\r\n  // 处理不同的时间格式\r\n  if (typeof timestamp === 'string') {\r\n    // 如果是UTC格式 YYYY-MM-DD HH:mm:ss，需要添加UTC标识符\r\n    if (/^\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2}:\\d{2}$/.test(timestamp)) {\r\n      // 这是数据库中的UTC格式，需要添加Z标识符\r\n      const utcTimeStr = timestamp.replace(' ', 'T') + 'Z'\r\n      date = new Date(utcTimeStr)\r\n    } else if (/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/.test(timestamp)) {\r\n      // 如果是ISO格式的UTC时间 YYYY-MM-DDTHH:mm:ss.fffZ\r\n      date = new Date(timestamp)\r\n    } else {\r\n      date = new Date(timestamp)\r\n    }\r\n  } else {\r\n    date = new Date(timestamp)\r\n  }\r\n\r\n  if (isNaN(date.getTime())) return '-'\r\n\r\n  // 如果启用服务器时区转换\r\n  if (useServerTimezone) {\r\n    if (serverOffsetMinutes !== null) {\r\n      // 以服务端时区为准：将UTC时间转换为服务器时区时间\r\n      const localOffset = -date.getTimezoneOffset()\r\n      const delta = (serverOffsetMinutes - localOffset) * 60 * 1000\r\n      date.setTime(date.getTime() + delta)\r\n    }\r\n    // 注意：JavaScript的Date对象会自动处理时区转换\r\n    // 如果输入是UTC时间，Date对象会自动转换为本地时间显示\r\n    // 我们不需要手动加减8小时\r\n  }\r\n\r\n  const year = date.getFullYear()\r\n  const month = String(date.getMonth() + 1).padStart(2, '0')\r\n  const day = String(date.getDate()).padStart(2, '0')\r\n  const hours = String(date.getHours()).padStart(2, '0')\r\n  const minutes = String(date.getMinutes()).padStart(2, '0')\r\n  const seconds = String(date.getSeconds()).padStart(2, '0')\r\n\r\n  const result = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * 格式化短时间（只显示时分）\r\n * @param {string|Date|number} timestamp - 时间戳\r\n * @param {boolean} useServerTimezone - 是否使用服务器时区转换，默认为true\r\n * @param {boolean} isUtcTime - 输入时间是否为UTC时间，默认为true（数据库时间）\r\n * @returns {string} 格式化后的时间字符串\r\n */\r\nexport const formatTimeShort = (timestamp, useServerTimezone = true, isUtcTime = true) => {\r\n  if (!timestamp) return '-'\r\n\r\n  const date = new Date(timestamp)\r\n  if (isNaN(date.getTime())) return '-'\r\n\r\n  // 如果启用服务器时区转换\r\n  if (useServerTimezone) {\r\n    if (serverOffsetMinutes !== null) {\r\n      const localOffset = -date.getTimezoneOffset()\r\n      const delta = (serverOffsetMinutes - localOffset) * 60 * 1000\r\n      date.setTime(date.getTime() + delta)\r\n    }\r\n    // 注意：JavaScript的Date对象会自动处理时区转换\r\n    // 如果输入是UTC时间，Date对象会自动转换为本地时间显示\r\n    // 我们不需要手动加减8小时\r\n  }\r\n\r\n  const hours = String(date.getHours()).padStart(2, '0')\r\n  const minutes = String(date.getMinutes()).padStart(2, '0')\r\n\r\n  return `${hours}:${minutes}`\r\n}\r\n\r\n/**\r\n * 格式化手术时间范围\r\n * @param {Object} surgery - 手术对象\r\n * @param {boolean} useServerTimezone - 是否使用服务器时区转换，默认为true\r\n * @returns {string} 格式化后的时间范围字符串\r\n */\r\nexport const formatSurgeryTime = (surgery, useServerTimezone = true) => {\r\n  if (!surgery.surgery_start_time || !surgery.surgery_end_time) {\r\n    return '手术时间未确定'\r\n  }\r\n\r\n  const start = formatTime(surgery.surgery_start_time, useServerTimezone, true) // 数据库时间默认为UTC\r\n  const end = formatTime(surgery.surgery_end_time, useServerTimezone, true) // 数据库时间默认为UTC\r\n\r\n  return `${start} ~ ${end}`\r\n}\r\n\r\n/**\r\n * 获取服务器时区信息\r\n * @returns {Object|null} 服务器时区信息\r\n */\r\nexport const getServerTimezone = () => {\r\n  return serverOffsetMinutes !== null ? { offsetMinutes: serverOffsetMinutes } : null\r\n}\r\n\r\n/**\r\n * 格式化系统时间（用于显示创建时间、更新时间等）\r\n * 使用24小时制，格式：YYYY-MM-DD HH:mm:ss\r\n * @param {string|Date|number} timestamp - 时间戳\r\n * @returns {string} 格式化后的时间字符串\r\n */\r\nexport const formatSystemTime = (timestamp) => {\r\n  if (!timestamp) return '-'\r\n\r\n  const date = new Date(timestamp)\r\n  if (isNaN(date.getTime())) return '-'\r\n\r\n  const year = date.getFullYear()\r\n  const month = String(date.getMonth() + 1).padStart(2, '0')\r\n  const day = String(date.getDate()).padStart(2, '0')\r\n  const hours = String(date.getHours()).padStart(2, '0')\r\n  const minutes = String(date.getMinutes()).padStart(2, '0')\r\n  const seconds = String(date.getSeconds()).padStart(2, '0')\r\n\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n}\r\n\r\n/**\r\n * 检查是否已加载服务器时区信息\r\n * @returns {boolean} 是否已加载\r\n */\r\nexport const isServerTimezoneLoaded = () => {\r\n  return serverOffsetMinutes !== null\r\n}\r\n","<template>\r\n  <div ref=\"chartContainer\" :style=\"{ width: width ? width + 'px' : '100%', height: height + 'px' }\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, watch, nextTick } from 'vue'\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'TimeSeriesChart',\r\n  props: {\r\n    seriesData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    seriesName: {\r\n      type: String,\r\n      default: '数据'\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 300\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 600\r\n    },\r\n    yAxisFormat: {\r\n      type: String,\r\n      default: 'decimal'\r\n    },\r\n    showRangeLabels: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const chartContainer = ref(null)\r\n    let chartInstance = null\r\n\r\n    const createChart = () => {\r\n      if (!chartContainer.value || !props.seriesData || props.seriesData.length === 0) {\r\n        return\r\n      }\r\n\r\n      // 清理现有实例\r\n      if (chartInstance) {\r\n        chartInstance.dispose()\r\n      }\r\n\r\n      // 创建新实例\r\n      chartInstance = echarts.init(chartContainer.value)\r\n\r\n      // 数据验证\r\n      const validData = props.seriesData.filter(item => \r\n        Array.isArray(item) && \r\n        item.length >= 2 && \r\n        typeof item[0] === 'number' && \r\n        typeof item[1] === 'number' &&\r\n        !isNaN(item[0]) && \r\n        !isNaN(item[1]) &&\r\n        isFinite(item[0]) && \r\n        isFinite(item[1])\r\n      )\r\n\r\n      if (validData.length === 0) {\r\n        chartInstance.dispose()\r\n        chartInstance = null\r\n        return\r\n      }\r\n\r\n      // 配置选项\r\n      const option = {\r\n        title: undefined,\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          position: (pt) => [pt[0], '10%']\r\n        },\r\n        legend: undefined,\r\n        toolbox: {\r\n          feature: {\r\n            dataZoom: {\r\n              yAxisIndex: 'none'\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'time',\r\n          boundaryGap: false,\r\n          min: Math.min(...validData.map(d => d[0])),\r\n          max: Math.max(...validData.map(d => d[0]))\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, '100%'],\r\n          axisLabel: {\r\n            width: 40, // 固定Y轴标签宽度\r\n            overflow: 'truncate', // 超出部分截断\r\n            formatter: (value) => {\r\n              if (props.yAxisFormat === 'integer') {\r\n                return Math.round(value).toString()\r\n              } else if (props.yAxisFormat === 'decimal') {\r\n                return value.toFixed(1)\r\n              }\r\n              return value.toString()\r\n            }\r\n          }\r\n        },\r\n        dataZoom: [\r\n          {\r\n            type: 'inside',\r\n            start: 0,\r\n            end: 100,\r\n            realtime: true,\r\n            throttle: 100,\r\n            zoomLock: false,\r\n            xAxisIndex: 0,\r\n            filterMode: 'filter',\r\n            preventDefaultMouseMove: true\r\n          },\r\n          {\r\n            type: 'slider',\r\n            start: 0,\r\n            end: 100,\r\n            realtime: true,\r\n            throttle: 100,\r\n            zoomLock: false,\r\n            showDetail: true,\r\n            showDataShadow: true,\r\n            xAxisIndex: 0,\r\n            bottom: 10,\r\n            filterMode: 'filter',\r\n            moveHandleSize: 8,\r\n            preventDefaultMouseMove: true\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: props.seriesName,\r\n            type: 'line',\r\n            symbol: 'none',\r\n            sampling: false,\r\n            data: validData,\r\n            lineStyle: {\r\n              width: 2\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.3\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n      chartInstance.setOption(option, true)\r\n    }\r\n\r\n    const resizeChart = () => {\r\n      if (chartInstance) {\r\n        chartInstance.resize()\r\n      }\r\n    }\r\n\r\n    // 监听数据变化\r\n    watch(() => props.seriesData, () => {\r\n      nextTick(() => {\r\n        createChart()\r\n      })\r\n    }, { deep: true })\r\n\r\n    // 监听高度变化\r\n    watch(() => props.height, () => {\r\n      nextTick(() => {\r\n        resizeChart()\r\n      })\r\n    })\r\n\r\n    // 监听宽度变化\r\n    watch(() => props.width, () => {\r\n      nextTick(() => {\r\n        resizeChart()\r\n      })\r\n    })\r\n\r\n    onMounted(() => {\r\n      nextTick(() => {\r\n        createChart()\r\n      })\r\n      \r\n      // 监听窗口大小变化\r\n      window.addEventListener('resize', resizeChart)\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      if (chartInstance) {\r\n        chartInstance.dispose()\r\n        chartInstance = null\r\n      }\r\n      window.removeEventListener('resize', resizeChart)\r\n    })\r\n\r\n    return {\r\n      chartContainer\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 图表容器样式 */\r\n</style>\r\n","import { render } from \"./TimeSeriesChart.vue?vue&type=template&id=59aa7af9&scoped=true\"\nimport script from \"./TimeSeriesChart.vue?vue&type=script&lang=js\"\nexport * from \"./TimeSeriesChart.vue?vue&type=script&lang=js\"\n\nimport \"./TimeSeriesChart.vue?vue&type=style&index=0&id=59aa7af9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-59aa7af9\"]])\n\nexport default __exports__","<template>\n  <div class=\"batch-analysis-container\">\n    <!-- 主要内容 -->\n    <div class=\"analysis-card-wrapper\">\n      <el-card class=\"analysis-card\">\n      <div class=\"card-header\" :style=\"{ borderBottom: 'none' }\">\n        <div class=\"header-left\">\n          <span class=\"title\">批量日志查看</span>\n          <el-tag v-if=\"batchCount > 0 && selectedLogsCount > 0\" type=\"info\" size=\"small\">\n              设备编号：{{ selectedLogs[0]?.device_id || '未知' }}\n            </el-tag>\n          <el-tooltip placement=\"bottom\" effect=\"light\" transition=\"el-fade-in-linear\" popper-class=\"selected-files-popper\" :disabled=\"selectedLogsCount === 0\">\n            <template #content>\n              <div class=\"selected-files-tooltip\">\n                <el-tag v-for=\"log in selectedLogs\" :key=\"log.id\" size=\"small\" style=\"margin: 2px 4px 2px 0;\">\n                  {{ log.original_name }}\n                </el-tag>\n              </div>\n            </template>       \n            <el-tag type=\"info\" size=\"small\">\n              已选择 {{ selectedLogsCount }} 个日志文件\n            </el-tag>\n          </el-tooltip>\n        </div>\n        <div class=\"header-right\">\n          <el-button \n            v-if=\"!loading && batchCount > 0\" \n            @click=\"showClipboard\" \n            type=\"info\" \n            size=\"small\"\n          >\n            <el-icon><DocumentCopy /></el-icon>\n            剪贴板\n          </el-button>\n          <el-button \n            v-if=\"!loading && batchCount > 0\" \n            @click=\"exportToCSV\" \n            type=\"success\" \n            size=\"small\"\n          >\n            <el-icon><Download /></el-icon>\n            导出CSV\n          </el-button>\n          <el-button \n            v-if=\"!loading && selectedLogsCount > 0 && batchCount > 0\" \n            @click=\"showSurgeryStatistics\" \n            type=\"primary\" \n            size=\"small\" \n            style=\"margin-left: 10px;\"\n          >\n            <el-icon><DataAnalysis /></el-icon>\n            手术统计\n          </el-button>\n        </div>\n      </div>\n\n      <!-- 手术统计结果（列表） -->\n      <el-dialog v-model=\"showSurgeryStatsDialog\" title=\"手术统计结果\" width=\"900px\" append-to-body>\n        <div v-if=\"surgeryStatsLoading\" style=\"padding: 24px 0;\">\n          <el-empty description=\"正在统计手术数据...\" />\n        </div>\n        <div v-else>\n          <el-table :data=\"surgeryStats\" style=\"width:100%\">\n            <el-table-column prop=\"surgery_id\" label=\"手术id\" width=\"220\" />\n            <el-table-column label=\"手术术式\" min-width=\"200\">\n              <template #default=\"{ row }\">\n                {{ row?.postgresql_structure?.surgery_stats?.procedure || row?.surgery_stats?.procedure || '-' }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"手术开始时间\" width=\"180\">\n              <template #default=\"{ row }\">{{ formatTimeForDisplay(row.surgery_start_time || row.start_time) }}</template>\n            </el-table-column>\n            <el-table-column label=\"手术结束时间\" width=\"180\">\n              <template #default=\"{ row }\">{{ formatTimeForDisplay(row.surgery_end_time || row.end_time) }}</template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"320\" :fixed=\"surgeryStats.length > 0 ? 'right' : false\">\n              <template #default=\"{ row }\">\n                <el-button size=\"small\" type=\"success\" @click=\"visualizeSurgeryStat(row)\">可视化</el-button>\n                <el-button size=\"small\" @click=\"previewSurgeryData(row)\">查看数据</el-button>\n                <el-button \n                  v-if=\"hasExportPermission\"\n                  size=\"small\" type=\"primary\" :loading=\"exportingRow[row.id]===true\"\n                  @click=\"exportSurgeryRow(row)\"\n                >导出</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        <template #footer>\n          <el-button @click=\"showSurgeryStatsDialog=false\">关闭</el-button>\n        </template>\n      </el-dialog>\n\n      <!-- 查看数据弹窗 -->\n      <el-dialog v-model=\"surgeryJsonDialogVisible\" title=\"手术数据（PostgreSQL格式）\" width=\"760px\" append-to-body>\n        <div style=\"margin-bottom: 8px; color: #666; font-size: 12px;\">\n          此数据格式为准备写入PostgreSQL数据库的格式\n        </div>\n        <el-input type=\"textarea\" :rows=\"18\" v-model=\"surgeryJsonText\" readonly />\n        <template #footer>\n          <el-button @click=\"surgeryJsonDialogVisible=false\">关闭</el-button>\n        </template>\n      </el-dialog>\n\n      <!-- 搜索和筛选 -->\n      <div class=\"search-section\" :style=\"{ marginTop: '8px' }\">\n        <div class=\"search-grid\">\n          <!-- 1/4 时间搜索框 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">时间范围</div>\n            <el-date-picker\n              v-model=\"timeRange\"\n              type=\"datetimerange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始时间\"\n              end-placeholder=\"结束时间\"\n              format=\"YYYY-MM-DD HH:mm:ss\"\n              value-format=\"YYYY-MM-DD HH:mm:ss\"\n              class=\"time-range\"\n              size=\"small\"\n               :default-value=\"defaultPickerRange\"\n              :disabled-date=\"disableOutOfRangeDates\"\n              @change=\"handleTimeRangeChange\"\n            />\n          </div>\n          \n          <!-- 2/4 简单搜索框 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">关键字</div>\n            <el-input\n              v-model=\"searchKeyword\"\n              placeholder=\"搜索释义内容或故障码\"\n              class=\"search-input\"\n              clearable\n              @input=\"handleSearch\"\n              @compositionstart=\"onCompositionStart\"\n              @compositionend=\"onCompositionEnd\"\n              size=\"small\"\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </div>\n\n          <!-- 3/4 高级搜索入口 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">高级搜索</div>\n            <div class=\"advanced-actions\">\n              <el-button size=\"small\" type=\"primary\" plain @click=\"showAdvancedFilter = true\">打开高级筛选</el-button>\n              <div class=\"advanced-summary\" v-if=\"leafConditionCount > 0\">\n                已添加 {{ leafConditionCount }} 个条件（逻辑：{{ filtersRoot.logic }}）\n              </div>\n            </div>\n          </div>\n\n          <!-- 4/4 清除搜索 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">清除搜索</div>\n            <el-button size=\"small\" @click=\"clearFilters\">清除所有条件</el-button>\n          </div>\n        </div>\n\n        <!-- 搜索表达式展示 -->\n        <div class=\"search-expression\" v-if=\"searchExpression\">\n          <span class=\"label\">搜索表达式：</span>\n          <span class=\"expr\">{{ searchExpression }}</span>\n        </div>\n      </div>\n\n      <!-- 日志条目表格 -->\n      <div class=\"entries-section\">\n        <div class=\"section-header\">\n          <h3>日志条目 ({{ filteredCount }})</h3>\n        </div>\n\n        <!-- 加载状态 -->\n        <div v-if=\"loading\" class=\"loading-section\">\n          <el-empty description=\"正在加载日志数据...\" />\n        </div>\n\n        <!-- 数据表格 -->\n        <div v-else class=\"table-container\">\n          <!-- 数据表格 -->\n          <el-table \n            :data=\"paginatedEntries\" \n            style=\"width: 100%\"\n            v-loading=\"loading\"\n            height=\"60vh\"\n            :stripe=\"false\"\n            table-layout=\"fixed\"\n            row-key=\"id\"\n            :row-class-name=\"getRowClassName\"\n            :row-style=\"getRowStyle\"\n            @current-change=\"forceRelayout\"\n            @selection-change=\"forceRelayout\"\n            @sort-change=\"forceRelayout\"\n            @filter-change=\"forceRelayout\"\n            @expand-change=\"forceRelayout\"\n          >\n            <!-- 标记颜色列 -->\n            <el-table-column prop=\"color_mark\" width=\"4%\">\n              <template #header>\n                <div class=\"col-header\">\n                  <span></span>\n                </div>\n              </template>\n              <template #default=\"{ row }\">\n                <div class=\"color-mark-cell\">\n                  <el-popover\n                    placement=\"bottom-start\"\n                    :width=\"200\"\n                    trigger=\"manual\"\n                    :visible=\"activeColorPopoverRowId === row.id\"\n                    popper-class=\"color-picker-popover\"\n                  >\n                    <template #reference>\n                      <div \n                        class=\"color-indicator\"\n                        :class=\"{ 'has-color': row.color_mark }\"\n                        :style=\"row.color_mark ? { backgroundColor: row.color_mark } : {}\"\n                        @click.stop=\"toggleColorPopover(row)\"\n                      ></div>\n                    </template>\n                    <div v-if=\"activeColorPopoverRowId === row.id\" class=\"color-picker-menu\">\n                      <div \n                        v-for=\"color in colorOptions\"\n                        :key=\"color.value || 'none'\"\n                        class=\"color-option\"\n                        :class=\"{ \n                          active: row.color_mark === color.value,\n                          'no-color': color.value === null\n                        }\"\n                        :style=\"color.value ? { backgroundColor: color.value } : {}\"\n                        @click=\"selectColor(row, color.value)\"\n                      >\n                        <div v-if=\"row.color_mark === color.value\" class=\"checkmark\">✓</div>\n                      </div>\n                    </div>\n                  </el-popover>\n                </div>\n              </template>\n            </el-table-column>\n            \n            <!-- 文件名/时间戳列 -->\n            <el-table-column prop=\"file_info\" width=\"15%\">\n              <template #header>\n                <div class=\"col-header\">\n                  <span>时间戳（文件名）</span>\n                </div>\n              </template>\n              <template #default=\"{ row }\">\n                <div class=\"file-info-cell\" @mouseenter=\"hoveredNameRowId = row.id\" @mouseleave=\"hoveredNameRowId = null\">\n                  <template v-if=\"hoveredNameRowId === row.id\">\n                    <el-tooltip\n                      :content=\"row.log_name\"\n                      placement=\"top\"\n                      effect=\"dark\"\n                      popper-class=\"explanation-tooltip dark\"\n                      :teleported=\"true\"\n                      :show-after=\"120\"\n                    >\n                      <div class=\"timestamp\">{{ row.timestamp_text }}</div>\n                    </el-tooltip>\n                  </template>\n                  <template v-else>\n                    <div class=\"timestamp\" :title=\"row.log_name\">{{ row.timestamp_text }}</div>\n                  </template>\n                </div>\n              </template>\n            </el-table-column>\n            \n            <!-- 故障码列 -->\n            <el-table-column prop=\"error_code\" width=\"12%\">\n              <template #header>\n                <div class=\"col-header\">\n                  <span>故障码</span>\n                </div>\n              </template>\n              <template #default=\"{ row }\">\n                <div class=\"error-code-cell\" @click=\"toggleErrorCodeStatistics(row.error_code)\">\n                  {{ row.error_code }}\n                  <span \n                    v-if=\"showStatisticsForErrorCode === row.error_code && getErrorCodeCountDisplay(row.error_code)\" \n                    class=\"error-code-badge\"\n                    :title=\"getErrorCodeStatisticsTooltip(row.error_code)\"\n                  >\n                    {{ getErrorCodeCountDisplay(row.error_code) }}\n                  </span>\n                </div>\n              </template>\n            </el-table-column>\n            \n            <!-- 释义列 -->\n            <el-table-column prop=\"explanation\" width=\"45%\">\n              <template #header>\n                <div class=\"col-header\">\n                  <span>释义</span>\n                </div>\n              </template>\n              <template #default=\"{ row }\">\n                <div class=\"explanation-cell\">\n                  <ExplanationCell :text=\"row.explanation\" />\n                </div>\n              </template>\n            </el-table-column>\n            \n            <!-- 参数列 -->\n            <el-table-column prop=\"parameters\" width=\"20%\">\n              <template #header>\n                <div class=\"col-header\">\n                  <span>参数(1~4)</span>\n                </div>\n              </template>\n              <template #default=\"{ row }\">\n                <div class=\"parameters-cell\">\n                  <div class=\"param-content\">\n                    <span v-for=\"(param, index) in row.display_params\" :key=\"index\" class=\"param-item\">{{ param }}</span>\n                  </div>\n                  <div class=\"param-actions\">\n                    <el-popover\n                      :visible=\"activeParamPopoverRowId === row.id\"\n                      trigger=\"manual\"\n                      placement=\"bottom\"\n                      width=\"260px\"\n                      :teleported=\"true\"\n                      popper-class=\"param-popover\"\n                    >\n                      <div class=\"parameter-popover\">\n                        <div class=\"popover-title\" style=\"margin-bottom:8px;\">选择可视化参数</div>\n                        <div v-if=\"paramNamesLoading\" class=\"param-loading\">正在加载参数含义...</div>\n                        <el-radio-group \n                          v-else\n                          v-model=\"selectedParameter\"\n                          class=\"param-radio-group\"\n                        >\n                          <el-radio\n                            v-for=\"idx in 4\"\n                            :key=\"idx\"\n                            :label=\"idx\"\n                            :disabled=\"paramNamesLoading || !isParameterAvailable(idx)\"\n                          >\n                            {{ paramNames[idx - 1] || `参数${idx}` }}\n                          </el-radio>\n                        </el-radio-group>\n                        <div class=\"popover-actions\" style=\"margin-top:8px;text-align:right;\">\n                          <el-button size=\"small\" @click=\"activeParamPopoverRowId = null\">取消</el-button>\n                          <el-button size=\"small\" type=\"primary\" @click=\"confirmVisualization\">确认</el-button>\n                        </div>\n                      </div>\n                      <template #reference>\n                      <el-button \n                        text\n                        @click.stop=\"handleVisualization(row)\"\n                        class=\"visualization-btn\"\n                        :disabled=\"chartThumbnails.length >= 5\"\n                        :title=\"chartThumbnails.length >= 5 ? '已有5张可视化数据表' : ''\"\n                      >\n                        <el-icon><DataAnalysis /></el-icon>\n                      </el-button>\n                      </template>\n                    </el-popover>\n                  </div>\n                </div>\n              </template>\n            </el-table-column>\n            \n            \n            <!-- 操作列 -->\n            <el-table-column prop=\"operations\" width=\"13%\">\n              <template #header>\n                <div class=\"col-header\">\n                  <span>操作</span>\n                </div>\n              </template>\n              <template #default=\"{ row }\">\n                <div class=\"operations-cell\">\n                  <!-- 操作图标按钮 -->\n                  <el-button \n                    text\n                    @click=\"handleContextAnalysis(row)\"\n                    class=\"operation-btn\"\n                  >\n                    <el-icon><View /></el-icon>\n                  </el-button>\n                  <el-button \n                    text\n                    @click=\"handleLogCapture(row)\"\n                    class=\"operation-btn\"\n                  >\n                    <el-icon><DocumentCopy /></el-icon>\n                  </el-button>\n                  <el-popover\n                    placement=\"left-start\"\n                    :width=\"360\"\n                    trigger=\"manual\"\n                    :visible=\"activeNotesPopoverRowId === row.id\"\n                    popper-class=\"notes-popover\"\n                  >\n                    <template #default>\n                      <div v-if=\"activeNotesPopoverRowId === row.id\">\n                      <div class=\"notes-header\">\n                        <span>备注</span>\n                        <el-button link size=\"small\" @click=\"reloadNotes(row)\">刷新</el-button>\n                      </div>\n                      <div class=\"notes-list\" v-if=\"getNotes(row).items.length > 0\">\n                        <div \n                          class=\"note-item\" \n                          v-for=\"item in getNotes(row).items\" \n                          :key=\"item.id\"\n                        >\n                          <div class=\"note-meta\">\n                            <span class=\"note-user\" :class=\"'role-' + (item.created_by || 'user')\">{{ item.username }}（{{ roleLabel(item.created_by) }}）</span>\n                            <span class=\"note-time\">{{ formatTimeForDisplay(item.created_at) }}</span>\n                            <span class=\"note-actions\">\n                              <el-button v-if=\"canEditNote(item)\" link type=\"primary\" size=\"small\" @click=\"startEditNote(item)\">编辑</el-button>\n                              <el-button v-if=\"canDeleteNote(item)\" link type=\"danger\" size=\"small\" @click=\"confirmDeleteNote(item)\">删除</el-button>\n                            </span>\n                          </div>\n                          <div class=\"note-content\" v-if=\"editingNoteId !== item.id\">{{ item.content }}</div>\n                          <div class=\"note-edit\" v-else>\n                            <el-input v-model=\"editingNoteContent\" maxlength=\"50\" show-word-limit type=\"textarea\" rows=\"2\" />\n                            <div class=\"note-edit-actions\">\n                              <el-button size=\"small\" @click=\"cancelEditNote\">取消</el-button>\n                              <el-button size=\"small\" type=\"primary\" @click=\"submitEditNote(item)\">保存</el-button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"notes-empty\" v-else>暂无备注</div>\n                      <div class=\"notes-pagination\">\n                        <el-pagination\n                          layout=\"prev, pager, next\"\n                          small\n                          :page-size=\"getNotes(row).pageSize\"\n                          :total=\"getNotes(row).total\"\n                          :current-page=\"getNotes(row).page\"\n                          @current-change=\"(p)=>changeNotesPage(row,p)\"\n                        />\n                      </div>\n                      <div class=\"notes-editor\" v-if=\"canCreateNote\">\n                        <el-input v-model=\"newNoteContent\" placeholder=\"添加备注（最多50字）\" maxlength=\"50\" show-word-limit type=\"textarea\" rows=\"2\" />\n                        <div class=\"notes-editor-actions\">\n                          <el-button size=\"small\" type=\"primary\" @click=\"submitNewNote(row)\">提交备注</el-button>\n                        </div>\n                      </div>\n                      </div>\n                    </template>\n                    <template #reference>\n                  <el-button \n                    text\n                    class=\"operation-btn\"\n                        @click.stop=\"openNotes(row)\"\n                  >\n                    <el-icon><Edit /></el-icon>\n                  </el-button>\n                    </template>\n                  </el-popover>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-wrapper\" v-if=\"filteredCount > 0\">\n          <el-pagination\n            :current-page=\"currentPage\"\n            :page-size=\"pageSize\"\n            :page-sizes=\"[50, 100, 200, 500]\"\n            :total=\"totalCount\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n\n        <!-- 上下文分析对话框 -->\n        <el-dialog\n          v-model=\"contextAnalysisVisible\"\n          title=\"上下文分析\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <div class=\"context-analysis-form\">\n            <div class=\"context-intro\">将以选中的日志条目为基点</div>\n            <div class=\"time-range-inputs\">\n              <div class=\"input-group\">\n                <label>前</label>\n                <el-input-number\n                  v-model=\"beforeMinutes\"\n                  :min=\"0\"\n                  :max=\"60\"\n                  controls-position=\"right\"\n                  style=\"width: 80px;\"\n                />\n                <span class=\"unit-label\">分钟</span>\n                <el-input-number\n                  v-model=\"beforeSeconds\"\n                  :min=\"0\"\n                  :max=\"60\"\n                  controls-position=\"right\"\n                  style=\"width: 80px; margin-left: 4px;\"\n                />\n                <span class=\"unit-label\">秒</span>\n              </div>\n              <span>，</span>\n              <div class=\"input-group\">\n                <label>后</label>\n                <el-input-number\n                  v-model=\"afterMinutes\"\n                  :min=\"0\"\n                  :max=\"60\"\n                  controls-position=\"right\"\n                  style=\"width: 80px;\"\n                />\n                <span class=\"unit-label\">分钟</span>\n                <el-input-number\n                  v-model=\"afterSeconds\"\n                  :min=\"0\"\n                  :max=\"60\"\n                  controls-position=\"right\"\n                  style=\"width: 80px; margin-left: 4px;\"\n                />\n                <span class=\"unit-label\">秒</span>\n              </div>\n            </div>\n          </div>\n          \n          <template #footer>\n            <div class=\"dialog-footer\">\n              <el-button type=\"primary\" @click=\"executeContextAnalysis\">确认分析</el-button>\n            </div>\n          </template>\n        </el-dialog>\n\n        <!-- 右侧侧边栏（日志摘取 / 可视化） -->\n        <el-drawer\n          v-model=\"clipboardVisible\"\n          direction=\"rtl\"\n          size=\"340px\"\n          :with-header=\"false\"\n        >\n          <div class=\"sidebar-tabs\">\n            <el-tabs v-model=\"sidebarActiveTab\" stretch>\n              <el-tab-pane :label=\"`日志摘取 (${clipboardCount})`\" name=\"logs\">\n                <div class=\"logs-clipboard\">\n                  <div v-if=\"(clipboardEntries.length>0) || clipboardContent\">\n                    <div class=\"clipboard-thumbnail\" @click=\"clipboardDetailVisible = true\">\n                      <div class=\"thumb-row\">\n                        <el-icon><DocumentCopy /></el-icon>\n                        <span class=\"thumb-label\">日志摘取板</span>\n                      </div>\n                      <div class=\"fill-bar\">\n                        <div class=\"fill-bar-inner\" :style=\"{ width: fillPercent + '%' }\"></div>\n                        <div class=\"fill-bar-text\">{{ clipboardCount }}/{{ maxClipboardEntries }}</div>\n                      </div>\n                      <el-button class=\"delete-btn\" text circle @click.stop=\"clearClipboard\">\n                        <el-icon><Delete /></el-icon>\n                      </el-button>\n                    </div>\n                  </div>\n                  <el-empty v-else description=\"暂无摘取的日志\" />\n                </div>\n              </el-tab-pane>\n              <el-tab-pane :label=\"`可视化 (${chartThumbnails.length})`\" name=\"charts\">\n            <div class=\"chart-thumbnails\" v-if=\"chartThumbnails.length > 0\">\n              <div class=\"thumbnail-list\">\n                <div \n                  v-for=\"chart in chartThumbnails\" \n                  :key=\"chart.id\"\n                  class=\"chart-thumbnail-item\"\n                  @click=\"showChartDetail(chart)\"\n                >\n                  <div class=\"thumbnail-title\">{{ chart.title }}</div>\n                  <div class=\"thumbnail-chart\" :id=\"`chart-thumb-${chart.id}`\"></div>\n                  <div class=\"thumbnail-info\">\n                    <div class=\"thumbnail-time\">{{ formatTimestamp(chart.timestamp) }}</div>\n                  </div>\n                  <el-button \n                    size=\"small\" \n                    text\n                    circle \n                    class=\"thumbnail-delete-btn\"\n                    @click.stop=\"deleteChartThumbnail(chart.id)\"\n                  >\n                    <el-icon><Delete /></el-icon>\n                  </el-button>\n                </div>\n              </div>\n            </div>\n                <el-empty v-else description=\"暂无可视化图表\" />\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </el-drawer>\n\n        <el-dialog v-model=\"clipboardDetailVisible\" title=\"日志摘取板\" width=\"700px\">\n          <div class=\"clipboard-detail\">\n            <el-input\n              type=\"textarea\"\n              v-model=\"clipboardContent\"\n              :autosize=\"{ minRows: 12, maxRows: 24 }\"\n              class=\"clipboard-textarea\"\n              placeholder=\"在这里编辑摘取的日志文本...\"\n            />\n          </div>\n          <template #footer>\n            <div class=\"dialog-footer\">\n              <el-button @click=\"clearClipboard\" :disabled=\"!clipboardContent\">清空</el-button>\n              <el-button type=\"primary\" @click=\"exportClipboardToTxt\" :disabled=\"!clipboardContent\">导出TXT</el-button>\n            </div>\n          </template>\n        </el-dialog>\n\n        \n\n        \n\n        <!-- 图表详情弹窗 -->\n        <el-dialog\n          v-model=\"chartDetailVisible\"\n          title=\"数据可视化图表\"\n          width=\"56%\"\n          :close-on-click-modal=\"true\"\n          @opened=\"onChartDialogOpened\"\n        >\n          <div class=\"chart-detail\">\n            <div class=\"dialog-subtitle\">{{ chartTitle }}</div>\n            <div class=\"chart-container\" ref=\"chartContainer\">\n              <TimeSeriesChart\n                v-if=\"currentChartData && Array.isArray(currentChartData.data) && currentChartData.data.length > 0\"\n                :series-data=\"currentChartData.data\"\n                :series-name=\"currentChartData.parameterValue || '数据'\"\n                :height=\"450\"\n                :show-range-labels=\"false\"\n              />\n              <div v-else style=\"width:100%;height:450px;display:flex;align-items:center;justify-content:center;color:#909399;\">暂无数据</div>\n            </div>\n          </div>\n        </el-dialog>\n      </div>\n      </el-card>\n    </div>\n\n    <!-- 高级筛选弹窗 -->\n    <el-dialog v-model=\"showAdvancedFilter\" title=\"高级筛选\" width=\"880px\">\n      <div class=\"advanced-filter\">\n        <!-- 1. 条件组（支持嵌套） -->\n        <div class=\"section\">\n          <div class=\"section-title-row\">\n            <div class=\"section-title\">1. 条件组（支持嵌套）</div>\n            <div class=\"ops-right\">\n              <el-switch\n                v-model=\"useLocalAdvanced\"\n                size=\"small\"\n                active-text=\"本地\"\n                inactive-text=\"服务端\"\n                inline-prompt\n              />\n              <el-button \n                size=\"small\" \n                type=\"danger\" \n                text \n                @click=\"clearAllConditionsOnly\" \n                :disabled=\"!filtersRoot.conditions || filtersRoot.conditions.length === 0\"\n              >清空所有条件</el-button>\n            </div>\n          </div>\n          <div class=\"expr-preview\" v-if=\"advancedExpression\" ref=\"exprPreviewRef\">\n            <span class=\"label\">表达式预览：</span>\n            <span class=\"expr\">{{ advancedExpression }}</span>\n          </div>\n          <!-- 常用搜索表达式（内嵌于条件组下，位于表达式预览下侧） -->\n          <div class=\"common-templates\" v-if=\"templates && templates.length\">\n            <div class=\"section-title\">常用搜索表达式</div>\n            <div class=\"tags-ops\">\n              <el-button size=\"small\" type=\"primary\" plain @click=\"applySelectedTemplate\" :disabled=\"!selectedTemplateName\">应用选择表达式</el-button>\n              <span class=\"hint\">选择表达式并应用，条件会自动填充进\"添加条件\"区域</span>\n            </div>\n            <div class=\"tags-wrap antd-tags single-select\">\n              <a-checkable-tag\n                v-for=\"tpl in templates\"\n                :key=\"tpl.name\"\n                :checked=\"selectedTemplateName === tpl.name\"\n                @change=\"(checked) => onTemplateSingleSelect(tpl.name, checked)\"\n                class=\"tpl-tag bordered\"\n              >\n                {{ tpl.name }}\n              </a-checkable-tag>\n            </div>\n          </div>\n          <div class=\"group-root\">\n            <div class=\"group-header\">\n              <span>根组逻辑：</span>\n              <el-radio-group v-model=\"filtersRoot.logic\">\n            <el-radio-button label=\"AND\">AND</el-radio-button>\n            <el-radio-button label=\"OR\">OR</el-radio-button>\n          </el-radio-group>\n              <div class=\"group-actions\">\n                <el-button size=\"small\" type=\"primary\" @click=\"addConditionToGroup(filtersRoot)\">添加条件</el-button>\n                <el-button size=\"small\" @click=\"addGroupToGroup(filtersRoot)\">添加子组</el-button>\n        </div>\n            </div>\n            <ConditionGroup\n              :group=\"filtersRoot\"\n              :get-operator-options=\"getOperatorOptions\"\n              :on-field-change=\"onFieldChange\"\n              :on-operator-change=\"onOperatorChange\"\n              :add-condition-to-group=\"addConditionToGroup\"\n              :add-group-to-group=\"addGroupToGroup\"\n              :remove-node-at=\"removeNodeAt\"\n              :is-root=\"true\"\n            />\n          </div>\n        </div>\n\n        <!-- 2. 导入表达式 -->\n        <div class=\"section\">\n          <div class=\"section-title\">2. 导入表达式</div>\n        <div class=\"import-row\">\n          <el-upload \n            :show-file-list=\"false\" \n            accept=\"application/json\"\n            :before-upload=\"beforeImportTemplates\"\n          >\n              <el-button size=\"small\">从文件导入(JSON)</el-button>\n          </el-upload>\n        </div>\n        </div>\n\n        \n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"showAdvancedFilter = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"applyAdvancedFilters\">应用</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 手术数据比对对话框 -->\n    <SurgeryDataCompare\n      v-model=\"showCompareDialog\"\n      :surgery-id=\"compareData.surgeryId\"\n      :existing-data=\"compareData.existingData\"\n      :new-data=\"compareData.newData\"\n      :differences=\"compareData.differences\"\n      :surgery-data=\"compareData.surgeryData\"\n      @confirmed=\"showCompareDialog = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick, h, resolveComponent, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { Search, Download, ArrowLeft, DataAnalysis, Warning, DocumentCopy, Close, View, Edit, Delete, InfoFilled } from '@element-plus/icons-vue'\nimport * as echarts from 'echarts'\nimport TimeSeriesChart from '@/components/TimeSeriesChart.vue'\nimport SurgeryDataCompare from '@/components/SurgeryDataCompare.vue'\nimport api from '@/api'\nimport { visualizeSurgery as visualizeSurgeryData } from '@/utils/visualizationHelper'\nimport { formatTime, formatTimeShort, loadServerTimezone } from '../utils/timeFormatter'\n\nexport default {\n  name: 'BatchAnalysis',\n  components: {\n    Search,\n    Download,\n    ArrowLeft,\n    DataAnalysis,\n    Warning,\n    TimeSeriesChart,\n    SurgeryDataCompare,\n    ExplanationCell: {\n      name: 'ExplanationCell',\n      props: { text: { type: String, default: '' } },\n      setup(props) {\n        // 简化：无需观察器，使用原生 title 提示，避免每格测量\n        return () => h('span', {\n          class: 'explanation-ellipsis',\n          title: props.text,\n          style: 'display:inline-block;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:14px;font-weight:500;color:#606266;'\n        }, props.text)\n      }\n    },\n    ConditionGroup: {\n      name: 'ConditionGroup',\n      props: {\n        group: { type: Object, required: true },\n        getOperatorOptions: { type: Function, required: true },\n        onFieldChange: { type: Function, required: true },\n        onOperatorChange: { type: Function, required: true },\n        addConditionToGroup: { type: Function, required: true },\n        addGroupToGroup: { type: Function, required: true },\n        removeNodeAt: { type: Function, required: true },\n        isRoot: { type: Boolean, default: false }\n      },\n      setup(props) {\n        const ElSelect = resolveComponent('el-select')\n        const ElOption = resolveComponent('el-option')\n        const ElInput = resolveComponent('el-input')\n        const ElButton = resolveComponent('el-button')\n        const ElRadioGroup = resolveComponent('el-radio-group')\n        const ElRadioButton = resolveComponent('el-radio-button')\n        const Self = resolveComponent('ConditionGroup')\n\n        const renderCondition = (node, idx, parent) => {\n          return h('div', { class: 'condition', key: idx }, [\n            h(ElSelect, {\n              modelValue: node.field,\n              style: 'width: 140px;',\n              placeholder: '字段',\n              'onUpdate:modelValue': (v) => { \n                // 确保node是一个对象，而不是原始类型\n                if (typeof node === 'object' && node !== null) {\n                  node.field = v; \n                  props.onFieldChange(node)\n                } else {\n                  // 如果node是原始类型，需要重新创建对象\n                  Object.assign(node, { field: v })\n                  props.onFieldChange(node)\n                }\n              }\n            }, {\n              default: () => [\n                h(ElOption, { label: '时间戳', value: 'timestamp' }),\n                h(ElOption, { label: '故障码', value: 'error_code' }),\n                h(ElOption, { label: '参数1', value: 'param1' }),\n                h(ElOption, { label: '参数2', value: 'param2' }),\n                h(ElOption, { label: '参数3', value: 'param3' }),\n                h(ElOption, { label: '参数4', value: 'param4' }),\n                h(ElOption, { label: '释义', value: 'explanation' })\n              ]\n            }),\n            h(ElSelect, {\n              modelValue: node.operator,\n              style: 'width: 150px; margin-left: 8px;',\n              placeholder: '操作符',\n              'onUpdate:modelValue': (v) => { \n                // 确保node是一个对象，而不是原始类型\n                if (typeof node === 'object' && node !== null) {\n                  node.operator = v; \n                  props.onOperatorChange(node)\n                } else {\n                  // 如果node是原始类型，需要重新创建对象\n                  Object.assign(node, { operator: v })\n                  props.onOperatorChange(node)\n                }\n              }\n            }, {\n              default: () => (props.getOperatorOptions(node.field) || []).map(op => h(ElOption, { label: op.label, value: op.value, key: op.value }))\n            }),\n            node.operator === 'between'\n              ? [\n                  h(ElInput, {\n                    modelValue: Array.isArray(node.value) ? node.value[0] : '',\n                    placeholder: '起',\n                    style: 'width: 140px; margin-left:8px;',\n                    'onUpdate:modelValue': (v) => { \n                      const arr = Array.isArray(node.value) ? node.value.slice(0,2) : ['', '']; \n                      arr[0] = v; \n                      node.value = arr \n                    }\n                  }),\n                  h(ElInput, {\n                    modelValue: Array.isArray(node.value) ? node.value[1] : '',\n                    placeholder: '止',\n                    style: 'width: 140px; margin-left:8px;',\n                    'onUpdate:modelValue': (v) => { \n                      const arr = Array.isArray(node.value) ? node.value.slice(0,2) : ['', '']; \n                      arr[1] = v; \n                      node.value = arr \n                    }\n                  })\n                ]\n              : h(ElInput, {\n                  modelValue: Array.isArray(node.value) ? node.value.join(',') : (node.value ?? ''),\n                  placeholder: '值',\n                  style: 'width: 300px; margin-left:8px;',\n                  'onUpdate:modelValue': (v) => { \n                    // 确保node.value是一个对象，而不是原始类型\n                    if (typeof node.value === 'object' && node.value !== null) {\n                      node.value = v\n                    } else {\n                      // 如果node.value是原始类型，需要重新创建对象\n                      Object.assign(node, { value: v })\n                    }\n                  }\n                }),\n            h(ElButton, { type: 'danger', text: true, style: 'margin-left:8px;', onClick: () => props.removeNodeAt(parent, idx) }, { default: () => '删除' })\n          ])\n        }\n\n        const renderGroup = (group, parent, depth = 0) => {\n          const children = Array.isArray(group.conditions) ? group.conditions : []\n          const style = depth > 0 ? `margin-left: ${depth * 12}px;` : ''\n          return h('div', { class: 'group-box', style }, [\n            ...children.map((node, idx) => {\n              if (node && node.field) {\n                return renderCondition(node, idx, group)\n              }\n              return h('div', { class: 'group-box', key: idx, style: `margin-left: ${(depth + 1) * 12}px;` }, [\n                h('div', { class: 'group-header nested' }, [\n                  h('span', null, '组逻辑：'),\n                  h(ElRadioGroup, {\n                    modelValue: node.logic || 'AND',\n                    'onUpdate:modelValue': (v) => { \n                      // 确保node是一个对象，而不是原始类型\n                      if (typeof node === 'object' && node !== null) {\n                        node.logic = v\n                      } else {\n                        // 如果node是原始类型，需要重新创建对象\n                        Object.assign(node, { logic: v })\n                      }\n                    }\n                  }, {\n                    default: () => [\n                      h(ElRadioButton, { label: 'AND' }, { default: () => 'AND' }),\n                      h(ElRadioButton, { label: 'OR' }, { default: () => 'OR' })\n                    ]\n                  }),\n                  h('div', { class: 'group-actions' }, [\n                    h(ElButton, { size: 'small', type: 'primary', onClick: () => props.addConditionToGroup(node) }, { default: () => '添加条件' }),\n                    h(ElButton, { size: 'small', onClick: () => props.addGroupToGroup(node) }, { default: () => '添加子组' }),\n                    h(ElButton, { size: 'small', type: 'danger', text: true, onClick: () => props.removeNodeAt(group, idx) }, { default: () => '删除组' })\n                  ])\n                ]),\n                h(Self, {\n                  group: node,\n                  getOperatorOptions: props.getOperatorOptions,\n                  onFieldChange: props.onFieldChange,\n                  onOperatorChange: props.onOperatorChange,\n                  addConditionToGroup: props.addConditionToGroup,\n                  addGroupToGroup: props.addGroupToGroup,\n                  removeNodeAt: props.removeNodeAt\n                , depth: (depth + 1) })\n              ])\n            }),\n            h('div', { class: 'group-actions' }, [\n              h(ElButton, { size: 'small', type: 'primary', onClick: () => props.addConditionToGroup(group) }, { default: () => '添加条件' }),\n              h(ElButton, { size: 'small', onClick: () => props.addGroupToGroup(group) }, { default: () => '添加子组' })\n            ])\n          ])\n        }\n\n        return () => renderGroup(props.group, props.group, 0)\n      }\n    }\n  },\n  setup() {\n    const store = useStore()\n    const route = useRoute()\n    const router = useRouter()\n    \n    const loading = ref(false)\n    const selectedLogs = ref([])\n    const batchLogEntries = ref([])\n    const searchKeyword = ref('')\n    const timeRange = ref(null)\n    const currentPage = ref(1)\n    const pageSize = ref(50)\n    const totalCount = ref(0)\n    const totalPages = ref(0)\n    // 全量时间范围（来自后端聚合），用于限制时间选择器\n    const globalMinTs = ref(null)\n    const globalMaxTs = ref(null)\n    const advancedMode = ref(false)\n    const useLocalAdvanced = ref(false)\n    \n    // 已移除虚拟化表格，使用后端分页\n    \n    // 上下文分析相关\n    const contextAnalysisVisible = ref(false)\n    const contextAnalysisRow = ref(null)\n    const beforeMinutes = ref(5)\n    const afterMinutes = ref(5)\n    const beforeSeconds = ref(0)\n    const afterSeconds = ref(0)\n\n    // 日志摘取相关\n    const clipboardVisible = ref(false)\n    const clipboardEntries = ref([])\n    const maxClipboardEntries = 50\n    const clipboardContent = ref('')\n    const clipboardDetailVisible = ref(false)\n    const sidebarActiveTab = ref('logs')\n    const clipboardCount = computed(() => {\n      if (clipboardEntries.value.length > 0) return clipboardEntries.value.length\n      if (!clipboardContent.value) return 0\n      return clipboardContent.value.split(/\\r?\\n/).filter(line => line.trim().length > 0).length\n    })\n    const fillPercent = computed(() => {\n      const cnt = clipboardCount.value\n      const pct = (cnt / maxClipboardEntries) * 100\n      return Math.max(0, Math.min(100, Math.round(pct)))\n    })\n\n    // 可视化相关\n    const parameterSelectVisible = ref(false)\n    const activeColorPopoverRowId = ref(null)\n    const activeNotesPopoverRowId = ref(null)\n    const hoveredNameRowId = ref(null)\n    const activeParamPopoverRowId = ref(null)\n    const selectedParameter = ref(null)\n    const paramNamesLoading = ref(false)\n    const availableParameters = ref([])\n    const paramAvailability = ref([false, false, false, false])\n    const paramNames = ref(['参数1', '参数2', '参数3', '参数4'])\n    const selectKey = ref(0)\n    const currentVisualizationRow = ref(null)\n    const chartDetailVisible = ref(false)\n    const chartTitle = ref('')\n    const chartContainer = ref(null)\n    const chartInstance = ref(null)\n    const chartThumbnails = ref([])\n    const currentChartData = ref(null)\n    \n    // 计数功能相关\n    const logCounts = ref({}) // 存储日志出现次数\n    const errorCodeCounts = ref({}) // 存储故障码出现次数\n    const globalErrorCodeCounts = ref({}) // 存储全局故障码统计（无筛选条件）\n    const filteredErrorCodeCounts = ref({}) // 存储筛选条件下的故障码统计\n    const statisticsCache = ref({}) // 统计缓存，避免重复请求\n    // 基于当前筛选条件构建统计缓存键，确保显示与当前条件一致的统计\n    const currentStatisticsKey = computed(() => {\n      const logIds = selectedLogs.value.map(l => l.id).join(',')\n      const params = { log_ids: logIds }\n      if (advancedMode.value && leafConditionCount.value > 0) {\n        const filtersPayload = buildFiltersPayload()\n        if (filtersPayload) params.filters = JSON.stringify(filtersPayload)\n      }\n      if (timeRange.value && timeRange.value.length === 2) {\n        params.start_time = timeRange.value[0]\n        params.end_time = timeRange.value[1]\n      }\n      if (searchKeyword.value) {\n        params.search = searchKeyword.value\n      }\n      try {\n        return JSON.stringify(params)\n      } catch (_) {\n        return ''\n      }\n    })\n    const showStatisticsForErrorCode = ref(null) // 控制显示哪个故障码的统计\n    \n    // 从后端获取全局统计信息（无筛选条件）\n    const fetchGlobalStatistics = async () => {\n      try {\n        const params = {\n          log_ids: selectedLogs.value.map(l => l.id).join(',')\n        }\n        \n        console.log('获取全局统计信息，参数:', params)\n        const response = await api.logs.getStatistics(params)\n        \n        if (response.data.success) {\n          globalErrorCodeCounts.value = response.data.errorCodeCounts || {}\n          \n          // 存储到sessionStorage\n          try {\n            sessionStorage.setItem('globalErrorCodeCounts', JSON.stringify(globalErrorCodeCounts.value))\n            sessionStorage.setItem('globalStatisticsTimestamp', Date.now().toString())\n          } catch (error) {\n            console.warn('存储全局统计信息失败:', error)\n          }\n          \n          console.log('全局统计信息获取成功:', {\n            globalErrorCodeCounts: Object.keys(globalErrorCodeCounts.value).length,\n            sample: Object.keys(globalErrorCodeCounts.value).slice(0, 3)\n          })\n        } else {\n          console.warn('全局统计API返回失败:', response.data)\n        }\n      } catch (error) {\n        console.error('获取全局统计信息失败:', error)\n        globalErrorCodeCounts.value = {}\n      }\n    }\n\n    // 从后端获取筛选条件下的统计信息\n    const fetchFilteredStatistics = async () => {\n      try {\n        // 构建查询参数，与loadBatchLogEntries完全一致\n        const logIds = selectedLogs.value.map(l => l.id).join(',')\n        const params = {\n          log_ids: logIds\n        }\n        \n        // 添加高级筛选条件（与loadBatchLogEntries保持一致）\n        if (advancedMode.value && leafConditionCount.value > 0) {\n          const filtersPayload = buildFiltersPayload()\n          if (filtersPayload) {\n            params.filters = JSON.stringify(filtersPayload)\n          }\n        }\n        \n        // 添加时间范围筛选（与loadBatchLogEntries保持一致）\n        if (timeRange.value && timeRange.value.length === 2) {\n          params.start_time = timeRange.value[0]\n          params.end_time = timeRange.value[1]\n        }\n        \n        // 添加关键词搜索（与loadBatchLogEntries保持一致）\n        if (searchKeyword.value) {\n          params.search = searchKeyword.value\n        }\n        \n        // 生成缓存键\n        const cacheKey = JSON.stringify(params)\n        \n        // 检查缓存\n        if (statisticsCache.value[cacheKey]) {\n          filteredErrorCodeCounts.value = statisticsCache.value[cacheKey]\n          return\n        }\n        \n        \n        const response = await api.logs.getStatistics(params)\n        \n        if (response.data.success) {\n          const newFilteredCounts = response.data.errorCodeCounts || {}\n          filteredErrorCodeCounts.value = newFilteredCounts\n          \n          // 更新缓存\n          statisticsCache.value[cacheKey] = newFilteredCounts\n          \n          // 存储到sessionStorage\n          try {\n            sessionStorage.setItem('filteredErrorCodeCounts', JSON.stringify(newFilteredCounts))\n            sessionStorage.setItem('filteredStatisticsTimestamp', Date.now().toString())\n            sessionStorage.setItem('statisticsCache', JSON.stringify(statisticsCache.value))\n            sessionStorage.setItem('currentStatisticsKey', cacheKey)\n          } catch (error) {\n            console.warn('存储筛选统计信息失败:', error)\n          }\n          \n          \n          \n        } else {\n          console.warn('筛选统计API返回失败:', response.data)\n        }\n      } catch (error) {\n        console.error('获取筛选统计信息失败:', error)\n        filteredErrorCodeCounts.value = {}\n      }\n    }\n\n    // 兼容性函数：保持原有接口\n    const fetchStatisticsFromBackend = async () => {\n      await fetchFilteredStatistics()\n      // 为了兼容性，同时更新原有的变量\n      errorCodeCounts.value = filteredErrorCodeCounts.value\n      logCounts.value = filteredErrorCodeCounts.value\n    }\n    \n    \n    \n    // 获取故障码出现次数（支持全局和筛选条件统计）\n    const getErrorCodeCount = (errorCode, useGlobal = false) => {\n      if (useGlobal) {\n        return globalErrorCodeCounts.value[errorCode] || 0\n      }\n      // 当存在筛选条件时，优先使用与当前条件匹配的缓存项，避免显示过期/全局统计\n      const key = currentStatisticsKey.value\n      const source = (key && statisticsCache.value[key])\n        ? statisticsCache.value[key]\n        : filteredErrorCodeCounts.value\n      return (source && source[errorCode]) ? source[errorCode] : 0\n    }\n    \n\n    // 获取故障码统计显示文本\n    const getErrorCodeCountDisplay = (errorCode) => {\n      const globalCount = getErrorCodeCount(errorCode, true)\n      const filteredCount = getErrorCodeCount(errorCode, false)\n      \n      // 如果没有筛选条件，显示全局统计\n      if (!hasActiveFilters.value) {\n        return globalCount > 0 ? globalCount.toString() : ''\n      }\n      \n      // 有筛选条件时，显示筛选条件下的统计\n      return filteredCount > 0 ? filteredCount.toString() : ''\n    }\n\n    // 检查是否有活跃的筛选条件\n    const hasActiveFilters = computed(() => {\n      const hasSearch = !!searchKeyword.value\n      const hasAdvancedConditions = leafConditionCount.value > 0\n      \n      // 检查时间范围是否是用户主动设置的（而不是系统自动设置的完整范围）\n      const hasUserTimeRange = !!(timeRange.value && timeRange.value.length === 2 && \n        timeRangeLimit.value && \n        (timeRange.value[0] !== formatTimestamp(timeRangeLimit.value[0]) || \n         timeRange.value[1] !== formatTimestamp(timeRangeLimit.value[1])))\n      \n      return !!(hasSearch || hasUserTimeRange || hasAdvancedConditions)\n    })\n    \n    // 从sessionStorage加载计数数据\n    const loadCountsFromStorage = () => {\n      try {\n        // 加载全局统计\n        const globalErrorCodeCountsData = sessionStorage.getItem('globalErrorCodeCounts')\n        if (globalErrorCodeCountsData) {\n          globalErrorCodeCounts.value = JSON.parse(globalErrorCodeCountsData)\n        }\n        \n        // 加载统计缓存\n        const statisticsCacheData = sessionStorage.getItem('statisticsCache')\n        if (statisticsCacheData) {\n          statisticsCache.value = JSON.parse(statisticsCacheData)\n        }\n        // 仅当缓存键与当前筛选键一致时，才回填筛选统计，避免显示错误的（例如全局）结果\n        const storedKey = sessionStorage.getItem('currentStatisticsKey')\n        if (storedKey && storedKey === currentStatisticsKey.value) {\n          const filteredErrorCodeCountsData = sessionStorage.getItem('filteredErrorCodeCounts')\n          if (filteredErrorCodeCountsData) {\n            filteredErrorCodeCounts.value = JSON.parse(filteredErrorCodeCountsData)\n          }\n        } else {\n          filteredErrorCodeCounts.value = {}\n        }\n        \n        // 兼容性：加载原有数据\n        const logCountsData = sessionStorage.getItem('logCounts')\n        if (logCountsData) {\n          logCounts.value = JSON.parse(logCountsData)\n        }\n        \n        const errorCodeCountsData = sessionStorage.getItem('errorCodeCounts')\n        if (errorCodeCountsData) {\n          errorCodeCounts.value = JSON.parse(errorCodeCountsData)\n        }\n        \n        console.log('从sessionStorage加载统计数据成功:', {\n          globalCount: Object.keys(globalErrorCodeCounts.value).length,\n          filteredCount: Object.keys(filteredErrorCodeCounts.value).length,\n          cacheCount: Object.keys(statisticsCache.value).length\n        })\n      } catch (error) {\n        console.warn('加载计数数据失败:', error)\n      }\n    }\n    \n    \n\n    // 切换故障码统计显示\n    const toggleErrorCodeStatistics = async (errorCode) => {\n      if (showStatisticsForErrorCode.value === errorCode) {\n        // 如果点击的是当前显示的故障码，则隐藏\n        showStatisticsForErrorCode.value = null\n      } else {\n        // 显示新的故障码统计\n        showStatisticsForErrorCode.value = errorCode\n        \n        // 如果有筛选条件，确保使用最新的筛选统计\n        if (hasActiveFilters.value) {\n          console.log('有筛选条件，重新获取筛选统计...')\n          await fetchFilteredStatistics()\n        }\n      }\n    }\n\n    // 显示故障码统计信息（用于消息提示）\n    const showErrorCodeStatistics = (errorCode) => {\n      const globalCount = getErrorCodeCount(errorCode, true)\n      const filteredCount = getErrorCodeCount(errorCode, false)\n      \n      let message = `故障码 ${errorCode} 统计信息：\\n`\n      message += `全局出现次数：${globalCount}\\n`\n      \n      if (hasActiveFilters.value) {\n        message += `筛选条件下出现次数：${filteredCount}`\n      } else {\n        message += `当前无筛选条件，显示全局统计`\n      }\n      \n      ElMessage.info({\n        message: message,\n        duration: 3000,\n        showClose: true\n      })\n    }\n\n    // 获取故障码统计提示信息\n    const getErrorCodeStatisticsTooltip = (errorCode) => {\n      const globalCount = getErrorCodeCount(errorCode, true)\n      const filteredCount = getErrorCodeCount(errorCode, false)\n      \n      if (hasActiveFilters.value) {\n        return `全局：${globalCount} 次，筛选后：${filteredCount} 次`\n      } else {\n        return `全局出现 ${globalCount} 次`\n      }\n    }\n    \n    // 颜色选项：红、黄、蓝、绿\n    const colorOptions = ref([\n      { value: '#D7BDE2', label: '红色' },\n      { value: '#D1F2EB', label: '黄色' },\n      { value: '#FCF3CF', label: '蓝色' },\n      { value: '#d6eaf8', label: '绿色' },\n      { value: null, label: '无' }\n    ])\n    // 表格列配置（仅用于传统表格）\n    const tableColumns = ref([\n      { prop: 'color_mark', label: '标记' },\n      { prop: 'file_info', label: '时间戳/文件名' },\n      { prop: 'error_code', label: '故障码' },\n      { prop: 'explanation', label: '释义' },\n      { prop: 'parameters', label: '参数(1~4)' },\n      { prop: 'operations', label: '操作' }\n    ])\n\n    // 高级筛选弹窗与条件\n    const showAdvancedFilter = ref(false)\n    const filtersRoot = ref({ logic: 'AND', conditions: [] })\n    \n    // 手术统计相关\n    const surgeryStatisticsVisible = ref(false)\n    const surgeryData = ref(null)\n    const analyzing = ref(false)\n    const templates = ref([])\n    const selectedTemplateName = ref('')\n    const importExpressionText = ref('')\n\n    // 搜索表达式（显示在搜索卡片中）\n    const groupToString = (node) => {\n      if (!node) return ''\n      // 叶子条件\n      if (node.field && node.operator) {\n        const val = Array.isArray(node.value) ? node.value.join(',') : (node.value ?? '')\n        return `${node.field} ${node.operator} ${val}`\n      }\n      // 分组：始终使用括号包裹，不再在前缀标注逻辑 [AND]/[OR]\n      if (Array.isArray(node.conditions)) {\n        const logic = node.logic || 'AND'\n        const inner = node.conditions\n          .map(child => groupToString(child))\n          .filter(Boolean)\n          .join(` ${logic} `)\n        if (!inner) return ''\n        // 根组与子组均仅使用括号包裹，逻辑通过括号内部的连接词体现\n        if (node === filtersRoot.value) {\n          return `(${inner})`\n        }\n        return `(${inner})`\n      }\n      return ''\n    }\n    const searchExpression = computed(() => {\n      const segments = []\n      if (timeRange.value && timeRange.value.length === 2) {\n        const [start, end] = timeRange.value\n        segments.push(`时间: ${formatTimestamp(start)} ~ ${formatTimestamp(end)}`)\n      }\n      if (searchKeyword.value) {\n        segments.push(`关键字(全部): ${searchKeyword.value}`)\n      }\n      const adv = groupToString(filtersRoot.value)\n      if (adv) segments.push(`${adv}`)\n      // 用 AND 串联，直观体现与关系\n      return segments.join(' AND ')\n    })\n\n    // 仅用于高级筛选弹窗内部的表达式展示，不在这里加\"时间/关键字\"前缀\n    const advancedExpression = computed(() => {\n      const adv = groupToString(filtersRoot.value)\n      return adv || ''\n    })\n\n    const countLeafConditions = (node) => {\n      if (!node) return 0\n      if (node.field && node.operator) return 1\n      if (Array.isArray(node.conditions)) return node.conditions.reduce((acc, n) => acc + countLeafConditions(n), 0)\n      return 0\n    }\n    const leafConditionCount = computed(() => countLeafConditions(filtersRoot.value))\n\n    // 过滤后的条目（后端分页，前端只做简单过滤）\n    const filteredEntries = computed(() => {\n      const list = Array.isArray(batchLogEntries.value) ? batchLogEntries.value : []\n      let entries = list\n\n      // 本地高级筛选（仅在本地模式下）\n      if (advancedMode.value && useLocalAdvanced.value && leafConditionCount.value > 0) {\n        entries = entries.filter(e => evaluateAdvanced(e))\n      }\n\n      return entries\n    })\n\n    const batchCount = computed(() => Array.isArray(batchLogEntries.value) ? batchLogEntries.value.length : 0)\n    const selectedLogsCount = computed(() => Array.isArray(selectedLogs.value) ? selectedLogs.value.length : 0)\n    const filteredCount = computed(() => totalCount.value)\n\n    // 计算时间范围限制（取已加载条目中的最早与最晚）\n    const timeRangeLimit = computed(() => {\n      // 优先使用后端聚合范围\n      if (globalMinTs.value && globalMaxTs.value) {\n        const min = new Date(globalMinTs.value)\n        const max = new Date(globalMaxTs.value)\n        if (!Number.isNaN(min.getTime()) && !Number.isNaN(max.getTime())) {\n          return [min, max]\n        }\n      }\n      // 回退：使用当前已加载页的条目范围\n      const entries = batchLogEntries.value\n      if (!entries || entries.length === 0) return null\n      const times = entries\n        .map(e => new Date(e.timestamp))\n        .filter(d => !isNaN(d))\n      if (times.length === 0) return null\n      const min = new Date(Math.min(...times))\n      const max = new Date(Math.max(...times))\n      return [min, max]\n    })\n\n    // 分页后的条目（后端分页，直接使用当前页数据）\n    const paginatedEntries = computed(() => {\n      return filteredEntries.value\n    })\n\n    // 从路由参数获取选中的日志\n    const loadSelectedLogs = async () => {\n      // 支持多种来源：params.logIds / query.logIds / params.id / query.id\n      const fromParamsLogIds = route.params?.logIds\n      const fromQueryLogIds = route.query?.logIds\n      const singleIdParam = route.params?.id\n      const singleIdQuery = route.query?.id\n\n      let idsStr = fromParamsLogIds || fromQueryLogIds || singleIdParam || singleIdQuery\n      if (!idsStr) return\n\n      const ids = String(idsStr)\n        .split(',')\n        .map(id => parseInt(id))\n        .filter(n => !Number.isNaN(n))\n\n      if (ids.length === 0) return\n\n      try {\n        // 从API获取所有日志信息\n        const response = await store.dispatch('logs/fetchLogs', { page: 1, limit: 1000 })\n        const allLogs = response.data.logs\n        selectedLogs.value = allLogs.filter(log => ids.includes(log.id))\n      } catch (error) {\n        ElMessage.error('获取日志信息失败')\n      }\n    }\n\n    // 加载批量日志条目（后端分页）\n    const loadBatchLogEntries = async (page = 1, resetData = false, signal = null) => {\n      // 如果没有选中的日志，直接返回\n      if (selectedLogs.value.length === 0) {\n        return\n      }\n      \n      try {\n        loading.value = true\n        \n        // 重置数据或初始化\n        if (resetData) {\n          batchLogEntries.value = []\n          currentPage.value = page\n        }\n        \n        // 构建查询参数\n        const logIds = selectedLogs.value.map(l => l.id).join(',')\n        const baseParams = {\n          log_ids: logIds,\n          page,\n          limit: pageSize.value\n        }\n        \n        // 添加高级筛选条件\n        if (advancedMode.value && leafConditionCount.value > 0) {\n          const filtersPayload = buildFiltersPayload()\n          if (filtersPayload) {\n            baseParams.filters = JSON.stringify(filtersPayload)\n          }\n        }\n        \n        // 添加时间范围筛选\n        if (timeRange.value && timeRange.value.length === 2) {\n          baseParams.start_time = timeRange.value[0]\n          baseParams.end_time = timeRange.value[1]\n        }\n        \n        // 添加关键词搜索\n        if (searchKeyword.value) {\n          baseParams.search = searchKeyword.value\n        }\n        \n        // 调用后端分页接口，支持请求取消\n        const response = await store.dispatch('logs/fetchBatchLogEntries', baseParams, signal)\n        const { entries, total, totalPages: serverTotalPages, page: serverPage, minTimestamp, maxTimestamp } = response.data\n        \n        // 在首次加载或重置数据时，获取统计信息\n        if (resetData && page === 1) {\n          // 并行获取全局统计和筛选统计\n          const statsPromises = []\n          \n          // 获取全局统计（仅在首次加载时）\n          if (Object.keys(globalErrorCodeCounts.value).length === 0) {\n            statsPromises.push(fetchGlobalStatistics())\n          }\n          \n          // 获取筛选统计\n          statsPromises.push(fetchFilteredStatistics())\n          \n          // 等待统计完成（不阻塞数据加载）\n          Promise.all(statsPromises).catch(error => {\n            console.warn('获取统计信息失败:', error)\n          })\n        }\n        \n        // 处理返回的数据\n        const idToName = new Map(selectedLogs.value.map(l => [l.id, l.original_name]))\n        const processedEntries = entries.map(entry => {\n          const tsText = formatTimestamp(entry.timestamp)\n          const displayParams = [entry.param1, entry.param2, entry.param3, entry.param4].filter(p => p)\n          return {\n            ...entry,\n            log_name: idToName.get(entry.log_id) || '',\n            color_mark: entry.color_mark || null,\n            remarks: entry.remarks || '',\n            timestamp_text: tsText,\n            display_params: displayParams\n          }\n        })\n        \n        // 更新数据\n        if (resetData) {\n          batchLogEntries.value = processedEntries\n        } else {\n          // 追加数据（用于虚拟滚动）\n          batchLogEntries.value.push(...processedEntries)\n        }\n        \n        // 加载保存的颜色标记\n        loadColorMarksFromStorage()\n        // 加载备注\n        loadRemarksFromStorage()\n        \n        // 更新分页信息\n        totalCount.value = total\n        totalPages.value = serverTotalPages\n        if (typeof serverPage === 'number' && !Number.isNaN(serverPage)) {\n          currentPage.value = serverPage\n        }\n\n        // 更新时间范围限制（以后端返回的整体范围为准）\n        if (minTimestamp && maxTimestamp) {\n          // 确保是 Date 对象\n          const min = new Date(minTimestamp)\n          const max = new Date(maxTimestamp)\n          if (!Number.isNaN(min.getTime()) && !Number.isNaN(max.getTime())) {\n            globalMinTs.value = min\n            globalMaxTs.value = max\n            // 仅当当前 timeRange 超出范围或尚未设置时才回填\n            const needInit = !timeRange.value || timeRange.value.length !== 2\n            const [curStart, curEnd] = needInit ? [null, null] : timeRange.value\n            const curStartDate = curStart ? new Date(curStart) : null\n            const curEndDate = curEnd ? new Date(curEnd) : null\n            const outOfRange = !curStartDate || !curEndDate || curStartDate < min || curEndDate > max\n            if (needInit || outOfRange) {\n              timeRange.value = [\n                formatTimestamp(min),\n                formatTimestamp(max)\n              ]\n            }\n          }\n        }\n        \n        // 翻页/加载完成时不显示全量数量提示，避免频繁打扰\n        \n      } catch (error) {\n        ElMessage.error('批量分析失败: ' + (error.response?.data?.message || error.message))\n      } finally {\n        loading.value = false\n        // 获取统计信息（优先使用后端，失败时使用前端计算）\n        if (batchLogEntries.value.length > 0) {\n          await fetchStatisticsFromBackend()\n        }\n      }\n    }\n\n    // 搜索输入状态：中文输入法组合中不触发\n    const isComposing = ref(false)\n    const onCompositionStart = () => { isComposing.value = true }\n    const onCompositionEnd = () => { \n      isComposing.value = false \n      // 组合结束后再触发一次\n      debouncedSearch()\n    }\n\n    // 增强的防抖机制\n    let searchTimer = null\n    let searchAbortController = null\n    \n    const debouncedSearch = () => {\n      if (isComposing.value) return\n      \n      // 取消之前的请求\n      if (searchAbortController) {\n        searchAbortController.abort()\n      }\n      \n      // 清除之前的定时器\n      if (searchTimer) {\n        clearTimeout(searchTimer)\n      }\n      \n      // 创建新的 AbortController\n      searchAbortController = new AbortController()\n      \n      // 智能防抖：根据搜索复杂度调整延迟时间\n      const delay = calculateSearchDelay()\n      \n      searchTimer = setTimeout(async () => {\n        if (!isComposing.value) {\n          currentPage.value = 1\n          await loadBatchLogEntries(1, true, searchAbortController.signal)\n          // 更新筛选条件下的统计信息\n          await fetchFilteredStatistics()\n        }\n      }, delay)\n    }\n    \n    // 计算搜索延迟时间\n    const calculateSearchDelay = () => {\n      let baseDelay = 300 // 基础延迟300ms\n      \n      // 根据搜索条件复杂度调整延迟\n      if (advancedMode.value && leafConditionCount.value > 0) {\n        baseDelay += leafConditionCount.value * 100 // 每个高级条件增加100ms\n      }\n      \n      if (timeRange.value && timeRange.value.length === 2) {\n        baseDelay += 200 // 时间范围筛选增加200ms\n      }\n      \n      if (searchKeyword.value && searchKeyword.value.length > 10) {\n        baseDelay += 150 // 长关键词增加150ms\n      }\n      \n      // 最大延迟不超过1秒\n      return Math.min(baseDelay, 1000)\n    }\n\n    // 供输入框 @input 调用\n    const handleSearch = () => {\n      debouncedSearch()\n    }\n\n    const handleQuery = async () => {\n      // 取消之前的请求\n      if (searchAbortController) {\n        searchAbortController.abort()\n      }\n      \n      currentPage.value = 1\n      await loadBatchLogEntries(1, true)\n      // 更新筛选条件下的统计信息\n      await fetchFilteredStatistics()\n    }\n\n    // 时间范围变化处理\n    const handleTimeRangeChange = async () => {\n      // 越界纠正\n      if (timeRangeLimit.value && timeRange.value && timeRange.value.length === 2) {\n        const [min, max] = timeRangeLimit.value\n        let [start, end] = timeRange.value\n        const s = new Date(start)\n        const e = new Date(end)\n        let changed = false\n        if (s < min) { start = min; changed = true }\n        if (e > max) { end = max; changed = true }\n        if (changed) timeRange.value = [formatTimestamp(start), formatTimestamp(end)]\n      }\n      \n      // 取消之前的请求\n      if (searchAbortController) {\n        searchAbortController.abort()\n      }\n      \n      currentPage.value = 1\n      await loadBatchLogEntries(1, true)\n      \n      // 获取筛选统计\n      await fetchFilteredStatistics()\n    }\n\n    // 清除筛选\n    const clearFilters = async () => {\n      // 取消之前的请求\n      if (searchAbortController) {\n        searchAbortController.abort()\n      }\n      \n      searchKeyword.value = ''\n      timeRange.value = null\n      filtersRoot.value = { logic: 'AND', conditions: [] }\n      advancedMode.value = false\n      currentPage.value = 1\n      // 立即重新加载，显示全部条目\n      await loadBatchLogEntries(1, true)\n      // 清除筛选后，重新获取全局统计\n      await fetchGlobalStatistics()\n    }\n\n    // 仅清空高级条件，不影响其他筛选（供弹窗内一键清空使用）\n    const clearAllConditionsOnly = () => {\n      filtersRoot.value = { logic: 'AND', conditions: [] }\n      // 清空后自动重新搜索\n      debouncedSearch()\n    }\n\n    // 禁用超出范围的日期\n    const startOfDay = (d) => new Date(d.getFullYear(), d.getMonth(), d.getDate())\n    const endOfDay = (d) => new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59, 999)\n    const disableOutOfRangeDates = (date) => {\n      if (!timeRangeLimit.value || !date) return false\n      const [min, max] = timeRangeLimit.value\n      return date < startOfDay(new Date(min)) || date > endOfDay(new Date(max))\n    }\n\n    // 打开面板时默认展示的页（左右两侧月份/日期依据最小、最大值）\n    const defaultPickerRange = computed(() => {\n      if (!timeRangeLimit.value) return null\n      return [timeRangeLimit.value[0], timeRangeLimit.value[1]]\n    })\n\n    // 导出CSV（直接导航下载，避免大Blob占用内存）\n    const exportToCSV = async () => {\n      try {\n        const token = store.state.auth?.token\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        const logIds = selectedLogs.value.map(l => l.id).join(',')\n        const params = new URLSearchParams()\n        if (logIds) params.set('log_ids', logIds)\n        if (advancedMode.value && leafConditionCount.value > 0) {\n          const filtersPayload = buildFiltersPayload()\n          if (filtersPayload) params.set('filters', JSON.stringify(filtersPayload))\n        }\n        if (timeRange.value && timeRange.value.length === 2) {\n          params.set('start_time', timeRange.value[0])\n          params.set('end_time', timeRange.value[1])\n        }\n        if (searchKeyword.value) params.set('search', searchKeyword.value)\n        // 携带token到query，后端GET支持query token认证\n        params.set('token', token)\n        const base = '/api/logs/entries/export'\n        const url = `${base}?${params.toString()}`\n        // 新开标签下载，避免阻断当前页面\n        window.open(url, '_blank')\n      } catch (error) {\n        ElMessage.error('导出CSV失败: ' + (error?.response?.data?.message || error?.message || '未知错误'))\n      }\n    }\n\n    // 分页处理\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      loadBatchLogEntries(1, true)\n    }\n\n    const handleCurrentChange = async (page) => {\n      currentPage.value = page\n      // 手动分页不自动累加，直接替换为当前页数据\n      await loadBatchLogEntries(page, true)\n    }\n    \n    // 虚拟滚动加载更多数据\n    const handleLoadMore = async () => {\n      if (!allowAutoLoad.value) return\n      // 如果还有更多数据，加载下一页\n      if (currentPage.value < totalPages.value && !loading.value) {\n        currentPage.value++\n        await loadBatchLogEntries(currentPage.value, false)\n      }\n    }\n\n    // 表格分页/排序等交互后，强制触发一次重测量以保证 tooltip 判断正确\n    const forceRelayout = () => {\n      // 通过下一个 tick 触发组件中的 ResizeObserver/测量逻辑生效\n      // 这里不直接操作 DOM，由子组件在 mouseenter 与 observer 中测量\n    }\n\n    // 格式化时间戳\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      if (serverOffsetMinutes.value !== null) {\n        // 以服务端时区为准：将本地时间偏移到服务端偏移\n        const localOffset = -date.getTimezoneOffset()\n        const delta = (serverOffsetMinutes.value - localOffset) * 60 * 1000\n        date.setTime(date.getTime() + delta)\n      }\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    // 读取服务端时区偏移（分钟），统一前端显示\n    const serverOffsetMinutes = ref(null)\n    const loadServerTimezone = async () => {\n      try {\n        const resp = await fetch('/api/timezone')\n        const json = await resp.json()\n        if (typeof json.offsetMinutes === 'number') serverOffsetMinutes.value = json.offsetMinutes\n      } catch (_) {\n        serverOffsetMinutes.value = null\n      }\n    }\n\n    // 智能时间戳格式化函数\n    const getSmartTimeFormatter = (data) => {\n      if (!data || data.length < 2) return formatTimestamp\n      \n      const startTime = new Date(data[0][0])\n      const endTime = new Date(data[data.length - 1][0])\n      const timeSpan = endTime.getTime() - startTime.getTime()\n      \n      // 跨度 < 1 分钟时，显示 HH:mm:ss\n      if (timeSpan < 60 * 1000) {\n        return (timestamp) => {\n          const date = new Date(timestamp)\n          const hours = String(date.getHours()).padStart(2, '0')\n          const minutes = String(date.getMinutes()).padStart(2, '0')\n          const seconds = String(date.getSeconds()).padStart(2, '0')\n          return `${hours}:${minutes}:${seconds}`\n        }\n      }\n      // 跨度 > 1 天时，显示 MM-dd\n      else if (timeSpan > 24 * 60 * 60 * 1000) {\n        return (timestamp) => {\n          const date = new Date(timestamp)\n          const month = String(date.getMonth() + 1).padStart(2, '0')\n          const day = String(date.getDate()).padStart(2, '0')\n          return `${month}-${day}`\n        }\n      }\n      // 跨度 > 1 小时时，显示 HH:mm 或 MM-dd HH:mm\n      else if (timeSpan > 60 * 60 * 1000) {\n        return (timestamp) => {\n          const date = new Date(timestamp)\n          const month = String(date.getMonth() + 1).padStart(2, '0')\n          const day = String(date.getDate()).padStart(2, '0')\n          const hours = String(date.getHours()).padStart(2, '0')\n          const minutes = String(date.getMinutes()).padStart(2, '0')\n          return `${month}-${day} ${hours}:${minutes}`\n        }\n      }\n      // 默认显示完整时间戳\n      else {\n        return formatTimestamp\n      }\n    }\n\n    // 格式化文件大小\n    const formatFileSize = (bytes) => {\n      if (!bytes || bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    // 无\n\n    // 跳转到手术统计页面\n    const showSurgeryStatistics = async () => {\n      // 需要具备手术分析权限（管理员、专家）\n      if (!store.getters['auth/hasPermission']?.('surgery:analyze')) {\n        ElMessage.warning('权限不足：需要手术分析权限')\n        return\n      }\n      // 确保有已排序的日志条目数据\n      if (batchLogEntries.value.length === 0) {\n        ElMessage.warning('请先加载日志条目数据')\n        return\n      }\n      \n      try {\n        showSurgeryStatsDialog.value = true\n        surgeryStatsLoading.value = true\n      const logIds = selectedLogs.value.map(log => log.id)\n        const resp = await api.surgeryStatistics.analyzeByLogIds(logIds, true)\n\n        if (resp.data?.taskId) {\n          const taskId = resp.data.taskId\n          let attempts = 0\n          const maxAttempts = 30 // 最多轮询30秒\n          while (attempts < maxAttempts) {\n            try {\n              const status = await api.surgeryStatistics.getAnalysisTaskStatus(taskId)\n              const result = status.data?.data?.result\n              if (Array.isArray(result)) {\n                surgeryStats.value = result\n                break\n              }\n            } catch (_) {\n              // 忽略单次失败继续轮询\n            }\n            await new Promise(r => setTimeout(r, 1000))\n            attempts++\n          }\n          if (!Array.isArray(surgeryStats.value) || surgeryStats.value.length === 0) {\n            ElMessage.warning('未获取到手术统计结果，请稍后重试')\n          }\n        } else {\n          // 兼容旧版直接返回数据的情况\n          surgeryStats.value = resp.data?.data || []\n        }\n      } catch (e) {\n        ElMessage.error('手术统计失败')\n      } finally {\n        surgeryStatsLoading.value = false\n      }\n    }\n\n    // 模板相关\n    const loadTemplates = async () => {\n      try {\n        const res = await api.logs.getSearchTemplates()\n        templates.value = res.data.templates || []\n      } catch {}\n    }\n\n    // 手术统计（仅列表显示）\n    const showSurgeryStatsDialog = ref(false)\n    const surgeryStatsLoading = ref(false)\n    const surgeryStats = ref([])\n    const exportingRow = ref({})\n    const surgeryJsonDialogVisible = ref(false)\n    const surgeryJsonText = ref('')\n    const showCompareDialog = ref(false)\n    const compareData = ref({})\n\n    // 权限检查\n    const hasExportPermission = computed(() => store.getters['auth/hasPermission']?.('surgery:export'))\n\n    const visualizeSurgeryStat = (row) => {\n      // 使用统一的可视化函数\n      visualizeSurgeryData(row)\n    }\n\n    const previewSurgeryData = (row) => {\n      // 显示准备写入PostgreSQL的格式数据\n      // 优先使用 postgresql_row_preview，如果没有则使用当前行的数据（已经是PostgreSQL格式）\n      const data = row?.postgresql_row_preview || row\n      surgeryJsonText.value = JSON.stringify(data, null, 2)\n      surgeryJsonDialogVisible.value = true\n    }\n\n    const exportSurgeryRow = async (row) => {\n      if (!store.getters['auth/hasPermission']?.('surgery:export')) return\n      try {\n        exportingRow.value[row.id] = true\n        \n        // 直接传递完整的手术数据到后端\n        const response = await api.surgeryStatistics.exportSingleSurgeryData(row)\n        \n        if (response.data.success) {\n          ElMessage.success('手术数据已成功导出到PostgreSQL数据库')\n        } else if (response.data.needsConfirmation) {\n          // 需要用户确认覆盖\n          showCompareDialog.value = true\n          compareData.value = {\n            surgeryId: response.data.surgery_id,\n            existingData: response.data.existingData,\n            newData: response.data.newData,\n            differences: response.data.differences,\n            surgeryData: row\n          }\n        } else {\n          ElMessage.warning(response.data.message || '导出完成，但可能未存储到数据库')\n        }\n      } catch (e) {\n        console.error('导出到PostgreSQL失败:', e)\n        ElMessage.error('导出到PostgreSQL数据库失败: ' + (e.response?.data?.message || e.message))\n      } finally {\n        exportingRow.value[row.id] = false\n      }\n    }\n\n    const applyTemplateByName = (name) => {\n      const tpl = templates.value.find(t => t.name === name)\n      if (!tpl) return\n      // 覆盖当前高级条件\n      filtersRoot.value = {\n        logic: tpl.filters?.logic || 'AND',\n        conditions: Array.isArray(tpl.filters?.conditions) ? [...tpl.filters.conditions] : []\n      }\n      // 不立即执行，用户可继续编辑\n    }\n\n    const beforeImportTemplates = async (file) => {\n      try {\n        const text = await file.text()\n        const json = JSON.parse(text)\n        // 不保存为常用模板，仅解析并填充到\"添加条件\"区域\n        let logic = 'AND'\n        let conditions = []\n        if (json && (Array.isArray(json.conditions) || Array.isArray(json.filters?.conditions))) {\n          logic = json.logic || json.filters?.logic || 'AND'\n          conditions = Array.isArray(json.conditions) ? json.conditions : (json.filters?.conditions || [])\n        } else if (Array.isArray(json.templates) && json.templates.length > 0) {\n          const first = json.templates[0]\n          logic = first?.filters?.logic || 'AND'\n          conditions = Array.isArray(first?.filters?.conditions) ? first.filters.conditions : []\n        }\n        if (conditions.length > 0) {\n          filtersRoot.value = { logic, conditions: [...conditions] }\n          ElMessage.success('已从文件填充到高级条件')\n        } else {\n          ElMessage.warning('未识别到可用的表达式内容')\n        }\n      } catch (e) {\n        ElMessage.error('解析失败：' + e.message)\n      }\n      return false\n    }\n\n    // AntD CheckableTag 单选模板处理\n    const onTemplateSingleSelect = (name, checked) => {\n      selectedTemplateName.value = checked ? name : ''\n    }\n\n    const numericFields = new Set(['param1', 'param2', 'param3', 'param4'])\n    const normalizeValue = (field, operator, value) => {\n      const op = String(operator || '').toLowerCase()\n      const isNumeric = numericFields.has(field)\n      \n      // 处理空值\n      if (value === undefined || value === null || value === '') {\n        return null\n      }\n      \n      if (op === 'between' || op === 'notbetween') {\n        const arr = Array.isArray(value) ? value : String(value).split(',')\n        if (arr.length < 2) return null\n        \n        const a = (arr[0] ?? '').toString().trim()\n        const b = (arr[1] ?? '').toString().trim()\n        \n        if (isNumeric) {\n          const numA = Number(a)\n          const numB = Number(b)\n          if (Number.isNaN(numA) || Number.isNaN(numB)) return null\n          return [numA, numB]\n        }\n        return [a, b]\n      }\n      \n      if (op === 'in' || op === 'notin') {\n        const arr = Array.isArray(value) ? value : [value]\n        const trimmed = arr.map(s => s.toString().trim()).filter(s => s !== '')\n        if (isNumeric) {\n          return trimmed.map(v => Number(v)).filter(v => !Number.isNaN(v))\n        }\n        return trimmed\n      }\n      \n      if (isNumeric) {\n        const n = Number(value)\n        return Number.isNaN(n) ? value : n\n      }\n      \n      return value\n    }\n\n    // 本地执行高级筛选\n    const getFieldValue = (entry, field) => {\n      if (field === 'timestamp') return new Date(entry.timestamp)\n      return entry[field]\n    }\n\n    const toNumber = (val) => {\n      const n = Number(val)\n      return Number.isNaN(n) ? null : n\n    }\n\n    const evalCondition = (field, operator, value, entry) => {\n      const op = String(operator || '').toLowerCase()\n      const raw = getFieldValue(entry, field)\n      if (raw === undefined || raw === null) return false\n\n      const isNumeric = numericFields.has(field)\n      const isTimestamp = field === 'timestamp'\n\n      if (op === 'between' || op === 'notbetween') {\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',')\n        if (arr.length < 2) return false\n        if (isNumeric) {\n          const a = toNumber(arr[0]); const b = toNumber(arr[1]);\n          if (a === null || b === null) return false\n          const n = toNumber(raw)\n          if (n === null) return false\n          const ok = n >= Math.min(a,b) && n <= Math.max(a,b)\n          return op === 'between' ? ok : !ok\n        }\n        if (isTimestamp) {\n          const a = new Date(arr[0]); const b = new Date(arr[1])\n          const t = new Date(raw)\n          const ok = t >= (a < b ? a : b) && t <= (a < b ? b : a)\n          return op === 'between' ? ok : !ok\n        }\n        const s = String(raw)\n        const ok = s >= String(arr[0]) && s <= String(arr[1])\n        return op === 'between' ? ok : !ok\n      }\n\n      if (op === 'in' || op === 'notin') {\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',').map(v => v.trim()).filter(Boolean)\n        if (isNumeric) {\n          const set = new Set(arr.map(toNumber).filter(v => v !== null))\n          const n = toNumber(raw)\n          const ok = n !== null && set.has(n)\n          return op === 'in' ? ok : !ok\n        }\n        const set = new Set(arr.map(v => v.toString()))\n        const ok = set.has(String(raw))\n        return op === 'in' ? ok : !ok\n      }\n\n      if (op === 'regex') {\n        try {\n          const re = new RegExp(String(value))\n          return re.test(String(raw))\n        } catch { return false }\n      }\n\n      if (op === 'contains' || op === 'like') {\n        return String(raw).toLowerCase().includes(String(value ?? '').toLowerCase())\n      }\n      if (op === 'notcontains') {\n        return !String(raw).toLowerCase().includes(String(value ?? '').toLowerCase())\n      }\n      if (op === 'startswith') {\n        return String(raw).startsWith(String(value ?? ''))\n      }\n      if (op === 'endswith') {\n        return String(raw).endsWith(String(value ?? ''))\n      }\n\n      if (isNumeric) {\n        const n = toNumber(raw); const v = toNumber(value)\n        if (n === null || v === null) return false\n        switch (op) {\n          case '=': return n === v\n          case '!=': case '<>': return n !== v\n          case '>': return n > v\n          case '>=': return n >= v\n          case '<': return n < v\n          case '<=': return n <= v\n          default: return false\n        }\n      }\n      if (isTimestamp) {\n        const t = new Date(raw).getTime(); const v = new Date(value).getTime()\n        switch (op) {\n          case '=': return t === v\n          case '!=': case '<>': return t !== v\n          case '>': return t > v\n          case '>=': return t >= v\n          case '<': return t < v\n          case '<=': return t <= v\n          default: return false\n        }\n      }\n      const s = String(raw); const v = String(value ?? '')\n      switch (op) {\n        case '=': return s === v\n        case '!=': case '<>': return s !== v\n        case '>': return s > v\n        case '>=': return s >= v\n        case '<': return s < v\n        case '<=': return s <= v\n        default: return false\n      }\n    }\n\n    const evaluateNode = (node, entry) => {\n      if (!node) return true\n      if (node.field && node.operator) {\n        return evalCondition(node.field, node.operator, node.value, entry)\n      }\n      if (Array.isArray(node.conditions)) {\n        const logic = node.logic || 'AND'\n        const results = node.conditions.map(child => evaluateNode(child, entry))\n        return logic === 'OR' ? results.some(Boolean) : results.every(Boolean)\n      }\n      return true\n    }\n\n    const evaluateAdvanced = (entry) => evaluateNode(filtersRoot.value, entry)\n\n    const exprPreviewRef = ref(null)\n\n    const applyExpressionJSON = async () => {\n      if (!importExpressionText.value) return\n      try {\n        const obj = JSON.parse(importExpressionText.value)\n        if (obj && (Array.isArray(obj.conditions) || Array.isArray(obj.filters?.conditions))) {\n          const logic = obj.logic || obj.filters?.logic || 'AND'\n          const conds = Array.isArray(obj.conditions) ? obj.conditions : obj.filters?.conditions\n          filtersRoot.value = { logic, conditions: Array.isArray(conds) ? [...conds] : [] }\n          // 仅填充，不立即执行；等待点击\"应用\"\n          ElMessage.success('表达式已填充，请点击\"应用\"执行搜索')\n          showAdvancedFilter.value = true\n          await nextTick()\n          if (exprPreviewRef.value && exprPreviewRef.value.scrollIntoView) {\n            exprPreviewRef.value.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n          }\n        } else {\n          ElMessage.error('JSON格式不正确，缺少 conditions')\n        }\n      } catch (e) {\n        ElMessage.error('解析失败：' + e.message)\n      }\n    }\n\n    const applyExpressionSmart = async () => {\n      if (!importExpressionText.value) return\n      // 仅支持 JSON 导入\n      try {\n        const obj = JSON.parse(importExpressionText.value)\n        if (obj && (Array.isArray(obj.conditions) || Array.isArray(obj.filters?.conditions))) {\n          const logic = obj.logic || obj.filters?.logic || 'AND'\n          const conds = Array.isArray(obj.conditions) ? obj.conditions : obj.filters?.conditions\n          filtersRoot.value = { logic, conditions: Array.isArray(conds) ? [...conds] : [] }\n          ElMessage.success('表达式已填充，请点击\"应用\"执行搜索')\n          return\n        }\n        ElMessage.warning('未识别到可用的表达式内容')\n      } catch (_) {\n        ElMessage.error('仅支持 JSON 格式的表达式导入')\n      }\n    }\n\n    \n\n    // 分析手术数据（批量分析）\n    const analyzeSurgeryData = async () => {\n      analyzing.value = true\n      try {\n        // 使用统一的接口，一次性分析所有选中的日志\n        const logIds = selectedLogs.value.map(log => log.id)\n        const response = await api.surgeryStatistics.analyzeByLogIds(logIds, true)\n        \n        if (response.data.success) {\n          ElMessage.success(response.data.message || `成功分析出 ${response.data.data?.length || 0} 场手术`)\n        } else {\n          ElMessage.error(response.data.message || '批量分析手术数据失败')\n        }\n      } catch (error) {\n        ElMessage.error('批量分析手术数据失败: ' + (error.response?.data?.message || error.message))\n      } finally {\n        analyzing.value = false\n      }\n    }\n\n    // 构建filters payload\n    const buildFiltersPayload = () => {\n      const normalizeNode = (node) => {\n        if (!node) return null\n        if (node.field && node.operator) {\n          if (node.value === undefined || node.value === null || node.value === '') return null\n          \n          const normalizedValue = normalizeValue(node.field, node.operator, node.value)\n          if (normalizedValue === null) return null\n          \n          return {\n            field: node.field,\n            operator: node.operator,\n            value: normalizedValue\n          }\n        }\n        if (Array.isArray(node.conditions)) {\n          const children = node.conditions.map(normalizeNode).filter(Boolean)\n          if (children.length === 0) return null\n          return { logic: node.logic || 'AND', conditions: children }\n        }\n        return null\n      }\n      const normalized = normalizeNode(filtersRoot.value)\n      return normalized\n    }\n\n    // 不同字段对应的可选操作符\n    const operatorOptionsByField = {\n      timestamp: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' }\n      ],\n      error_code: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' },\n        { label: '正则', value: 'regex' },\n        { label: '前缀', value: 'startsWith' },\n        { label: '后缀', value: 'endsWith' }\n      ],\n      param1: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      param2: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      param3: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      param4: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      explanation: [\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' },\n        { label: '正则', value: 'regex' },\n        { label: '前缀', value: 'startsWith' },\n        { label: '后缀', value: 'endsWith' }\n      ]\n    }\n\n    const defaultOperatorOptions = [\n      { label: '=', value: '=' },\n      { label: '!=', value: '!=' }\n    ]\n\n    const getOperatorOptions = (field) => {\n      if (!field) return defaultOperatorOptions\n      return operatorOptionsByField[field] || defaultOperatorOptions\n    }\n\n    const onFieldChange = (cond) => {\n      if (!cond) return\n      const options = getOperatorOptions(cond.field)\n      // 若当前操作符不在可选集合内，重置为第一个\n      if (!options.some(o => o.value === cond.operator)) {\n        cond.operator = options[0]?.value\n      }\n      // 值类型重置\n      if (String(cond.operator).toLowerCase() === 'between') {\n        cond.value = Array.isArray(cond.value) ? cond.value.slice(0, 2) : ['', '']\n      } else {\n        cond.value = Array.isArray(cond.value) ? cond.value.join(',') : (cond.value ?? '')\n      }\n    }\n\n    const addConditionToGroup = (group) => {\n      if (!group.conditions) group.conditions = []\n      group.conditions.push({ field: 'error_code', operator: 'contains', value: '' })\n    }\n    const addGroupToGroup = (group) => {\n      if (!group.conditions) group.conditions = []\n      group.conditions.push({ logic: 'AND', conditions: [] })\n    }\n    const removeNodeAt = (group, idx) => {\n      if (Array.isArray(group.conditions) && idx >= 0 && idx < group.conditions.length) {\n        group.conditions.splice(idx, 1)\n      }\n    }\n    const applyAdvancedFilters = async () => {\n      // 直接根据当前条件构建 payload 并执行\n      showAdvancedFilter.value = false\n      advancedMode.value = true\n      currentPage.value = 1\n      await loadBatchLogEntries(1, true)\n      \n      // 获取筛选统计\n      await fetchFilteredStatistics()\n    }\n\n    // 保存颜色标记到sessionStorage\n    const saveColorMarksToStorage = () => {\n      const colorMarks = {}\n      batchLogEntries.value.forEach(entry => {\n        if (entry.color_mark) {\n          colorMarks[entry.id] = entry.color_mark\n        }\n      })\n      sessionStorage.setItem('batchLogColorMarks', JSON.stringify(colorMarks))\n    }\n\n    // 从sessionStorage加载颜色标记\n    const loadColorMarksFromStorage = () => {\n      try {\n        const stored = sessionStorage.getItem('batchLogColorMarks')\n        if (stored) {\n          const colorMarks = JSON.parse(stored)\n          batchLogEntries.value.forEach(entry => {\n            if (colorMarks[entry.id]) {\n              entry.color_mark = colorMarks[entry.id]\n            }\n          })\n        }\n      } catch (error) {\n        console.error('加载颜色标记失败:', error)\n      }\n    }\n\n    // 处理颜色变化\n    const selectColor = (row, colorValue) => {\n      // 如果点击的是当前选中的颜色，则取消选择\n      if (row.color_mark === colorValue) {\n        row.color_mark = null\n      } else {\n        row.color_mark = colorValue\n      }\n      \n      // 保存到sessionStorage\n      saveColorMarksToStorage()\n      // 强制触发响应式更新\n      nextTick(() => {\n        // 确保颜色变化能够触发行样式更新\n      })\n      // TODO: 保存颜色标记到后端\n    }\n\n    // 根据颜色标记设置行的样式类\n    const getRowClassName = ({ row }) => {\n      if (row.color_mark) {\n        // 根据颜色值返回对应的CSS类名\n        let className = ''\n        switch (row.color_mark) {\n          case '#ff0000': className = 'row-marked-red'; break\n          case '#ffff00': className = 'row-marked-yellow'; break\n          case '#0000ff': className = 'row-marked-blue'; break\n          case '#00ff00': className = 'row-marked-green'; break\n          default: className = ''\n        }\n        console.log('行样式类名:', className, '颜色值:', row.color_mark, '行数据:', row)\n        return className\n      }\n      return ''\n    }\n\n    // 根据颜色标记设置行的内联样式\n    const getRowStyle = ({ row }) => {\n      if (row.color_mark) {\n        // 将十六进制颜色转换为rgba格式\n        const hexToRgba = (hex, alpha = 0.2) => {\n          const r = parseInt(hex.slice(1, 3), 16)\n          const g = parseInt(hex.slice(3, 5), 16)\n          const b = parseInt(hex.slice(5, 7), 16)\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`\n        }\n        \n        const backgroundColor = hexToRgba(row.color_mark, 0.2)\n        console.log('行内联样式:', backgroundColor, '颜色值:', row.color_mark)\n        return {\n          backgroundColor: backgroundColor\n        }\n      }\n      return {}\n    }\n\n    // 操作按钮处理方法\n\n    const handleContextAnalysis = (row) => {\n      console.log('上下文分析:', row)\n      contextAnalysisRow.value = row\n      contextAnalysisVisible.value = true\n    }\n\n    const handleLogCapture = (row) => {\n      console.log('日志摘取:', row)\n      \n      // 检查是否已达到最大数量\n      if (clipboardEntries.value.length >= maxClipboardEntries) {\n        ElMessage.warning(`日志摘取板最多只能存储 ${maxClipboardEntries} 条日志`)\n        return\n      }\n      \n      // 允许重复添加（不再与参数绑定）\n      clipboardEntries.value.push({\n        id: row.id,\n        timestamp: row.timestamp,\n        error_code: row.error_code,\n        explanation: row.explanation\n      })\n      \n      // 直接将纯文本附加到摘取板（不包含参数）\n      const timestamp = formatTimestamp(row.timestamp)\n      const line = `${timestamp} ${row.error_code} ${row.explanation}`.trim()\n      clipboardContent.value = (clipboardContent.value ? clipboardContent.value + '\\n' : '') + line\n      \n      // 切换到“日志摘取”选项卡并显示侧边栏\n      sidebarActiveTab.value = 'logs'\n      clipboardVisible.value = true\n      \n      ElMessage.success(`已添加到日志摘取板 (${clipboardEntries.value.length}/${maxClipboardEntries})`)\n    }\n\n    // 更新剪贴板内容\n    const updateClipboardContent = () => {\n      // 保留函数以兼容旧逻辑，但不再覆盖用户编辑内容\n      // 如需从条目重建文本，可在此处实现\n    }\n\n    // 清空剪贴板\n    const clearClipboard = () => {\n      clipboardEntries.value = []\n      clipboardContent.value = ''\n      ElMessage.success('日志摘取板已清空')\n    }\n\n    const removeFromClipboard = (id) => {\n      const idx = clipboardEntries.value.findIndex(e => e.id === id)\n      if (idx > -1) {\n        clipboardEntries.value.splice(idx, 1)\n        updateClipboardContent()\n      }\n    }\n\n\n    // 导出剪贴板内容为txt文件\n    const exportClipboardToTxt = () => {\n      if (!clipboardContent.value) {\n        ElMessage.warning('剪贴板为空，无法导出')\n        return\n      }\n      \n      const blob = new Blob([clipboardContent.value], { type: 'text/plain;charset=utf-8' })\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `日志摘取_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.txt`\n      document.body.appendChild(a)\n      a.click()\n      document.body.removeChild(a)\n      URL.revokeObjectURL(url)\n      \n      ElMessage.success('日志摘取内容已导出')\n    }\n\n    // 保存剪贴板编辑内容\n    const saveClipboardContent = () => {\n      try {\n      sessionStorage.setItem('clipboardContent', clipboardContent.value)\n        ElMessage.success('已保存')\n      } catch (error) {\n        console.error('保存剪贴板内容失败:', error)\n        ElMessage.error('保存失败')\n      }\n    }\n\n    // 加载保存的剪贴板内容\n    const loadClipboardContent = () => {\n      try {\n        const saved = sessionStorage.getItem('clipboardContent')\n        if (saved !== null) {\n          clipboardContent.value = saved\n        }\n      } catch (error) {\n        console.error('加载剪贴板内容失败:', error)\n      }\n    }\n\n    // 显示剪贴板\n    const showClipboard = () => {\n      clipboardVisible.value = true\n    }\n\n    // 可视化功能\n    const handleVisualization = async (row) => {\n      // 记录各参数是否可用（同步，保证快速响应）\n      const params = [row.param1, row.param2, row.param3, row.param4]\n      paramAvailability.value = params.map(p => !!(p && String(p).trim()))\n      if (!paramAvailability.value.some(v => v)) {\n        ElMessage.warning('该日志条目没有可用的参数进行可视化')\n        return\n      }\n      \n      // 先以默认名称和当前值即时展示\n      availableParameters.value = params.map(p => (p && String(p).trim()) ? String(p).trim() : '')\n      paramNames.value = ['参数1', '参数2', '参数3', '参数4']\n      currentVisualizationRow.value = row\n      selectedParameter.value = null\n      selectKey.value++\n      nextTick(() => { activeParamPopoverRowId.value = row.id })\n      // 点击外部区域关闭：注册一次性 document 点击监听\n      const closeOnOutsideClick = (e) => {\n        // 如果已经关闭，移除监听\n        if (activeParamPopoverRowId.value !== row.id) {\n          document.removeEventListener('click', closeOnOutsideClick, true)\n          return\n        }\n        // 点击在参数按钮或 Popover 内部则忽略\n        const target = e.target\n        const btn = target && target.closest && target.closest('.visualization-btn')\n        const pop = target && target.closest && target.closest('.el-popover')\n        if (btn || pop) return\n        // 关闭并移除监听\n        activeParamPopoverRowId.value = null\n        document.removeEventListener('click', closeOnOutsideClick, true)\n      }\n      // 捕获阶段监听，优先于内部处理\n      document.addEventListener('click', closeOnOutsideClick, true)\n\n      // 后台异步获取更精准的参数名称，返回后再更新；加载完成前不渲染单选项\n      paramNamesLoading.value = true\n      try {\n        const fullErrorCode = row.error_code?.toUpperCase?.() || ''\n        let errorCodeToQuery = fullErrorCode\n        let subsystemToQuery = 1\n        if (fullErrorCode.length === 7 && /^[1-9A][0-9A-F]{6}$/.test(fullErrorCode)) {\n          subsystemToQuery = fullErrorCode.charAt(0)\n          const faultCodePart = fullErrorCode.substring(3)\n          errorCodeToQuery = `0X${faultCodePart}`\n        } else if (fullErrorCode.length >= 6 && /^[1-9A]0X[0-9A-F]{3}[ABCDE]$/.test(fullErrorCode)) {\n          subsystemToQuery = fullErrorCode.charAt(0)\n          errorCodeToQuery = fullErrorCode.substring(1)\n        } else if (/^0X[0-9A-F]{3}[ABCDE]$/.test(fullErrorCode)) {\n          errorCodeToQuery = fullErrorCode\n        }\n        const resp = await api.errorCodes.getByCodeAndSubsystem(errorCodeToQuery, subsystemToQuery)\n        const info = resp?.data?.errorCode\n        if (info) {\n          paramNames.value = [\n            info.param1 || '参数1',\n            info.param2 || '参数2',\n            info.param3 || '参数3',\n            info.param4 || '参数4'\n          ]\n        }\n      } catch (e) {\n        console.warn('获取故障码参数名称失败，继续使用默认名称')\n      } finally {\n        // 仅当仍是当前行的弹出层，才结束loading\n        if (activeParamPopoverRowId.value === row.id) {\n          paramNamesLoading.value = false\n        }\n      }\n    }\n\n    const isParameterAvailable = (idx) => {\n      // idx 为 1-4\n      return !!paramAvailability.value[idx - 1]\n    }\n\n    const confirmVisualization = () => {\n      if (!selectedParameter.value) {\n        ElMessage.warning('请选择一个参数')\n        return\n      }\n      \n      activeParamPopoverRowId.value = null\n      generateChart()\n    }\n\n    const generateChart = async () => {\n      if (!currentVisualizationRow.value) return\n      const row = currentVisualizationRow.value\n      // 先打开弹窗，再异步获取数据供子组件渲染\n        chartDetailVisible.value = true\n        await createChart(row)\n    }\n\n    const createChart = async (row) => {\n      try {\n        ElMessage.info('正在获取图表数据...')\n        const logIds = selectedLogs.value.map(l => l.id).join(',')\n        const paramIndex = selectedParameter.value\n        const fullErrorCode = row.error_code.toUpperCase()\n        let subsystemToQuery = 1\n        if (fullErrorCode.length === 7 && /^[1-9A][0-9A-F]{6}$/.test(fullErrorCode)) {\n          subsystemToQuery = fullErrorCode.charAt(0)\n        } else if (fullErrorCode.length >= 6 && /^[1-9A]0X[0-9A-F]{3}[ABCDE]$/.test(fullErrorCode)) {\n          subsystemToQuery = fullErrorCode.charAt(0)\n        }\n        const visualizationParams = { log_ids: logIds, error_code: row.error_code, parameter_index: paramIndex, subsystem: subsystemToQuery }\n        // 加入当前筛选条件（与列表加载保持一致）\n        if (advancedMode.value && leafConditionCount.value > 0) {\n          const filtersPayload = buildFiltersPayload()\n          if (filtersPayload) {\n            visualizationParams.filters = JSON.stringify(filtersPayload)\n          }\n        }\n        if (timeRange.value && Array.isArray(timeRange.value)) {\n          visualizationParams.start_time = timeRange.value[0]\n          visualizationParams.end_time = timeRange.value[1]\n        }\n        if (searchKeyword.value) {\n          visualizationParams.search = searchKeyword.value\n        }\n        const response = await api.logs.getVisualizationData(visualizationParams)\n        const { chartData, chartTitle: apiChartTitle, paramName } = response.data.data\n        if (!Array.isArray(chartData) || chartData.length === 0) {\n          ElMessage.warning('没有可用的数据生成图表')\n          return\n        }\n        chartTitle.value = apiChartTitle\n        const validData = chartData\n          currentChartData.value = {\n            id: `chart_${Date.now()}`,\n            title: apiChartTitle,\n            timestamp: new Date().toISOString(),\n            parameter: selectedParameter.value,\n            parameterValue: paramName,\n            data: validData,\n            errorCode: row.error_code\n          }\n          addChartToSidebar()\n        ElMessage.success(`已获取 ${chartData.length} 条数据`)\n        } catch (error) {\n        ElMessage.error('获取图表数据失败: ' + (error?.response?.data?.message || error.message))\n      }\n    }\n\n    const addChartToSidebar = () => {\n      if (!currentChartData.value) return\n      \n      // 检查是否已达到最大数量限制\n      if (chartThumbnails.value.length >= 5) {\n        ElMessage.warning('最多只能生成5张可视化图表')\n        return\n      }\n      \n      // 为图表添加序号\n      const chartNumber = chartThumbnails.value.length + 1\n      const chartWithNumber = { ...currentChartData.value, title: currentChartData.value.title }\n      \n      // 将图表添加到缩略图列表\n      chartThumbnails.value.push(chartWithNumber)\n      \n      // 切换到“可视化”选项卡并显示剪贴板\n      sidebarActiveTab.value = 'charts'\n      clipboardVisible.value = true\n      \n      // 使用双重nextTick确保DOM完全渲染\n      nextTick(() => {\n        nextTick(() => {\n          // 添加延迟确保DOM元素完全准备好\n          setTimeout(() => {\n            createChartThumbnail(chartWithNumber)\n          }, 100)\n        })\n      })\n      \n      ElMessage.success('图表已添加到剪贴板')\n    }\n\n    const createChartThumbnail = (chartData) => {\n      try {\n        const thumbnailElement = document.getElementById(`chart-thumb-${chartData.id}`)\n        if (!thumbnailElement) {\n          console.warn(`缩略图元素未找到: chart-thumb-${chartData.id}`)\n          return\n        }\n        \n        // 检查元素是否有尺寸\n        if (thumbnailElement.offsetWidth === 0 || thumbnailElement.offsetHeight === 0) {\n          console.warn(`缩略图元素尺寸为0: ${thumbnailElement.offsetWidth}x${thumbnailElement.offsetHeight}`)\n          // 延迟重试\n          setTimeout(() => createChartThumbnail(chartData), 200)\n          return\n        }\n        \n        // 销毁已存在的实例\n        const existingInstance = echarts.getInstanceByDom(thumbnailElement)\n        if (existingInstance) {\n          existingInstance.dispose()\n        }\n        \n        const thumbnailInstance = echarts.init(thumbnailElement)\n        \n        // 创建缩略图配置 - 更饱满的布局\n        const minX = Math.min(...chartData.data.map(d => d[0]))\n        const maxX = Math.max(...chartData.data.map(d => d[0]))\n        const thumbnailOption = {\n          grid: { left: 8, right: 8, top: 8, bottom: 8, containLabel: false },\n          title: undefined,\n          tooltip: { show: false },\n          xAxis: {\n            type: 'time',\n            boundaryGap: false,\n            axisLabel: { show: false },\n            axisLine: { show: false },\n            axisTick: { show: false },\n            min: minX,\n            max: maxX\n          },\n          yAxis: {\n            type: 'value',\n            boundaryGap: [0, '5%'],\n            axisLabel: { show: false },\n            axisLine: { show: false },\n            axisTick: { show: false },\n            min: 'dataMin',\n            max: 'dataMax',\n            scale: true\n          },\n          series: [{\n            name: `${chartData.parameterValue}`,\n            type: 'line',\n            symbol: 'none',\n            sampling: false,\n            lineStyle: { width: 1.5, color: '#409EFF' },\n            areaStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgba(64,158,255,0.22)' },\n                { offset: 1, color: 'rgba(64,158,255,0.04)' }\n              ])\n            },\n            data: chartData.data\n          }]\n        }\n        \n        thumbnailInstance.setOption(thumbnailOption)\n        \n        // 监听窗口大小变化\n        const resizeHandler = () => {\n          if (thumbnailInstance && !thumbnailInstance.isDisposed()) {\n            thumbnailInstance.resize()\n          }\n        }\n        \n        window.addEventListener('resize', resizeHandler)\n        \n        // 存储实例引用以便后续清理\n        thumbnailElement._echartsInstance = thumbnailInstance\n        thumbnailElement._resizeHandler = resizeHandler\n        \n      } catch (error) {\n        console.error('创建缩略图失败:', error)\n      }\n    }\n\n    const showChartDetail = (chartData) => {\n      // 设置全局错误处理来捕获 ECharts 内部错误\n      const originalConsoleError = console.error\n      const originalError = window.onerror\n      \n      console.error = function(...args) {\n        const errorMessage = args.join(' ')\n        if (errorMessage.includes('dataSample') || \n            errorMessage.includes('Cannot read properties of undefined') ||\n            errorMessage.includes('reading \\'type\\'')) {\n          // 静默处理ECharts内部错误\n          return\n        }\n        originalConsoleError.apply(console, args)\n      }\n      \n      window.onerror = function(msg, url, line, col, error) {\n        if (msg && msg.includes && msg.includes('Cannot read properties of undefined') && \n            msg.includes('reading \\'type\\'')) {\n          // 静默处理ECharts内部错误\n          return true\n        }\n        if (originalError) {\n          return originalError(msg, url, line, col, error)\n        }\n        return false\n      }\n      \n      // 设置当前图表数据\n      currentChartData.value = chartData\n      chartTitle.value = chartData.title\n      \n      // 显示图表详情弹窗\n      chartDetailVisible.value = true\n      \n      // 等待对话框完全打开后再初始化图表，避免容器为 0x0\n      nextTick(() => {\n        setTimeout(() => {\n        if (chartInstance.value) {\n          chartInstance.value.dispose()\n          chartInstance.value = null\n        }\n        const chartElement = document.getElementById('visualizationChart')\n          if (!chartElement) return\n          if (chartElement.offsetWidth === 0 || chartElement.offsetHeight === 0) {\n            // 再等一帧\n            setTimeout(() => createChart(chartData), 50)\n            return\n          }\n          chartInstance.value = echarts.init(chartElement)\n          \n          // 验证图表数据\n          if (!chartData.data || !Array.isArray(chartData.data) || chartData.data.length === 0) {\n            ElMessage.error('图表数据无效')\n            return\n          }\n          \n          // 验证数据格式\n          const validData = chartData.data.filter(item => \n            Array.isArray(item) && \n            item.length >= 2 && \n            typeof item[0] === 'number' && \n            typeof item[1] === 'number' &&\n            !isNaN(item[0]) && \n            !isNaN(item[1]) &&\n            isFinite(item[0]) && \n            isFinite(item[1])\n          )\n          \n          if (validData.length === 0) {\n            ElMessage.error('没有有效的图表数据')\n            return\n          }\n          \n          // 获取智能时间格式化函数\n          const smartTimeFormatter = getSmartTimeFormatter(validData)\n          \n          // 重新创建完整图表 - 完全匹配 ECharts 官方时间轴面积图示例\n          const option = {\n            title: undefined,\n            tooltip: {\n              trigger: 'axis',\n              position: function (pt) {\n                return [pt[0], '10%'];\n              }\n            },\n            legend: undefined,\n            toolbox: {\n              feature: {\n                dataZoom: {\n                  yAxisIndex: 'none'\n                },\n                restore: {},\n                saveAsImage: {}\n              }\n            },\n            xAxis: {\n              type: 'time',\n              boundaryGap: false,\n              min: Math.min(...validData.map(d => d[0])),\n              max: Math.max(...validData.map(d => d[0]))\n            },\n            yAxis: {\n              type: 'value',\n              boundaryGap: [0, '100%']\n            },\n            dataZoom: [\n              {\n                type: 'inside',\n                start: 0,\n                end: 100,\n                realtime: true,\n                throttle: 100,\n                zoomLock: false,\n                xAxisIndex: 0,\n                filterMode: 'filter',\n                preventDefaultMouseMove: true\n              },\n              {\n                type: 'slider',\n                start: 0,\n                end: 100,\n                realtime: true,\n                throttle: 100,\n                zoomLock: false,\n                showDetail: true,\n                showDataShadow: true,\n                xAxisIndex: 0,\n                bottom: 10,\n                filterMode: 'filter',\n                moveHandleSize: 8,\n                preventDefaultMouseMove: true,\n                dataBackground: {\n                  lineStyle: {\n                    color: '#ddd'\n                  },\n                  areaStyle: {\n                    color: '#f0f0f0'\n                  }\n                },\n                selectedDataBackground: {\n                  lineStyle: {\n                    color: '#409EFF'\n                  },\n                  areaStyle: {\n                    color: '#E6F7FF'\n                  }\n                }\n              }\n            ],\n            series: [\n              {\n                name: chartData.parameterValue || '数据',\n                type: 'line',\n                symbol: 'none',\n                sampling: false,\n                itemStyle: {\n                  color: 'rgb(255, 70, 131)'\n                },\n                areaStyle: {\n                  color: {\n                    type: 'linear',\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [{\n                      offset: 0, color: 'rgb(255, 158, 68)'\n                    }, {\n                      offset: 1, color: 'rgb(255, 70, 131)'\n                    }],\n                    global: false\n                  }\n                },\n                data: validData\n              }\n            ]\n          }\n          \n          // 设置全局错误处理\n          const originalError = window.onerror\n          window.onerror = function(msg, url, line, col, error) {\n            if (msg && msg.includes && msg.includes('Cannot read properties of undefined') && \n                msg.includes('reading \\'type\\'')) {\n              // 静默处理ECharts内部错误\n              return true\n            }\n            if (originalError) {\n              return originalError(msg, url, line, col, error)\n            }\n            return false\n          }\n          \n          try {\n            // 安全初始化流程\n            nextTick(() => {\n              try {\n                // 确保图表实例存在且未销毁\n                if (!chartInstance.value || chartInstance.value.isDisposed()) {\n                  console.error('图表实例无效')\n                  return\n                }\n                \n                // 清除之前的配置\n                chartInstance.value.clear()\n                \n                // 设置新配置\n                chartInstance.value.setOption(option, true)\n                \n                // 强制刷新图表以确保 dataZoom 正常工作\n                setTimeout(() => {\n                  try {\n                    if (chartInstance.value && !chartInstance.value.isDisposed()) {\n                      // 检查图表组件是否正确初始化\n                      const model = chartInstance.value.getModel()\n                      if (model && model.getComponent('series', 0)) {\n                        chartInstance.value.resize()\n                        \n                        // 强制触发 dataZoom 更新\n                        setTimeout(() => {\n                          if (chartInstance.value && !chartInstance.value.isDisposed()) {\n                            chartInstance.value.dispatchAction({\n                              type: 'dataZoom',\n                              start: 0,\n                              end: 100\n                            })\n                          }\n                        }, 50)\n                      } else {\n                        console.warn('图表详情组件初始化不完整')\n                      }\n                    }\n                  } catch (resizeError) {\n                    console.warn('图表详情调整大小失败:', resizeError)\n                  }\n                }, 100)\n                \n              } catch (error) {\n                console.warn('图表详情初始化警告:', error)\n                // 使用最简单的配置重试\n                try {\n                  const simpleOption = {\n                    xAxis: { type: 'time' },\n                    yAxis: { type: 'value' },\n                    series: [{ \n                      name: '数据',\n                      type: 'line', \n                      data: validData,\n                      sampling: false\n                    }],\n                    animation: false\n                  }\n                  chartInstance.value.clear()\n                  chartInstance.value.setOption(simpleOption, true)\n                } catch (simpleError) {\n                  console.error('图表详情初始化失败:', simpleError)\n                  ElMessage.error('图表详情初始化失败，请重试')\n                }\n              }\n            })\n          } finally {\n            // 恢复原始的 window.onerror\n            setTimeout(() => {\n              window.onerror = originalError\n            }, 1000)\n          }\n      }, 50)\n      })\n      \n      // 恢复原始的 console.error 和 window.onerror\n      setTimeout(() => {\n        console.error = originalConsoleError\n        window.onerror = originalError\n      }, 2000)\n    }\n\n    const deleteChartThumbnail = (chartId) => {\n      const index = chartThumbnails.value.findIndex(chart => chart.id === chartId)\n      if (index > -1) {\n        // 清理ECharts实例\n        const thumbnailElement = document.getElementById(`chart-thumb-${chartId}`)\n        if (thumbnailElement) {\n          // 清理事件监听器\n          if (thumbnailElement._resizeHandler) {\n            window.removeEventListener('resize', thumbnailElement._resizeHandler)\n          }\n          \n          // 销毁ECharts实例\n          if (thumbnailElement._echartsInstance) {\n            thumbnailElement._echartsInstance.dispose()\n          }\n        }\n        \n        chartThumbnails.value.splice(index, 1)\n        \n        // 重新编号剩余的图表\n        chartThumbnails.value.forEach((chart) => {\n          chart.title = chart.title.replace(/^\\d+\\.\\s*/, '')\n        })\n        \n        ElMessage.success('图表已删除')\n      }\n    }\n\n    const deleteCurrentChart = () => {\n      if (currentChartData.value) {\n        deleteChartThumbnail(currentChartData.value.id)\n        chartDetailVisible.value = false\n        if (chartInstance.value) {\n          chartInstance.value.dispose()\n          chartInstance.value = null\n        }\n      }\n    }\n\n    const onChartDialogOpened = () => {\n      nextTick(() => {\n        const chartElement = document.getElementById('visualizationChart')\n        if (!chartElement) return\n        if (chartElement.offsetWidth === 0 || chartElement.offsetHeight === 0) {\n          setTimeout(onChartDialogOpened, 50)\n          return\n        }\n        if (chartInstance.value) {\n          chartInstance.value.dispose()\n          chartInstance.value = null\n        }\n        chartInstance.value = echarts.init(chartElement)\n        if (currentChartData.value && Array.isArray(currentChartData.value.data)) {\n          const validData = currentChartData.value.data.filter(item => \n            Array.isArray(item) && item.length >= 2 && typeof item[0] === 'number' && typeof item[1] === 'number'\n          )\n          if (validData.length === 0) return\n          const option = {\n            title: undefined,\n            tooltip: { trigger: 'axis', position: (pt) => [pt[0], '10%'] },\n            legend: undefined,\n            toolbox: { feature: { dataZoom: { yAxisIndex: 'none' }, restore: {}, saveAsImage: {} } },\n            xAxis: { type: 'time', boundaryGap: false, min: Math.min(...validData.map(d => d[0])), max: Math.max(...validData.map(d => d[0])) },\n            yAxis: { type: 'value', boundaryGap: [0, '100%'] },\n            dataZoom: [\n              { type: 'inside', start: 0, end: 100, realtime: true, throttle: 100, zoomLock: false, xAxisIndex: 0, filterMode: 'filter', preventDefaultMouseMove: true },\n              { type: 'slider', start: 0, end: 100, realtime: true, throttle: 100, zoomLock: false, showDetail: true, showDataShadow: true, xAxisIndex: 0, bottom: 10, filterMode: 'filter', moveHandleSize: 8, preventDefaultMouseMove: true }\n            ],\n            series: [ { name: '数据', type: 'line', symbol: 'none', sampling: false, data: validData } ]\n          }\n          chartInstance.value.setOption(option, true)\n          setTimeout(() => {\n            try {\n            if (chartInstance.value && !chartInstance.value.isDisposed()) {\n                const model2 = chartInstance.value.getModel && chartInstance.value.getModel()\n                if (model2 && model2.getComponent && model2.getComponent('dataZoom', 0)) {\n              chartInstance.value.dispatchAction({ type: 'dataZoom', start: 0, end: 100 })\n                }\n              }\n            } catch (e) {\n              console.warn('图表详情 dataZoom 动作失败:', e)\n            }\n          }, 50)\n        }\n      })\n    }\n\n    const exportChartAsImage = () => {\n      if (!chartInstance.value) {\n        ElMessage.error('图表实例未找到')\n        return\n      }\n      \n      try {\n        // 使用ECharts的getDataURL方法导出图片\n        const dataURL = chartInstance.value.getDataURL({\n          type: 'png',\n          pixelRatio: 2,\n          backgroundColor: '#fff'\n        })\n        \n        // 创建下载链接\n        const link = document.createElement('a')\n        link.download = `chart_${new Date().getTime()}.png`\n        link.href = dataURL\n        link.click()\n        \n        ElMessage.success('图表已导出为图片')\n      } catch (error) {\n        console.error('导出图表失败:', error)\n        ElMessage.error('导出图表失败')\n      }\n    }\n\n\n\n    // 备注功能\n    const notesState = ref({}) // { [logEntryId]: { items, total, page, pageSize, loading } }\n    const newNoteContent = ref('')\n    const editingNoteId = ref(null)\n    const editingNoteContent = ref('')\n\n    const canCreateNote = computed(() => store.getters['auth/isAuthenticated'])\n    const roleLabel = (r) => r === 'admin' ? '管理员' : (r === 'expert' ? '专家' : '普通用户')\n    const getNotesKey = (row) => row.id\n    const getNotes = (row) => notesState.value[getNotesKey(row)] || { items: [], total: 0, page: 1, pageSize: 10, loading: false }\n\n    const openNotes = async (row) => {\n      activeNotesPopoverRowId.value = row.id\n      await reloadNotes(row)\n      const closeOnOutsideClick = (e) => {\n        if (activeNotesPopoverRowId.value !== row.id) {\n          document.removeEventListener('click', closeOnOutsideClick, true)\n          return\n        }\n        const target = e.target\n        const btn = target && target.closest && target.closest('.operation-btn')\n        const pop = target && target.closest && target.closest('.el-popover')\n        if (btn || pop) return\n        activeNotesPopoverRowId.value = null\n        document.removeEventListener('click', closeOnOutsideClick, true)\n      }\n      document.addEventListener('click', closeOnOutsideClick, true)\n    }\n    const toggleColorPopover = (row) => {\n      activeColorPopoverRowId.value = activeColorPopoverRowId.value === row.id ? null : row.id\n      const currentId = row.id\n      const closeOnOutsideClick = (e) => {\n        if (activeColorPopoverRowId.value !== currentId) {\n          document.removeEventListener('click', closeOnOutsideClick, true)\n          return\n        }\n        const target = e.target\n        const refEl = target && target.closest && target.closest('.color-indicator')\n        const pop = target && target.closest && target.closest('.el-popover')\n        if (refEl || pop) return\n        activeColorPopoverRowId.value = null\n        document.removeEventListener('click', closeOnOutsideClick, true)\n      }\n      document.addEventListener('click', closeOnOutsideClick, true)\n    }\n\n    const reloadNotes = async (row) => {\n      const key = getNotesKey(row)\n      const state = notesState.value[key] || { items: [], total: 0, page: 1, pageSize: 10, loading: false }\n      state.loading = true\n      notesState.value[key] = state\n      try {\n        const { data } = await api.notes.list(row.id, { page: state.page, pageSize: state.pageSize })\n        notesState.value[key] = { ...state, items: data.items || [], total: data.total || 0, page: data.page || 1, pageSize: data.pageSize || 10, loading: false }\n      } catch (e) {\n        state.loading = false\n      }\n    }\n\n    const changeNotesPage = async (row, page) => {\n      const key = getNotesKey(row)\n      const state = notesState.value[key] || { items: [], total: 0, page: 1, pageSize: 10, loading: false }\n      state.page = page\n      notesState.value[key] = state\n      await reloadNotes(row)\n    }\n\n    const submitNewNote = async (row) => {\n      if (!newNoteContent.value.trim()) {\n        ElMessage.warning('请输入备注内容')\n        return\n      }\n      try {\n        await api.notes.create(row.id, newNoteContent.value.trim())\n        newNoteContent.value = ''\n        await reloadNotes(row)\n      } catch (e) { /* handled by interceptor */ }\n    }\n\n    const canEditNote = (item) => {\n      const current = store.getters['auth/currentUser']\n      if (!current) return false\n      if (store.getters['auth/hasPermission']('user:update')) return true // admin\n      return item.user_id === current.id\n    }\n\n    const canDeleteNote = canEditNote\n\n    const startEditNote = (item) => {\n      editingNoteId.value = item.id\n      editingNoteContent.value = item.content\n    }\n    const cancelEditNote = () => {\n      editingNoteId.value = null\n      editingNoteContent.value = ''\n    }\n    const submitEditNote = async (item) => {\n      if (!editingNoteContent.value.trim()) {\n        ElMessage.warning('请输入备注内容')\n        return\n      }\n      try {\n        await api.notes.update(item.id, editingNoteContent.value.trim())\n        editingNoteId.value = null\n        editingNoteContent.value = ''\n        const row = { id: item.log_entry_id }\n        await reloadNotes(row)\n      } catch (e) { /* handled globally */ }\n    }\n\n    const confirmDeleteNote = (item) => {\n      ElMessageBox.confirm('确定删除这条备注吗？', '提示', { type: 'warning' })\n        .then(async () => {\n          await api.notes.remove(item.id)\n          const row = { id: item.log_entry_id }\n          await reloadNotes(row)\n        })\n        .catch(() => {})\n    }\n\n    const formatTimeForDisplay = (t, isUtcTime = true) => {\n      try { return formatTime(t, true, isUtcTime) } catch { return t }\n    }\n\n    // 保存备注到sessionStorage\n    const saveRemarksToStorage = () => {\n      const remarks = {}\n      batchLogEntries.value.forEach(entry => {\n        if (entry.remarks) {\n          remarks[entry.id] = entry.remarks\n        }\n      })\n      sessionStorage.setItem('batchLogRemarks', JSON.stringify(remarks))\n    }\n\n    // 从sessionStorage加载备注\n    const loadRemarksFromStorage = () => {\n      try {\n        const stored = sessionStorage.getItem('batchLogRemarks')\n        if (stored) {\n          const remarks = JSON.parse(stored)\n          batchLogEntries.value.forEach(entry => {\n            if (remarks[entry.id]) {\n              entry.remarks = remarks[entry.id]\n            }\n          })\n        }\n      } catch (error) {\n        console.error('加载备注失败:', error)\n      }\n    }\n\n    // 执行上下文分析\n    const executeContextAnalysis = async () => {\n      if (!contextAnalysisRow.value) return\n      \n      try {\n        const baseTimestamp = new Date(contextAnalysisRow.value.timestamp)\n        const beforeMs = (beforeMinutes.value * 60 + beforeSeconds.value) * 1000\n        const afterMs = (afterMinutes.value * 60 + afterSeconds.value) * 1000\n        if (beforeMs === 0 && afterMs === 0) {\n          ElMessage.warning('时间范围不能为 0，请输入分钟或秒')\n          return\n        }\n        const beforeTime = new Date(baseTimestamp.getTime() - beforeMs)\n        const afterTime = new Date(baseTimestamp.getTime() + afterMs)\n        \n        console.log('上下文分析参数:', {\n          baseRow: contextAnalysisRow.value,\n          beforeMinutes: beforeMinutes.value,\n          beforeSeconds: beforeSeconds.value,\n          afterMinutes: afterMinutes.value,\n          afterSeconds: afterSeconds.value,\n          timeRange: {\n            before: beforeTime.toISOString(),\n            after: afterTime.toISOString()\n          }\n        })\n        \n        // 构建时间范围筛选条件\n        const timeFilter = {\n          field: 'timestamp',\n          operator: 'between',\n          value: [formatTimestamp(beforeTime), formatTimestamp(afterTime)]\n        }\n        \n        // 清空当前筛选器并应用时间范围筛选\n        filtersRoot.value = { logic: 'AND', conditions: [timeFilter] }\n        advancedMode.value = true\n        currentPage.value = 1\n        \n        // 重新加载数据\n        await loadBatchLogEntries(1, true)\n        \n        // 关闭对话框\n        contextAnalysisVisible.value = false\n        \n        const beforeText = `${beforeMinutes.value}分${beforeSeconds.value}秒`\n        const afterText = `${afterMinutes.value}分${afterSeconds.value}秒`\n        ElMessage.success(`已筛选出 ${beforeText}前到${afterText}后的日志`)\n        \n      } catch (error) {\n        console.error('上下文分析失败:', error)\n        ElMessage.error('上下文分析失败，请重试')\n      }\n    }\n\n\n    const applySelectedTemplate = () => {\n      if (!selectedTemplateName.value) return\n      const tpl = templates.value.find(t => t.name === selectedTemplateName.value)\n      if (!tpl) return\n      filtersRoot.value = {\n        logic: tpl.filters?.logic || 'AND',\n        conditions: Array.isArray(tpl.filters?.conditions) ? [...tpl.filters.conditions] : []\n      }\n      // 不立即执行搜索，用户可继续增删条件\n    }\n\n    const onOperatorChange = (cond) => {\n      if (!cond) return\n      const op = String(cond.operator || '').toLowerCase()\n      if (op === 'between') {\n        if (!Array.isArray(cond.value)) {\n          cond.value = ['', '']\n        } else if (cond.value.length < 2) {\n          cond.value = [cond.value[0] || '', cond.value[1] || '']\n        }\n      } else {\n        if (Array.isArray(cond.value)) {\n          cond.value = cond.value.join(',')\n        }\n      }\n    }\n\n    onMounted(async () => {\n      // 加载服务器时区信息\n      await loadServerTimezone()\n      \n      await loadSelectedLogs()\n      await loadTemplates()\n      // 加载计数数据\n      loadCountsFromStorage()\n      \n      // 如果有选中的日志，获取全局统计\n      if (selectedLogs.value.length > 0) {\n        await fetchGlobalStatistics()\n      }\n      \n      // 默认选择全部时间范围（最早至最晚）\n      if (timeRangeLimit.value) {\n        timeRange.value = [\n          formatTimestamp(timeRangeLimit.value[0]),\n          formatTimestamp(timeRangeLimit.value[1])\n        ]\n      }\n      // 初始化加载数据\n      await loadBatchLogEntries(1, true)\n      \n      // 加载保存的剪贴板内容\n      loadClipboardContent()\n    })\n\n    // 组件销毁时清理ECharts实例\n    onBeforeUnmount(() => {\n      if (chartInstance.value) {\n        chartInstance.value.dispose()\n        chartInstance.value = null\n      }\n      \n      // 清理所有缩略图实例\n      chartThumbnails.value.forEach(chart => {\n        const thumbnailElement = document.getElementById(`chart-thumb-${chart.id}`)\n        if (thumbnailElement) {\n          if (thumbnailElement._resizeHandler) {\n            window.removeEventListener('resize', thumbnailElement._resizeHandler)\n          }\n          if (thumbnailElement._echartsInstance) {\n            thumbnailElement._echartsInstance.dispose()\n          }\n        }\n      })\n    })\n\n    watch(clipboardContent, (val) => {\n      try { sessionStorage.setItem('clipboardContent', val || '') } catch(_){}\n    })\n\n    return {\n      activeColorPopoverRowId,\n      activeNotesPopoverRowId,\n      hoveredNameRowId,\n      toggleColorPopover,\n      loading,\n      selectedLogs,\n      batchLogEntries,\n      searchKeyword,\n      timeRange,\n      currentPage,\n      pageSize,\n      totalCount,\n      totalPages,\n      advancedMode,\n      useLocalAdvanced,\n      tableColumns,\n      showAdvancedFilter,\n      filtersRoot,\n      filteredEntries,\n      paginatedEntries,\n      searchExpression,\n      advancedExpression,\n      // counts for template conditions\n      batchCount,\n      selectedLogsCount,\n      filteredCount,\n      leafConditionCount,\n      loadSelectedLogs,\n      loadBatchLogEntries,\n      handleSearch,\n      handleQuery,\n      handleTimeRangeChange,\n      clearFilters,\n      exportToCSV,\n      handleSizeChange,\n      handleCurrentChange,\n      handleLoadMore,\n      forceRelayout,\n      formatTimestamp,\n      formatFileSize,\n      getSmartTimeFormatter,\n      showSurgeryStatistics,\n      showSurgeryStatsDialog,\n      surgeryStatsLoading,\n      surgeryStats,\n      exportingRow,\n      surgeryJsonDialogVisible,\n      surgeryJsonText,\n      hasExportPermission,\n      visualizeSurgeryStat,\n      previewSurgeryData,\n      exportSurgeryRow,\n      analyzeSurgeryData,\n      surgeryStatisticsVisible,\n      surgeryData,\n      analyzing,\n      timeRangeLimit,\n      defaultPickerRange,\n      disableOutOfRangeDates,\n      templates,\n      applyTemplateByName,\n      beforeImportTemplates,\n      selectedTemplateName,\n      onTemplateSingleSelect,\n      applySelectedTemplate,\n      importExpressionText,\n      \n      applyExpressionJSON,\n      applyExpressionSmart,\n      addConditionToGroup,\n      addGroupToGroup,\n      removeNodeAt,\n      exprPreviewRef,\n      applyAdvancedFilters,\n      clearAllConditionsOnly,\n      // expose helpers for operator dropdowns\n      getOperatorOptions,\n      onFieldChange,\n      onOperatorChange,\n      // 新增的变量和方法\n      colorOptions,\n      selectColor,\n      getRowClassName,\n      getRowStyle,\n      saveColorMarksToStorage,\n      loadColorMarksFromStorage,\n      handleContextAnalysis,\n      handleLogCapture,\n      openNotes,\n      reloadNotes,\n      getNotes,\n      changeNotesPage,\n      submitNewNote,\n      canEditNote,\n      canDeleteNote,\n      startEditNote,\n      cancelEditNote,\n      submitEditNote,\n      confirmDeleteNote,\n      notesState,\n      newNoteContent,\n      editingNoteId,\n      editingNoteContent,\n      roleLabel,\n      formatTimeForDisplay,\n      canCreateNote,\n      // 上下文分析相关\n      contextAnalysisVisible,\n      contextAnalysisRow,\n      beforeMinutes,\n      afterMinutes,\n      beforeSeconds,\n      afterSeconds,\n      executeContextAnalysis,\n      // 日志摘取相关\n      clipboardVisible,\n      clipboardEntries,\n      clipboardContent,\n      updateClipboardContent,\n      clearClipboard,\n      exportClipboardToTxt,\n      saveClipboardContent,\n      loadClipboardContent,\n      showClipboard,\n      clipboardDetailVisible,\n      clipboardCount,\n      fillPercent,\n      maxClipboardEntries,\n      // 可视化相关\n      parameterSelectVisible,\n      sidebarActiveTab,\n      selectedParameter,\n      availableParameters,\n      paramNames,\n      selectKey,\n      isParameterAvailable,\n      // 供输入框处理中文输入法组合态\n      onCompositionStart,\n      onCompositionEnd,\n      // Popover 显隐\n      activeParamPopoverRowId,\n      paramNamesLoading,\n      chartDetailVisible,\n      chartTitle,\n      chartContainer,\n      chartInstance,\n      chartThumbnails,\n      currentChartData,\n      handleVisualization,\n      confirmVisualization,\n      exportChartAsImage,\n      showChartDetail,\n      deleteChartThumbnail,\n      deleteCurrentChart,\n      onChartDialogOpened,\n      // 计数功能相关\n      logCounts,\n      errorCodeCounts,\n      globalErrorCodeCounts,\n      filteredErrorCodeCounts,\n      statisticsCache,\n      getErrorCodeCount,\n      getErrorCodeCountDisplay,\n      getErrorCodeStatisticsTooltip,\n      hasActiveFilters,\n      showStatisticsForErrorCode,\n      toggleErrorCodeStatistics,\n      fetchStatisticsFromBackend,\n      fetchGlobalStatistics,\n      fetchFilteredStatistics,\n      loadCountsFromStorage,\n      showErrorCodeStatistics,\n      // 数据比对相关\n      showCompareDialog,\n      compareData,\n    }\n  }\n}\n</script>\n\n<style scoped>\n.batch-analysis-container {\n  padding: 0;\n  height: 100vh;\n  overflow: auto;\n  background-color: #f5f7fa;\n  box-sizing: border-box;\n}\n\n.analysis-card {\n  /* 使用外层 wrapper 控制留白，卡片高度自适应 */\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 16px;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n  overflow: visible;\n}\n\n.analysis-card-wrapper {\n  padding: 16px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: none;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.title {\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.log-info {\n  margin: 10px 20px;\n}\n\n.log-info .el-descriptions {\n  font-size: 12px;\n}\n\n.log-info .el-descriptions__label {\n  font-size: 11px;\n  font-weight: 600;\n}\n\n.log-info .el-descriptions__label,\n.log-info .el-descriptions__content {\n  white-space: normal;\n  word-break: break-word;\n}\n\n/* 自定义列宽样式 */\n.log-info .el-descriptions__body {\n  width: 100%;\n}\n\n.log-info .el-descriptions__table {\n  width: 100%;\n  table-layout: fixed;\n}\n\n.log-info .el-descriptions__cell {\n  padding: 8px 12px;\n  vertical-align: top;\n}\n\n/* 文件名列 - 较宽 */\n.log-info .el-descriptions__cell:nth-child(1) {\n  width: 50%;\n}\n\n/* 设备编号列 - 较窄 */\n.log-info .el-descriptions__cell:nth-child(2) {\n  width: 15%;\n}\n\n/* 文件大小列 - 较窄 */\n.log-info .el-descriptions__cell:nth-child(3) {\n  width: 20%;\n}\n\n/* 上传用户ID列 - 较宽 */\n.log-info .el-descriptions__cell:nth-child(4) {\n  width: 15%;\n}\n\n.logs-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n}\n\n.search-section {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 0 10px 5px 10px;\n  padding: 16px;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n}\n\n.search-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 12px;\n  align-items: start;\n}\n\n.grid-item {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.item-title {\n  font-size: 12px;\n  color: #909399;\n}\n\n.search-input {\n  width: 100%;\n}\n\n.keyword-field-select {\n  width: 110px;\n}\n\n.time-range {\n  width: 100%;\n}\n\n.advanced-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.advanced-summary {\n  font-size: 12px;\n  color: #606266;\n}\n\n.search-expression {\n  margin-top: 6px;\n  font-size: 12px;\n  color: #606266;\n  padding: 6px 8px;\n  background: #f9fafb;\n  border: 1px dashed #e4e7ed;\n  border-radius: 6px;\n}\n\n.search-expression .label {\n  color: #909399;\n  margin-right: 6px;\n}\n\n/* 高级筛选弹窗结构化分区 */\n.advanced-filter .section {\n  margin-bottom: 16px;\n  background: #fff;\n}\n.advanced-filter .section-title {\n  font-size: 13px;\n  font-weight: 600;\n  margin-bottom: 8px;\n  color: #606266;\n}\n.section-title-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n.logic-row {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n.advanced-filter .conditions .condition + .condition {\n  margin-top: 2px;\n}\n\n/* 高级搜索组逻辑：根据层级缩进显示 */\n.advanced-filter .group-box {\n  border-left: 2px dashed #e4e7ed;\n  margin-left: 10px;\n  padding-left: 10px;\n}\n.advanced-filter .group-header.nested {\n  margin-left: 8px;\n}\n.advanced-filter .group-root {\n  margin-top: 10px;\n}\n.template-tags, .tags-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n}\n.tags-ops {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n.tags-ops .hint {\n  font-size: 12px;\n  color: #909399;\n}\n.ops-right {\n  display: flex;\n  gap: 8px;\n}\n.expr-preview {\n  margin: 6px 0 10px 0;\n  font-size: 12px;\n  color: #606266;\n  padding: 6px 8px;\n  background: #f9fafb;\n  border: 1px dashed #e4e7ed;\n  border-radius: 6px;\n}\n.expr-preview .label {\n  color: #909399;\n  margin-right: 6px;\n}\n.antd-tags .tpl-tag {\n  margin: 4px 6px 0 0;\n}\n.antd-tags .tpl-tag.bordered {\n  border: 1px solid #d9d9d9;\n  padding: 4px 8px;\n  border-radius: 4px;\n  background-color: #fafafa;\n}\n.antd-tags.single-select .tpl-tag.ant-tag-checkable-checked {\n  border-color: #1677ff;\n  color: #1677ff;\n  background: #e6f4ff;\n}\n.import-text {\n  margin-top: 8px;\n}\n.import-actions {\n  margin-top: 8px;\n  display: flex;\n  gap: 8px;\n}\n\n.entries-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: visible;\n  margin: 0 10px 5px 10px;\n  padding: 10px;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n}\n\n.table-container {\n  flex: 1;\n  overflow: visible;\n  padding: 0 0 4px 0;\n  width: 100%;\n}\n\n/* 使用 Element Plus 默认表格样式 */\n\n/* 颜色标记行样式 - 四种颜色 */\n.el-table .el-table__row.row-marked-red,\n.el-table__body tr.row-marked-red {\n  background-color: rgba(255, 0, 0, 0.2) !important;\n}\n\n.el-table .el-table__row.row-marked-red:hover {\n  background-color: rgba(255, 0, 0, 0.3) !important;\n}\n\n.el-table .el-table__row.row-marked-yellow,\n.el-table__body tr.row-marked-yellow {\n  background-color: rgba(255, 255, 0, 0.2) !important;\n}\n\n.el-table .el-table__row.row-marked-yellow:hover {\n  background-color: rgba(255, 255, 0, 0.3) !important;\n}\n\n.el-table .el-table__row.row-marked-blue,\n.el-table__body tr.row-marked-blue {\n  background-color: rgba(0, 0, 255, 0.2) !important;\n}\n\n.el-table .el-table__row.row-marked-blue:hover {\n  background-color: rgba(0, 0, 255, 0.3) !important;\n}\n\n.el-table .el-table__row.row-marked-green,\n.el-table__body tr.row-marked-green {\n  background-color: rgba(0, 255, 0, 0.2) !important;\n}\n\n.el-table .el-table__row.row-marked-green:hover {\n  background-color: rgba(0, 255, 0, 0.3) !important;\n}\n\n\n.color-radio {\n  width: 12px !important;\n  height: 12px !important;\n  border-radius: 50% !important;\n  border: 2px solid #ddd !important;\n  position: relative;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n}\n\n.color-radio.active {\n  border-color: #409eff !important;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2) !important;\n}\n\n.color-radio.active::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background-color: white;\n  border: 1px solid #409eff;\n}\n\n/* 列头样式，与 Logs.vue 保持一致 */\n.col-header {\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 8px;\n  text-align: left;\n}\n\n/* 故障码列的特殊列头样式 */\n.col-header:has(.header-hint) {\n  flex-direction: column;\n  gap: 2px;\n}\n\n.header-hint {\n  font-size: 10px;\n  color: #909399;\n  font-weight: normal;\n  font-style: italic;\n}\n\n/* 让释义列的 tooltip 在表格外也能显示 */\n.explanation-tooltip {\n  max-width: 60vw;\n  white-space: normal;\n}\n\n\n.el-popper.explanation-tooltip {\n  overflow: visible;\n}\n\n.explanation-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  min-height: 32px;\n  padding: 2px 0;\n}\n\n.explanation-ellipsis {\n  display: inline-block;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-size: 14px !important;\n  font-weight: 500 !important;\n  color: #606266 !important;\n  line-height: 1.4;\n}\n\n/* 黑色背景的暗色气泡 */\n.explanation-tooltip.dark {\n  background: rgba(0,0,0,0.85);\n  color: #fff;\n  border: none;\n}\n.explanation-tooltip.dark .el-tooltip__popper {\n  background: rgba(0,0,0,0.85);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px 10px 0 20px;\n}\n\n.section-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 12px;\n}\n\n.loading-section {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n  background-color: #fafafa;\n  border-radius: 8px;\n  margin: 20px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin: 10px 20px;\n  padding: 8px 0;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n}\n\n/* 时间戳/文件名单元格样式 */\n.file-info-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100%;\n  min-height: 32px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.timestamp {\n  color: #303133;\n  font-weight: 500;\n  font-size: 14px;\n  text-align: left;\n}\n\n.parameters-cell {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 40px;\n  width: 100%;\n  color: #606266;\n  word-break: break-all;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.4;\n  padding: 2px 0;\n}\n\n.parameters-cell .param-item {\n  margin-right: 12px;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n}\n\n.parameters-cell .param-item:last-child {\n  margin-right: 0;\n}\n\n.param-content {\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-right: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n}\n\n.param-actions {\n  flex-shrink: 0;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.visualization-btn {\n  font-size: 20px;\n  padding: 1px;\n  height: 28px;\n  width: 28px;\n  min-width: 24px;\n  min-height: 24px;\n  border-radius: 3px;\n  color: #409eff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.visualization-btn:hover {\n  color: #66b1ff;\n  transform: scale(1.05);\n}\n\n.visualization-btn:disabled {\n  color: #c0c4cc;\n  background-color: transparent;\n}\n\n/* 参数选择 Popover 单列排版 */\n.parameter-popover {\n  text-align: left;\n}\n.parameter-popover .param-radio-group {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.parameter-popover .param-radio-group .el-radio {\n  display: block;\n  margin: 1px 0 !important;\n}\n\n/* 提升弹层内 radio 的样式优先级，避免被全局样式覆盖 */\n.param-popover .el-radio,\n.param-popover .el-radio__label,\n.param-popover .el-radio-group .el-radio {\n  margin: 1px 0 !important;\n}\n\n.parameter-select-dialog {\n  padding: 20px 0;\n}\n\n.parameter-select-dialog p {\n  margin-bottom: 16px;\n  color: #606266;\n}\n\n.dialog-actions {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.dialog-actions .el-button {\n  margin-left: 8px;\n}\n\n.chart-detail {\n  padding: 0;\n}\n\n.chart-detail-header {\n  display: none;\n}\n\n.chart-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.chart-container {\n  background: transparent;\n  border-radius: 4px;\n  padding: 5px 5px 5px 5px;\n  text-align: center;\n}\n\n.dialog-subtitle {\n  text-align: left;\n  font-size: 14px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0 0 8px 0;\n}\n\n.operations-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  min-height: 32px;\n  padding: 1px;\n  gap: 1px;\n}\n\n\n.error-code-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  min-height: 20px;\n  cursor: pointer;\n  padding: 0px 10px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  border: 1px solid transparent;\n  box-sizing: border-box;\n  font-weight: 500;\n  font-size: 14px;\n  position: relative;\n  margin: 0;\n}\n\n.error-code-cell:hover {\n  background-color: #f5f7fa;\n  border-color: #e4e7ed;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n\n\n.error-code-badge {\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  background-color: #f56c6c;\n  color: white;\n  font-size: 10px;\n  font-weight: bold;\n  padding: 2px 5px;\n  border-radius: 8px;\n  min-width: 16px;\n  height: 16px;\n  line-height: 12px;\n  text-align: center;\n  box-shadow: 0 2px 6px rgba(245, 108, 108, 0.4);\n  z-index: 1000;\n  transform: scale(1);\n  transition: all 0.3s ease;\n  animation: badgeAppear 0.3s ease-out;\n  white-space: nowrap;\n  pointer-events: none;\n}\n\n.error-code-badge:hover {\n  transform: scale(1.1);\n  box-shadow: 0 3px 8px rgba(245, 108, 108, 0.6);\n}\n\n@keyframes badgeAppear {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n\n.error-code-count-popup {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  background-color: #e6a23c;\n  color: white;\n  font-size: 10px;\n  padding: 2px 6px;\n  border-radius: 10px;\n  min-width: 20px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  z-index: 10;\n  white-space: nowrap;\n}\n\n.operations-cell .operation-btn {\n  font-size: 20px;\n  font-weight: 500;\n  padding: 1px;\n  height: 28px;\n  width: 28px;\n  min-width: 24px;\n  min-height: 24px;\n  border-radius: 3px;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 查看上下文按钮 - 绿色 */\n.operations-cell .operation-btn:nth-child(2) {\n  color: #67c23a;\n}\n\n.operations-cell .operation-btn:nth-child(2):hover {\n  color: #85ce61;\n  transform: scale(1.05);\n}\n\n/* 日志摘取按钮 - 橙色 */\n.operations-cell .operation-btn:nth-child(3) {\n  color: #e6a23c;\n}\n\n.operations-cell .operation-btn:nth-child(3):hover {\n  color: #ebb563;\n  transform: scale(1.05);\n}\n\n/* 备注按钮 - 蓝色 */\n.operations-cell .operation-btn:nth-child(4) {\n  color: #409eff;\n  cursor: pointer;\n}\n\n.operations-cell .operation-btn:nth-child(4):hover {\n  color: #66b1ff;\n  transform: scale(1.05);\n}\n\n/* 颜色指示器样式 - 默认小圆点 */\n.color-indicator {\n  width: 10px;\n  height: 10px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background-color: transparent;\n  box-shadow: 0 0 0 2px white;\n  flex-shrink: 0;\n  position: relative;\n  z-index: 10;\n}\n\n.color-indicator:hover {\n  border-color: #409eff;\n  transform: scale(1.1);\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2), 0 0 0 1px white;\n}\n\n.color-indicator.has-color {\n  border-color: transparent;\n  box-shadow: 0 0 0 1px white;\n}\n\n.color-mark-cell {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 28px;\n  padding: 0px 0;\n}\n\n/* 标记列样式 */\n.el-table-column[prop=\"color_mark\"] .cell {\n  padding: 0px 0px !important;\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  min-height: 28px !important;\n  overflow: visible !important;\n}\n\n/* 故障码列特殊样式 - 确保统计角标完全显示 */\n.el-table-column[prop=\"error_code\"] .cell {\n  padding: 0px 0px !important;\n  overflow: visible !important;\n  position: relative !important;\n  z-index: 1 !important;\n  min-height: 28px !important;\n  font-size: 14px !important;\n  font-weight: 500 !important;\n  margin: 0px !important;\n  border: none !important;\n}\n\n/* 确保表格行有足够的高度 */\n.el-table .el-table__row {\n  min-height: 28px !important;\n  overflow: visible !important;\n}\n\n/* 确保表格容器不会裁剪悬浮元素，但保持滚动功能 */\n.el-table {\n  overflow: visible !important;\n  width: 100% !important;\n  table-layout: fixed !important;\n  min-width: 100% !important;\n}\n\n/* 表格单元格基础样式 */\n.el-table .el-table__cell {\n  height: auto !important;\n  min-height: 20px !important;\n  max-height: none !important;\n  padding: 2px 6px !important;\n  overflow: visible !important;\n  vertical-align: middle !important;\n}\n\n/* 表格单元格内容样式 */\n.el-table--default .cell {\n  height: auto !important;\n  min-height: 20px !important;\n  max-height: none !important;\n  padding: 2px 6px !important;\n  overflow: visible !important;\n}\n\n/* 表格列分割线样式 */\n.el-table .el-table__cell {\n  border-right: 1px solid #ebeef5 !important;\n}\n\n.el-table .el-table__cell:last-child {\n  border-right: none !important;\n}\n\n/* 表头单元格样式 */\n.el-table__header .el-table__cell {\n  box-sizing: border-box !important;\n}\n\n\n/* 确保表格头部正确显示 */\n.el-table__header-wrapper {\n  width: 100% !important;\n}\n\n.el-table__header {\n  width: 100% !important;\n}\n\n/* 确保表格体正确显示 */\n.el-table__body-wrapper {\n  width: 100% !important;\n}\n\n.el-table__body {\n  width: 100% !important;\n}\n\n.el-table__body-wrapper {\n  overflow-x: auto !important;\n  overflow-y: visible !important;\n}\n\n/* 强制确保故障码角标不被裁剪 */\n.el-table-column[prop=\"error_code\"] {\n  overflow: visible !important;\n}\n\n.el-table-column[prop=\"error_code\"] .cell > div {\n  overflow: visible !important;\n  position: relative !important;\n}\n\n\n\n/* 颜色选择器弹窗样式 */\n.color-picker-popover {\n  padding: 8px !important;\n}\n\n.color-picker-menu {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n/* 颜色选择器选项样式 */\n.color-option {\n  width: 20px;\n  height: 20px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  z-index: 10;\n}\n\n.color-option:hover {\n  transform: scale(1.1);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n}\n\n.color-option.active {\n  border-color: #409eff;\n  border-width: 3px;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.3);\n}\n\n.color-option.no-color {\n  background-color: #f5f5f5;\n  border-color: #ccc;\n}\n\n.color-option.no-color:hover {\n  border-color: #409eff;\n  background-color: #f0f8ff;\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.2);\n}\n\n.color-option.no-color.active {\n  border-color: #409eff;\n  background-color: #e6f3ff;\n  border-width: 3px;\n}\n\n.checkmark {\n  color: white;\n  font-size: 12px;\n  font-weight: bold;\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\n  line-height: 1;\n}\n\n\n/* 上下文分析对话框样式 */\n.context-analysis-form {\n  padding: 10px 0;\n}\n\n.context-intro {\n  margin-bottom: 6px;\n  text-align: left;\n  color: #606266;\n}\n\n.time-range-inputs {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n}\n\n.time-range-inputs .input-group {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.time-range-inputs .input-group label {\n  font-weight: 500;\n  color: #606266;\n}\n\n.time-range-inputs .unit-label {\n  white-space: nowrap;\n  display: inline-block;\n}\n\n/* 日志摘取侧边栏样式 */\n.clipboard-container {\n  padding: 16px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.clipboard-header {\n  margin-bottom: 16px;\n}\n\n.clipboard-thumbnail {\n  position: relative;\n  width: 100%;\n  border: 1px solid #ebeef5;\n  border-radius: 6px;\n  background-color: #fafafa;\n  padding: 16px 16px;\n  min-height: 120px; /* 高度增至约3倍 */\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  transition: all 0.2s ease;\n}\n.clipboard-thumbnail:hover {\n  border-color: #409EFF;\n  background-color: #f0f9ff;\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.1);\n}\n\n.clipboard-thumbnail .thumb-row {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #606266;\n}\n\n.clipboard-thumbnail .thumb-row .el-icon {\n  font-size: 18px;\n}\n\n.clipboard-thumbnail .thumb-label {\n  font-size: 13px;\n  font-weight: 600;\n}\n\n.clipboard-thumbnail .fill-bar {\n  position: relative;\n  width: 100%;\n  height: 10px;\n  background-color: #ebeef5;\n  border-radius: 6px;\n  overflow: hidden;\n}\n\n.clipboard-thumbnail .fill-bar-inner {\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  background: linear-gradient(90deg, #a0cfff 0%, #409EFF 100%);\n}\n\n.clipboard-thumbnail .fill-bar-text {\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 12px;\n  color: #303133;\n}\n\n.clipboard-thumbnail .delete-btn {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.clipboard-thumbnail:hover .delete-btn {\n  opacity: 1;\n}\n\n/* 图表缩略图样式 */\n.chart-thumbnails {\n  margin-top: 16px;\n  border-top: 1px solid #ebeef5;\n  padding-top: 16px;\n}\n\n.thumbnails-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #303133;\n  margin-bottom: 12px;\n}\n\n.thumbnail-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.chart-thumbnail-item {\n  position: relative;\n  border: 1px solid #ebeef5;\n  border-radius: 6px;\n  padding: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background-color: #fafafa;\n}\n\n.chart-thumbnail-item:hover {\n  border-color: #409eff;\n  background-color: #f0f9ff;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.2);\n}\n\n.thumbnail-chart {\n  width: 100%;\n  height: 104px;\n  margin-bottom: 8px;\n}\n\n.thumbnail-info {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.thumbnail-title {\n  font-size: 12px;\n  font-weight: 500;\n  color: #303133;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.thumbnail-time {\n  font-size: 10px;\n  color: #909399;\n}\n\n.thumbnail-delete-btn {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  width: 20px;\n  height: 20px;\n  min-width: 20px;\n  padding: 0;\n  opacity: 0;\n  transition: opacity 0.2s ease, background-color 0.15s ease, color 0.15s ease, border-color 0.15s ease;\n  color: #909399;\n  border-color: #dcdfe6;\n  background-color: transparent;\n}\n\n.thumbnail-delete-btn:hover {\n  background-color: #2d3c60; /* Element Plus gray-100 */\n  border-color: #2d3c60;\n  color: #000000;\n}\n\n.chart-thumbnail-item:hover .thumbnail-delete-btn {\n  opacity: 1;\n}\n\n/* 日志摘取详情弹窗样式 */\n.clipboard-detail {\n  padding: 16px 0;\n}\n\n.clipboard-detail-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.detail-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.clipboard-content {\n  margin-bottom: 20px;\n}\n\n.clipboard-textarea {\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  line-height: 1.4;\n}\n\n.clipboard-entries {\n  border-top: 1px solid #ebeef5;\n  padding-top: 16px;\n}\n\n.entries-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #303133;\n  margin-bottom: 12px;\n}\n\n.entries-list {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.entry-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 12px;\n  margin-bottom: 4px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n  border: 1px solid #ebeef5;\n}\n\n.entry-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n}\n\n.entry-index {\n  font-weight: 500;\n  color: #606266;\n  min-width: 20px;\n}\n\n.entry-timestamp {\n  font-size: 12px;\n  color: #909399;\n  font-family: 'Courier New', monospace;\n}\n\n.entry-error-code {\n  font-weight: 500;\n  color: #e6a23c;\n  background-color: #fdf6ec;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n\n</style>\n\n<style>\n/* tooltip 悬浮效果（仅阴影与圆角，无缩放生长动效） */\n.selected-files-popper {\n  box-shadow: var(--el-box-shadow-light, 0 8px 24px rgba(0, 0, 0, 0.12));\n  border: 1px solid #ebeef5;\n  border-radius: 6px;\n  padding: 6px 8px;\n}\n\n.selected-files-tooltip {\n  max-width: 480px;\n  max-height: 240px;\n  overflow: auto;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n/* 新增的表格单元格样式 */\n.file-info-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100%;\n  min-height: 32px;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.timestamp {\n  color: #303133;\n  font-weight: 500;\n  font-size: 14px;\n  text-align: left;\n}\n\n.parameters-cell {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 40px;\n  width: 100%;\n  color: #606266;\n  word-break: break-all;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.4;\n  padding: 2px 0;\n}\n\n.parameters-cell .param-item {\n  margin-right: 12px;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n}\n\n.parameters-cell .param-item:last-child {\n  margin-right: 0;\n}\n\n.param-content {\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-right: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n}\n\n.param-actions {\n  flex-shrink: 0;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.visualization-btn {\n  font-size: 20px;\n  padding: 1px;\n  height: 28px;\n  width: 28px;\n  min-width: 24px;\n  min-height: 24px;\n  border-radius: 3px;\n  color: #409eff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.visualization-btn:hover {\n  color: #66b1ff;\n  transform: scale(1.05);\n}\n\n.visualization-btn:disabled {\n  color: #c0c4cc;\n  background-color: transparent;\n}\n\n/* 参数选择 Popover 单列排版 */\n.parameter-popover {\n  text-align: left;\n}\n.parameter-popover .param-radio-group {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.parameter-popover .param-radio-group .el-radio {\n  display: block;\n  margin: 1px 0 !important;\n}\n\n/* 提升弹层内 radio 的样式优先级，避免被全局样式覆盖 */\n.param-popover .el-radio,\n.param-popover .el-radio__label,\n.param-popover .el-radio-group .el-radio {\n  margin: 1px 0 !important;\n}\n\n.parameter-select-dialog {\n  padding: 20px 0;\n}\n\n.parameter-select-dialog p {\n  margin-bottom: 16px;\n  color: #606266;\n}\n\n.dialog-actions {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.dialog-actions .el-button {\n  margin-left: 8px;\n}\n\n.chart-detail {\n  padding: 0;\n}\n\n.chart-detail-header {\n  display: none;\n}\n\n.chart-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.chart-container {\n  background: transparent;\n  border-radius: 4px;\n  padding: 10px 10px 20px 10px;\n  text-align: center;\n}\n\n.dialog-subtitle {\n  text-align: left;\n  font-size: 14px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0 0 8px 0;\n}\n\n.operations-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  min-height: 32px;\n  padding: 1px;\n  gap: 1px;\n}\n\n\n.error-code-cell {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  min-height: 20px;\n  cursor: pointer;\n  padding: 0px 10px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  border: 1px solid transparent;\n  box-sizing: border-box;\n  font-weight: 500;\n  font-size: 14px;\n  position: relative;\n  margin: 0;\n}\n\n.error-code-cell:hover {\n  background-color: #f5f7fa;\n  border-color: #e4e7ed;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n\n\n.error-code-badge {\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  background-color: #f56c6c;\n  color: white;\n  font-size: 10px;\n  font-weight: bold;\n  padding: 2px 5px;\n  border-radius: 8px;\n  min-width: 16px;\n  height: 16px;\n  line-height: 12px;\n  text-align: center;\n  box-shadow: 0 2px 6px rgba(245, 108, 108, 0.4);\n  z-index: 1000;\n  transform: scale(1);\n  transition: all 0.3s ease;\n  animation: badgeAppear 0.3s ease-out;\n  white-space: nowrap;\n  pointer-events: none;\n}\n\n.error-code-badge:hover {\n  transform: scale(1.1);\n  box-shadow: 0 3px 8px rgba(245, 108, 108, 0.6);\n}\n\n@keyframes badgeAppear {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n\n.error-code-count-popup {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  background-color: #e6a23c;\n  color: white;\n  font-size: 10px;\n  padding: 2px 6px;\n  border-radius: 10px;\n  min-width: 20px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  z-index: 10;\n  white-space: nowrap;\n}\n\n.operations-cell .operation-btn {\n  font-size: 20px;\n  font-weight: 500;\n  padding: 1px;\n  height: 28px;\n  width: 28px;\n  min-width: 24px;\n  min-height: 24px;\n  border-radius: 3px;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 查看上下文按钮 - 绿色 */\n.operations-cell .operation-btn:nth-child(2) {\n  color: #67c23a;\n}\n\n.operations-cell .operation-btn:nth-child(2):hover {\n  color: #85ce61;\n  transform: scale(1.05);\n}\n\n/* 日志摘取按钮 - 橙色 */\n.operations-cell .operation-btn:nth-child(3) {\n  color: #e6a23c;\n}\n\n.operations-cell .operation-btn:nth-child(3):hover {\n  color: #ebb563;\n  transform: scale(1.05);\n}\n\n/* 备注按钮 - 灰色（禁用状态） */\n.operations-cell .operation-btn:nth-child(4) {\n  color: #c0c4cc;\n  cursor: not-allowed;\n}\n\n.operations-cell .operation-btn:nth-child(4):hover {\n  color: #c0c4cc;\n  transform: none;\n}\n\n/* 颜色指示器样式 - 默认小圆点 */\n.color-indicator {\n  width: 10px;\n  height: 10px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background-color: transparent;\n  box-shadow: 0 0 0 2px white;\n  flex-shrink: 0;\n  position: relative;\n  z-index: 10;\n}\n\n.color-indicator:hover {\n  border-color: #409eff;\n  transform: scale(1.1);\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2), 0 0 0 1px white;\n}\n\n.color-indicator.has-color {\n  border-color: transparent;\n  box-shadow: 0 0 0 1px white;\n}\n\n.color-mark-cell {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 28px;\n  padding: 0px 0;\n}\n\n/* 标记列样式 */\n.el-table-column[prop=\"color_mark\"] .cell {\n  padding: 0px 0px !important;\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  min-height: 28px !important;\n  overflow: visible !important;\n}\n\n/* 故障码列特殊样式 - 确保统计角标完全显示 */\n.el-table-column[prop=\"error_code\"] .cell {\n  padding: 0px 0px !important;\n  overflow: visible !important;\n  position: relative !important;\n  z-index: 1 !important;\n  min-height: 28px !important;\n  font-size: 14px !important;\n  font-weight: 500 !important;\n  margin: 0px !important;\n  border: none !important;\n}\n\n/* 确保表格行有足够的高度 */\n.el-table .el-table__row {\n  min-height: 28px !important;\n  overflow: visible !important;\n}\n\n/* 确保表格容器不会裁剪悬浮元素，但保持滚动功能 */\n.el-table {\n  overflow: visible !important;\n  width: 100% !important;\n  table-layout: fixed !important;\n  min-width: 100% !important;\n}\n\n/* 表格单元格基础样式 */\n.el-table .el-table__cell {\n  height: auto !important;\n  min-height: 20px !important;\n  max-height: none !important;\n  padding: 2px 6px !important;\n  overflow: visible !important;\n  vertical-align: middle !important;\n}\n\n/* 表格单元格内容样式 */\n.el-table--default .cell {\n  height: auto !important;\n  min-height: 20px !important;\n  max-height: none !important;\n  padding: 2px 6px !important;\n  overflow: visible !important;\n}\n\n/* 表格列分割线样式 */\n.el-table .el-table__cell {\n  border-right: 1px solid #ebeef5 !important;\n}\n\n.el-table .el-table__cell:last-child {\n  border-right: none !important;\n}\n\n/* 表头单元格样式 */\n.el-table__header .el-table__cell {\n  box-sizing: border-box !important;\n}\n\n\n/* 确保表格头部正确显示 */\n.el-table__header-wrapper {\n  width: 100% !important;\n}\n\n.el-table__header {\n  width: 100% !important;\n}\n\n/* 确保表格体正确显示 */\n.el-table__body-wrapper {\n  width: 100% !important;\n}\n\n.el-table__body {\n  width: 100% !important;\n}\n\n.el-table__body-wrapper {\n  overflow-x: auto !important;\n  overflow-y: visible !important;\n}\n\n/* 强制确保故障码角标不被裁剪 */\n.el-table-column[prop=\"error_code\"] {\n  overflow: visible !important;\n}\n\n.el-table-column[prop=\"error_code\"] .cell > div {\n  overflow: visible !important;\n  position: relative !important;\n}\n\n\n\n/* 颜色选择器弹窗样式 */\n.color-picker-popover {\n  padding: 8px !important;\n}\n\n.color-picker-menu {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n/* 颜色选择器选项样式 */\n.color-option {\n  width: 20px;\n  height: 20px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  z-index: 10;\n}\n\n.color-option:hover {\n  transform: scale(1.1);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n}\n\n.color-option.active {\n  border-color: #409eff;\n  border-width: 3px;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.3);\n}\n\n.color-option.no-color {\n  background-color: #f5f5f5;\n  border-color: #ccc;\n}\n\n.color-option.no-color:hover {\n  border-color: #409eff;\n  background-color: #f0f8ff;\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.2);\n}\n\n.color-option.no-color.active {\n  border-color: #409eff;\n  background-color: #e6f3ff;\n  border-width: 3px;\n}\n\n.checkmark {\n  color: white;\n  font-size: 12px;\n  font-weight: bold;\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\n  line-height: 1;\n}\n\n\n/* 上下文分析对话框样式 */\n.context-analysis-form {\n  padding: 10px 0;\n}\n\n.time-range-inputs {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.time-range-inputs .input-group {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.time-range-inputs .input-group label {\n  font-weight: 500;\n  color: #606266;\n}\n\n/* 日志摘取侧边栏样式 */\n.clipboard-container {\n  padding: 16px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.clipboard-header {\n  margin-bottom: 16px;\n}\n\n.clipboard-thumbnail {\n  position: relative;\n  width: 100%;\n  border: 1px solid #ebeef5;\n  border-radius: 6px;\n  background-color: #fafafa;\n  padding: 16px 16px;\n  min-height: 180px; /* 高度增至约3倍 */\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.clipboard-thumbnail .thumb-row {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #606266;\n}\n\n.clipboard-thumbnail .thumb-row .el-icon {\n  font-size: 18px;\n}\n\n.clipboard-thumbnail .thumb-label {\n  font-size: 13px;\n  font-weight: 600;\n}\n\n.clipboard-thumbnail .delete-btn {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.clipboard-thumbnail:hover .delete-btn {\n  opacity: 1;\n}\n\n/* 图表缩略图样式 */\n.chart-thumbnails {\n  margin-top: 16px;\n  border-top: 1px solid #ebeef5;\n  padding-top: 16px;\n}\n\n.thumbnails-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #303133;\n  margin-bottom: 12px;\n}\n\n.thumbnail-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.chart-thumbnail-item {\n  position: relative;\n  border: 1px solid #ebeef5;\n  border-radius: 6px;\n  padding: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background-color: #fafafa;\n}\n\n.chart-thumbnail-item:hover {\n  border-color: #409eff;\n  background-color: #f0f9ff;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.2);\n}\n\n.thumbnail-chart {\n  width: 100%;\n  height: 104px;\n  margin-bottom: 8px;\n}\n\n.thumbnail-info {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.thumbnail-title {\n  font-size: 12px;\n  font-weight: 500;\n  color: #303133;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.thumbnail-time {\n  font-size: 10px;\n  color: #909399;\n}\n\n.thumbnail-delete-btn {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  width: 20px;\n  height: 20px;\n  min-width: 20px;\n  padding: 0;\n  opacity: 0;\n  transition: opacity 0.2s ease, background-color 0.15s ease, color 0.15s ease, border-color 0.15s ease;\n  color: #909399;\n  border-color: #dcdfe6;\n  background-color: transparent;\n}\n\n.thumbnail-delete-btn:hover {\n  background-color: #2d3c60; /* Element Plus gray-100 */\n  border-color: #2d3c60;\n  color: #000000;\n}\n\n.chart-thumbnail-item:hover .thumbnail-delete-btn {\n  opacity: 1;\n}\n\n/* 日志摘取详情弹窗样式 */\n.clipboard-detail {\n  padding: 16px 0;\n}\n\n.clipboard-detail-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.detail-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.clipboard-content {\n  margin-bottom: 20px;\n}\n\n.clipboard-textarea {\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  line-height: 1.4;\n}\n\n.clipboard-entries {\n  border-top: 1px solid #ebeef5;\n  padding-top: 16px;\n}\n\n.entries-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #303133;\n  margin-bottom: 12px;\n}\n\n.entries-list {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.entry-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 12px;\n  margin-bottom: 4px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n  border: 1px solid #ebeef5;\n}\n\n.entry-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n}\n\n.entry-index {\n  font-weight: 500;\n  color: #606266;\n  min-width: 20px;\n}\n\n.entry-timestamp {\n  font-size: 12px;\n  color: #909399;\n  font-family: 'Courier New', monospace;\n}\n\n.entry-error-code {\n  font-weight: 500;\n  color: #e6a23c;\n  background-color: #fdf6ec;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n\n</style>\n\n<style>\n/* Notes popover styles */\n:deep(.notes-popover) {\n  max-height: 400px;\n  overflow-y: auto;\n}\n.notes-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n  font-weight: 600;\n}\n.notes-list .note-item { padding: 6px 0; border-bottom: 1px solid #f0f0f0; }\n.notes-list .note-item:last-child { border-bottom: none; }\n.note-meta { display: flex; gap: 8px; align-items: center; font-size: 12px; color: #909399; }\n.note-user.role-admin { color: #f56c6c; }\n.note-user.role-expert { color: #409eff; }\n.note-user.role-user { color: #909399; }\n.note-time { margin-left: auto; }\n.note-actions { margin-left: 8px; }\n.note-content { margin-top: 4px; font-size: 13px; color: #606266; white-space: pre-wrap; }\n.note-edit-actions { margin-top: 6px; text-align: right; }\n.notes-pagination { margin-top: 6px; text-align: right; }\n.notes-editor { margin-top: 8px; }\n.notes-editor-actions { margin-top: 6px; text-align: right; }\n</style>","<template>\n  <el-dialog\n    v-model=\"visible\"\n    title=\"手术数据比对\"\n    width=\"1200px\"\n    :close-on-click-modal=\"false\"\n    append-to-body\n  >\n    <div class=\"compare-container\">\n      <!-- 头部信息 -->\n      <div class=\"compare-header\">\n        <el-alert\n          type=\"warning\"\n          :title=\"`数据库中已存在手术ID为 ${surgeryId} 的手术数据，检测到 ${differences.length} 处差异`\"\n          show-icon\n          :closable=\"false\"\n          style=\"margin-bottom: 20px\"\n        />\n        \n        <div class=\"action-buttons\">\n          <el-button @click=\"visible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmOverride\" :loading=\"confirming\">\n            确认覆盖\n          </el-button>\n        </div>\n      </div>\n\n      <!-- 差异列表 -->\n      <div class=\"differences-section\">\n        <h3>数据差异详情</h3>\n        <el-table :data=\"differences\" style=\"width: 100%\" max-height=\"500\">\n          <el-table-column prop=\"fieldName\" label=\"字段名称\" width=\"200\" />\n           <el-table-column label=\"原有数据\" min-width=\"250\">\n             <template #default=\"{ row }\">\n               <div class=\"value-cell old-value\">\n                 <pre>{{ formatValue(row.oldValue, row.fieldName, 'old') }}</pre>\n               </div>\n             </template>\n           </el-table-column>\n           <el-table-column label=\"新数据\" min-width=\"250\">\n             <template #default=\"{ row }\">\n               <div class=\"value-cell new-value\">\n                 <pre>{{ formatValue(row.newValue, row.fieldName, 'new') }}</pre>\n               </div>\n             </template>\n           </el-table-column>\n          <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\n            <template #default=\"{ row }\">\n              <el-tag :type=\"getTypeColor(row.type)\">\n                {{ getTypeLabel(row.type) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <!-- 详细比对 -->\n      <div v-if=\"showDetailedCompare\" class=\"detailed-compare-section\">\n        <h3>详细数据比对</h3>\n        <el-tabs v-model=\"activeTab\">\n           <el-tab-pane label=\"基础信息\" name=\"basic\">\n             <div class=\"compare-grid\">\n               <div class=\"compare-column\">\n                 <h4>数据库中的数据</h4>\n                 <pre class=\"json-display\">{{ formatJSONForDisplay(existingData) }}</pre>\n               </div>\n               <div class=\"compare-column\">\n                 <h4>新分析的数据</h4>\n                 <pre class=\"json-display\">{{ formatJSONForDisplay(newData) }}</pre>\n               </div>\n             </div>\n           </el-tab-pane>\n           \n           <el-tab-pane label=\"结构化数据\" name=\"structured\">\n             <div class=\"compare-grid\">\n               <div class=\"compare-column\">\n                 <h4>数据库中的结构化数据</h4>\n                 <pre class=\"json-display\">{{ formatJSONForDisplay(existingData.structured_data) }}</pre>\n               </div>\n               <div class=\"compare-column\">\n                 <h4>新分析的结构化数据</h4>\n                 <pre class=\"json-display\">{{ formatJSONForDisplay(newData.structured_data) }}</pre>\n               </div>\n             </div>\n           </el-tab-pane>\n        </el-tabs>\n      </div>\n\n      <!-- 切换详细比对按钮 -->\n      <div class=\"toggle-section\">\n        <el-button \n          type=\"text\" \n          @click=\"showDetailedCompare = !showDetailedCompare\"\n          :icon=\"showDetailedCompare ? 'ArrowUp' : 'ArrowDown'\"\n        >\n          {{ showDetailedCompare ? '隐藏' : '显示' }}详细比对\n        </el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport api from '@/api'\nimport { loadServerTimezone, formatTime } from '@/utils/timeFormatter'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    default: false\n  },\n  surgeryId: {\n    type: String,\n    required: true\n  },\n  existingData: {\n    type: Object,\n    required: true\n  },\n  newData: {\n    type: Object,\n    required: true\n  },\n  differences: {\n    type: Array,\n    required: true\n  },\n  surgeryData: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'confirmed'])\n\nconst visible = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value)\n})\n\nconst confirming = ref(false)\nconst showDetailedCompare = ref(false)\nconst activeTab = ref('basic')\n\n// 组件挂载时加载服务器时区信息\nonMounted(async () => {\n  await loadServerTimezone()\n})\n\n// 用于记录已打印的字段，避免重复打印\nconst printedFields = new Set()\n\n// 格式化显示值，特别处理时间字段\nconst formatValue = (value, fieldName, dataType = 'old') => {\n  if (value === null || value === undefined) return '无'\n  \n  // 如果是时间相关字段，使用时间格式化\n  if (fieldName && (fieldName.includes('时间') || fieldName.includes('time'))) {\n    // 只记录原有数据的手术开始时间和结束时间，且只打印一次\n    if (dataType === 'old' && (fieldName === '开始时间' || fieldName === '结束时间') && !printedFields.has(fieldName)) {\n      console.log(`🔧 原有数据${fieldName}: ${value}`)\n      printedFields.add(fieldName)\n    }\n    if (typeof value === 'string' && value.trim() !== '') {\n      const formatted = formatTime(value)\n      if (dataType === 'old' && (fieldName === '开始时间' || fieldName === '结束时间') && printedFields.has(fieldName)) {\n        console.log(`🔧 原有数据${fieldName}转换后: ${formatted}`)\n        printedFields.delete(fieldName) // 打印后移除，避免重复\n      }\n      return formatted\n    }\n  }\n  \n  if (typeof value === 'object') {\n    return JSON.stringify(value, null, 2)\n  }\n  return String(value)\n}\n\n// 递归处理所有时间字段，将UTC时间转换为本地时间\nconst processAllTimeFields = (obj) => {\n  if (obj === null || obj === undefined) return obj\n  \n  if (Array.isArray(obj)) {\n    return obj.map(item => processAllTimeFields(item))\n  }\n  \n  if (typeof obj === 'object') {\n    const result = {}\n    for (const [key, value] of Object.entries(obj)) {\n      // 检查是否为时间字段\n      const isTimeField = key.toLowerCase().includes('time') || \n                         key.toLowerCase().includes('timestamp') ||\n                         key === 'start_time' || \n                         key === 'end_time' ||\n                         key === 'on_time' || \n                         key === 'off_time' ||\n                         key === 'created_at' ||\n                         key === 'updated_at' ||\n                         key === 'last_analyzed_at'\n      \n      if (isTimeField && value) {\n        result[key] = formatTime(value)\n      } else {\n        result[key] = processAllTimeFields(value)\n      }\n    }\n    return result\n  }\n  \n  return obj\n}\n\n// 格式化JSON数据用于显示，特别处理时间字段\nconst formatJSONForDisplay = (data) => {\n  if (!data) return '无'\n  \n  // 深拷贝数据以避免修改原始数据\n  const processedData = JSON.parse(JSON.stringify(data))\n  \n  // 递归处理所有时间字段\n  const result = processAllTimeFields(processedData)\n  \n  return JSON.stringify(result, null, 2)\n}\n\n\n// 获取类型颜色\nconst getTypeColor = (type) => {\n  const colorMap = {\n    'basic': 'primary',\n    'structured': 'success',\n    'arms': 'warning',\n    'stats': 'info',\n    'usage_count': 'danger',\n    'fault_count': 'danger'\n  }\n  return colorMap[type] || 'default'\n}\n\n// 获取类型标签\nconst getTypeLabel = (type) => {\n  const labelMap = {\n    'basic': '基础字段',\n    'structured': '结构化数据',\n    'arms': '器械数据',\n    'stats': '统计数据',\n    'usage_count': '使用次数',\n    'fault_count': '故障数量'\n  }\n  return labelMap[type] || type\n}\n\n// 确认覆盖\nconst confirmOverride = async () => {\n  try {\n    await ElMessageBox.confirm(\n      '确认要覆盖数据库中的手术数据吗？此操作不可撤销。',\n      '确认覆盖',\n      {\n        confirmButtonText: '确认覆盖',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }\n    )\n\n    confirming.value = true\n    \n    const response = await api.surgeryStatistics.confirmOverrideSurgeryData(\n      props.surgeryData, \n      true\n    )\n    \n    if (response.data.success) {\n      ElMessage.success('手术数据已成功覆盖到PostgreSQL数据库')\n      emit('confirmed')\n      visible.value = false\n    } else {\n      ElMessage.error(response.data.message || '覆盖失败')\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      console.error('覆盖手术数据失败:', error)\n      ElMessage.error('覆盖手术数据失败: ' + (error.response?.data?.message || error.message))\n    }\n  } finally {\n    confirming.value = false\n  }\n}\n</script>\n\n<style scoped>\n.compare-container {\n  max-height: 80vh;\n  overflow-y: auto;\n}\n\n.compare-header {\n  margin-bottom: 20px;\n}\n\n.action-buttons {\n  text-align: right;\n  margin-top: 10px;\n}\n\n.differences-section {\n  margin-bottom: 20px;\n}\n\n.differences-section h3 {\n  margin-bottom: 15px;\n  color: #303133;\n}\n\n.value-cell {\n  padding: 8px;\n  border-radius: 4px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 12px;\n  max-height: 100px;\n  overflow-y: auto;\n}\n\n.value-cell pre {\n  margin: 0;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.old-value {\n  background-color: #fef0f0;\n  border-left: 3px solid #f56c6c;\n}\n\n.new-value {\n  background-color: #f0f9ff;\n  border-left: 3px solid #409eff;\n}\n\n.detailed-compare-section {\n  margin-bottom: 20px;\n}\n\n.detailed-compare-section h3 {\n  margin-bottom: 15px;\n  color: #303133;\n}\n\n.compare-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-top: 15px;\n}\n\n.compare-column h4 {\n  margin-bottom: 10px;\n  color: #606266;\n  font-size: 14px;\n}\n\n.json-display {\n  background-color: #f5f7fa;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px;\n  padding: 15px;\n  font-size: 12px;\n  line-height: 1.4;\n  max-height: 400px;\n  overflow-y: auto;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.toggle-section {\n  text-align: center;\n  padding: 10px 0;\n  border-top: 1px solid #e4e7ed;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .compare-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n","import script from \"./SurgeryDataCompare.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SurgeryDataCompare.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SurgeryDataCompare.vue?vue&type=style&index=0&id=26daaf7f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-26daaf7f\"]])\n\nexport default __exports__","import { render } from \"./BatchAnalysis.vue?vue&type=template&id=b026608e&scoped=true\"\nimport script from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./BatchAnalysis.vue?vue&type=style&index=0&id=b026608e&scoped=true&lang=css\"\nimport \"./BatchAnalysis.vue?vue&type=style&index=1&id=b026608e&lang=css\"\nimport \"./BatchAnalysis.vue?vue&type=style&index=2&id=b026608e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b026608e\"]])\n\nexport default __exports__","/**\n * 手术数据适配器\n * 统一处理不同来源的手术数据，确保可视化组件能正确解析\n */\n\n/**\n * 将时间格式标准化为ISO UTC格式\n * 处理数据库中的UTC时间格式转换\n * @param {string} timeStr - 时间字符串\n * @returns {string} ISO格式的UTC时间字符串\n */\nfunction normalizeTimeToISO (timeStr) {\n  if (!timeStr) return null\n\n  try {\n    // 如果是数据库格式的UTC时间字符串 (YYYY-MM-DD HH:mm:ss)\n    if (typeof timeStr === 'string' && /^\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2}:\\d{2}$/.test(timeStr)) {\n      // 添加UTC标识符\n      const utcTime = timeStr.replace(' ', 'T') + 'Z'\n      const date = new Date(utcTime)\n\n      if (isNaN(date.getTime())) {\n        console.warn('⚠️ 无效的时间格式:', timeStr)\n        return timeStr\n      }\n\n      // 返回ISO格式的UTC时间\n      return date.toISOString()\n    }\n\n    // 如果已经是ISO格式或时间戳，直接返回\n    return timeStr\n  } catch (error) {\n    console.warn('⚠️ 时间转换失败:', timeStr, error)\n    return timeStr\n  }\n}\n\n/**\n * 统一的手术数据适配器\n * @param {Object} rawData - 原始手术数据（可能来自统计页面或数据库）\n * @returns {Object} 标准化的手术数据\n */\nexport function adaptSurgeryData (rawData) {\n  if (!rawData) {\n    console.warn('⚠️ 手术数据为空')\n    return null\n  }\n\n  console.log('🔧 开始适配手术数据:', rawData)\n\n  // 提取结构化数据\n  let structuredData = null\n  let metadata = {}\n\n  // 情况1：手术统计页面的数据格式\n  if (rawData.postgresql_row_preview?.structured_data) {\n    structuredData = rawData.postgresql_row_preview.structured_data\n    metadata = {\n      surgery_id: rawData.surgery_id || rawData.postgresql_row_preview.surgery_id,\n      // 统一标准化为ISO UTC\n      start_time: normalizeTimeToISO(rawData.surgery_start_time || rawData.postgresql_row_preview.start_time),\n      end_time: normalizeTimeToISO(rawData.surgery_end_time || rawData.postgresql_row_preview.end_time),\n      is_remote: rawData.is_remote_surgery || rawData.postgresql_row_preview.is_remote,\n      has_fault: rawData.has_error || rawData.postgresql_row_preview.has_fault,\n      device_ids: rawData.postgresql_row_preview.device_ids || [],\n      source_log_ids: rawData.postgresql_row_preview.source_log_ids || []\n    }\n  } else if (rawData.structured_data) {\n    // 情况2：数据库手术记录的数据格式\n    structuredData = rawData.structured_data\n    metadata = {\n      surgery_id: rawData.surgery_id,\n      start_time: normalizeTimeToISO(rawData.start_time),\n      end_time: normalizeTimeToISO(rawData.end_time),\n      is_remote: rawData.is_remote,\n      has_fault: rawData.has_fault,\n      device_ids: rawData.device_ids || [],\n      source_log_ids: rawData.source_log_ids || []\n    }\n  } else if (rawData.arms || rawData.surgery_stats || rawData.power_cycles) {\n    // 情况3：直接传入的结构化数据\n    structuredData = rawData\n    metadata = {\n      surgery_id: rawData.surgery_id,\n      start_time: normalizeTimeToISO(rawData.start_time || rawData.surgery_start_time),\n      end_time: normalizeTimeToISO(rawData.end_time || rawData.surgery_end_time),\n      is_remote: rawData.is_remote,\n      has_fault: rawData.has_fault,\n      device_ids: rawData.device_ids || [],\n      source_log_ids: rawData.source_log_ids || []\n    }\n  } else if (rawData.arm1_usage || rawData.state_machine_changes || rawData.alarm_details) {\n    // 情况4：手术统计页面的原始分析数据\n    structuredData = convertAnalysisDataToStructured(rawData)\n    metadata = {\n      surgery_id: rawData.surgery_id,\n      start_time: normalizeTimeToISO(rawData.surgery_start_time),\n      end_time: normalizeTimeToISO(rawData.surgery_end_time),\n      is_remote: rawData.is_remote_surgery,\n      has_fault: rawData.has_error,\n      device_ids: [],\n      source_log_ids: rawData.log_id ? [rawData.log_id] : []\n    }\n  }\n\n  if (!structuredData) {\n    console.warn('⚠️ 无法识别的数据格式:', rawData)\n    return null\n  }\n\n  // 标准化结构化数据\n  const standardizedData = standardizeStructuredData(structuredData)\n\n  // 合并元数据\n  const result = {\n    ...standardizedData,\n    ...metadata\n  }\n\n  console.log('✅ 手术数据适配完成:', result)\n  return result\n}\n\n/**\n * 将分析器原始数据转换为结构化数据格式\n * @param {Object} analysisData - 分析器原始数据\n * @returns {Object} 结构化数据\n */\nfunction convertAnalysisDataToStructured (analysisData) {\n  const structured = {\n    power_cycles: [],\n    arms: [],\n    surgery_stats: {\n      success: !analysisData.has_error,\n      network_latency_ms: [],\n      faults: [],\n      state_machine: [],\n      arm_switch_count: 0,\n      left_hand_clutch: 0,\n      right_hand_clutch: 0,\n      foot_clutch: 0,\n      endoscope_pedal: 0\n    }\n  }\n\n  // 转换器械使用数据\n  for (let i = 1; i <= 4; i++) {\n    const armUsage = analysisData[`arm${i}_usage`] || []\n    const instrumentUsage = armUsage.map(usage => ({\n      tool_type: usage.instrumentName || usage.tool_type || '未知器械',\n      udi: usage.udi || '无UDI',\n      start_time: normalizeTimeToISO(usage.startTime || usage.start_time),\n      end_time: normalizeTimeToISO(usage.endTime || usage.end_time),\n      energy_activation: []\n    }))\n\n    structured.arms.push({\n      arm_id: i,\n      instrument_usage: instrumentUsage\n    })\n  }\n\n  // 转换状态机数据\n  if (analysisData.state_machine_changes && Array.isArray(analysisData.state_machine_changes)) {\n    structured.surgery_stats.state_machine = analysisData.state_machine_changes.map(change => ({\n      time: normalizeTimeToISO(change.time),\n      state: change.stateName || String(change.state)\n    }))\n  }\n\n  // 转换网络延迟数据\n  if (analysisData.network_latency_data && Array.isArray(analysisData.network_latency_data)) {\n    structured.surgery_stats.network_latency_ms = analysisData.network_latency_data.map(data => ({\n      time: normalizeTimeToISO(data.timestamp),\n      latency: data.latency\n    }))\n  }\n\n  // 转换故障数据\n  if (analysisData.alarm_details && Array.isArray(analysisData.alarm_details)) {\n    structured.surgery_stats.faults = analysisData.alarm_details.map(fault => ({\n      timestamp: normalizeTimeToISO(fault.time),\n      error_code: fault.code,\n      param1: '',\n      param2: '',\n      param3: '',\n      param4: '',\n      explanation: fault.message,\n      log_id: analysisData.log_id\n    }))\n  }\n\n  // 转换电源循环数据\n  if (analysisData.power_on_times && analysisData.shutdown_times) {\n    const onTimes = analysisData.power_on_times\n    const offTimes = analysisData.shutdown_times\n\n    // 智能配对开机和关机时间\n    let onIndex = 0\n    let offIndex = 0\n\n    while (onIndex < onTimes.length || offIndex < offTimes.length) {\n      const onTime = onIndex < onTimes.length ? onTimes[onIndex] : null\n      const offTime = offIndex < offTimes.length ? offTimes[offIndex] : null\n\n      structured.power_cycles.push({\n        on_time: normalizeTimeToISO(onTime),\n        off_time: normalizeTimeToISO(offTime)\n      })\n\n      if (onTime && offTime) {\n        onIndex++\n        offIndex++\n      } else if (onTime) {\n        onIndex++\n      } else {\n        offIndex++\n      }\n    }\n  }\n\n  return structured\n}\n\n/**\n * 标准化结构化数据\n * @param {Object} structuredData - 结构化数据\n * @returns {Object} 标准化后的数据\n */\nfunction standardizeStructuredData (structuredData) {\n  const standardized = {\n    arms: structuredData.arms || [],\n    power_cycles: structuredData.power_cycles || [],\n    surgery_stats: {\n      success: structuredData.surgery_stats?.success ?? true,\n      network_latency_ms: structuredData.surgery_stats?.network_latency_ms || [],\n      faults: structuredData.surgery_stats?.faults || [],\n      state_machine: structuredData.surgery_stats?.state_machine || [],\n      arm_switch_count: structuredData.surgery_stats?.arm_switch_count || 0,\n      left_hand_clutch: structuredData.surgery_stats?.left_hand_clutch || 0,\n      right_hand_clutch: structuredData.surgery_stats?.right_hand_clutch || 0,\n      foot_clutch: structuredData.surgery_stats?.foot_clutch || 0,\n      endoscope_pedal: structuredData.surgery_stats?.endoscope_pedal || 0\n    }\n  }\n\n  // 确保 arms 数组格式正确\n  if (!Array.isArray(standardized.arms)) {\n    standardized.arms = []\n  }\n\n  // 确保每个 arm 都有正确的结构，并转换时间\n  for (let i = 0; i < standardized.arms.length; i++) {\n    if (!standardized.arms[i].arm_id) {\n      standardized.arms[i].arm_id = i + 1\n    }\n    if (!standardized.arms[i].instrument_usage) {\n      standardized.arms[i].instrument_usage = []\n    } else {\n      // 转换器械使用时间\n      standardized.arms[i].instrument_usage = standardized.arms[i].instrument_usage.map(usage => ({\n        ...usage,\n        start_time: normalizeTimeToISO(usage.start_time),\n        end_time: normalizeTimeToISO(usage.end_time)\n      }))\n    }\n  }\n\n  // 转换状态机数据时间\n  if (standardized.surgery_stats.state_machine) {\n    standardized.surgery_stats.state_machine = standardized.surgery_stats.state_machine.map(item => ({\n      ...item,\n      time: normalizeTimeToISO(item.time)\n    }))\n  }\n\n  // 转换网络延迟数据时间\n  if (standardized.surgery_stats.network_latency_ms) {\n    standardized.surgery_stats.network_latency_ms = standardized.surgery_stats.network_latency_ms.map(item => ({\n      ...item,\n      time: normalizeTimeToISO(item.time)\n    }))\n  }\n\n  // 转换故障数据时间\n  if (standardized.surgery_stats.faults) {\n    standardized.surgery_stats.faults = standardized.surgery_stats.faults.map(fault => ({\n      ...fault,\n      timestamp: normalizeTimeToISO(fault.timestamp)\n    }))\n  }\n\n  // 转换电源循环数据时间\n  if (standardized.power_cycles) {\n    standardized.power_cycles = standardized.power_cycles.map(cycle => ({\n      on_time: normalizeTimeToISO(cycle.on_time),\n      off_time: normalizeTimeToISO(cycle.off_time)\n    }))\n  }\n\n  return standardized\n}\n\n/**\n * 验证适配后的数据是否完整\n * @param {Object} adaptedData - 适配后的数据\n * @returns {boolean} 是否有效\n */\nexport function validateAdaptedData (adaptedData) {\n  if (!adaptedData) return false\n\n  const hasRequiredFields = !!(\n    adaptedData.surgery_id &&\n    adaptedData.start_time &&\n    adaptedData.arms &&\n    adaptedData.surgery_stats\n  )\n\n  const hasValidArms = Array.isArray(adaptedData.arms) && adaptedData.arms.length > 0\n\n  console.log('🔍 数据验证结果:', {\n    hasRequiredFields,\n    hasValidArms,\n    armsCount: adaptedData.arms?.length || 0,\n    stateMachineCount: adaptedData.surgery_stats?.state_machine?.length || 0,\n    networkLatencyCount: adaptedData.surgery_stats?.network_latency_ms?.length || 0\n  })\n\n  return hasRequiredFields && hasValidArms\n}\n\n/**\n * 获取数据来源类型\n * @param {Object} rawData - 原始数据\n * @returns {string} 数据来源类型\n */\nexport function getDataSourceType (rawData) {\n  if (!rawData) return 'unknown'\n\n  if (rawData.postgresql_row_preview?.structured_data) {\n    return 'surgery_statistics'\n  } else if (rawData.structured_data) {\n    return 'database_record'\n  } else if (rawData.arms || rawData.surgery_stats || rawData.power_cycles) {\n    return 'structured_data'\n  } else if (rawData.arm1_usage || rawData.state_machine_changes || rawData.alarm_details) {\n    return 'analysis_data'\n  }\n\n  return 'unknown'\n}\n","// 统一的手术数据可视化辅助函数\nimport router from '../router'\nimport { adaptSurgeryData, validateAdaptedData, getDataSourceType } from './surgeryDataAdapter'\n\n/**\n * 统一的手术数据可视化函数\n * 使用数据适配器统一处理不同来源的手术数据\n *\n * @param {Object} surgeryData - 手术数据对象\n * @param {Object} options - 可选参数\n * @param {boolean} options.openInNewTab - 是否在新标签页打开，默认true\n * @param {string} options.queryId - 查询ID，用于日志解析页面的可视化\n */\nexport function visualizeSurgery (surgeryData, options = {}) {\n  const { openInNewTab = true, queryId = null } = options\n\n  try {\n    // 确保有数据\n    if (!surgeryData) {\n      throw new Error('手术数据不能为空')\n    }\n\n    // 添加调试信息\n    console.log('🔧 开始处理手术数据可视化:', surgeryData)\n    const dataSourceType = getDataSourceType(surgeryData)\n    console.log('📊 数据来源类型:', dataSourceType)\n\n    // 使用数据适配器统一处理数据\n    const adaptedData = adaptSurgeryData(surgeryData)\n    \n    if (!adaptedData) {\n      throw new Error('数据适配失败，无法识别的数据格式')\n    }\n\n    // 验证适配后的数据\n    if (!validateAdaptedData(adaptedData)) {\n      throw new Error('数据验证失败，缺少必要字段')\n    }\n\n    // 添加数据来源信息\n    adaptedData._dataSource = dataSourceType\n    adaptedData._originalData = surgeryData\n\n    console.log('✅ 数据适配成功:', adaptedData)\n\n    // 将数据存储到sessionStorage\n    sessionStorage.setItem('surgeryVizData', JSON.stringify(adaptedData))\n\n    // 构建路由参数\n    const routeOptions = { path: '/surgery-visualization' }\n    if (queryId) {\n      routeOptions.query = { id: queryId }\n    }\n\n    const routeData = router.resolve(routeOptions)\n\n    // 打开可视化页面\n    if (openInNewTab) {\n      window.open(routeData.href, '_blank')\n    } else {\n      // 如果在当前页面打开，使用push方式\n      router.push(routeOptions)\n    }\n  } catch (error) {\n    console.error('❌ 可视化手术数据失败:', error)\n    // 这里可以添加用户友好的错误提示\n    if (window.ElMessage) {\n      window.ElMessage.error('可视化手术数据失败: ' + error.message)\n    }\n  }\n}\n\n/**\n * 验证手术数据是否包含可视化所需的基本信息\n * @param {Object} surgeryData - 手术数据\n * @returns {boolean} 是否有效\n */\nexport function validateSurgeryData (surgeryData) {\n  if (!surgeryData) return false\n\n  // 检查是否有structured_data\n  const hasStructuredData = surgeryData.structured_data ||\n                           surgeryData.postgresql_row_preview?.structured_data\n\n  // 检查structured_data中是否有必要字段\n  if (hasStructuredData) {\n    const structuredData = surgeryData.structured_data || surgeryData.postgresql_row_preview.structured_data\n    return !!(structuredData.arms || structuredData.timeline || structuredData.power_cycles)\n  }\n\n  return false\n}\n\n/**\n * 从手术数据中提取可视化所需的数据\n * @param {Object} surgeryData - 手术数据\n * @returns {Object} 提取的数据\n */\nexport function extractVisualizationData (surgeryData) {\n  if (!surgeryData) return null\n\n  // 如果是PostgreSQL格式的数据，需要保留基本信息并合并structured_data\n  if (surgeryData.structured_data) {\n    // 保留外层的基本信息，并将structured_data合并进去\n    return {\n      ...surgeryData.structured_data,\n      // 保留关键的基本信息（优先使用外层值，即使为false也要保留）\n      surgery_id: surgeryData.surgery_id !== undefined ? surgeryData.surgery_id : surgeryData.structured_data.surgery_id,\n      start_time: surgeryData.start_time !== undefined ? surgeryData.start_time : surgeryData.structured_data.start_time,\n      end_time: surgeryData.end_time !== undefined ? surgeryData.end_time : surgeryData.structured_data.end_time,\n      is_remote: surgeryData.is_remote !== undefined ? surgeryData.is_remote : surgeryData.structured_data.is_remote,\n      has_fault: surgeryData.has_fault !== undefined ? surgeryData.has_fault : surgeryData.structured_data.has_fault,\n      device_ids: surgeryData.device_ids !== undefined ? surgeryData.device_ids : surgeryData.structured_data.device_ids,\n      source_log_ids: surgeryData.source_log_ids !== undefined ? surgeryData.source_log_ids : surgeryData.structured_data.source_log_ids\n    }\n  }\n\n  // 其次使用postgresql_row_preview中的structured_data\n  if (surgeryData.postgresql_row_preview?.structured_data) {\n    const preview = surgeryData.postgresql_row_preview\n    return {\n      ...preview.structured_data,\n      // 保留关键的基本信息（优先使用外层值，即使为false也要保留）\n      surgery_id: preview.surgery_id !== undefined ? preview.surgery_id : preview.structured_data?.surgery_id,\n      start_time: preview.start_time !== undefined ? preview.start_time : preview.structured_data?.start_time,\n      end_time: preview.end_time !== undefined ? preview.end_time : preview.structured_data?.end_time,\n      is_remote: preview.is_remote !== undefined ? preview.is_remote : preview.structured_data?.is_remote,\n      has_fault: preview.has_fault !== undefined ? preview.has_fault : preview.structured_data?.has_fault,\n      device_ids: preview.device_ids !== undefined ? preview.device_ids : preview.structured_data?.device_ids,\n      source_log_ids: preview.source_log_ids !== undefined ? preview.source_log_ids : preview.structured_data?.source_log_ids\n    }\n  }\n\n  // 最后返回原始数据\n  return surgeryData\n}\n"],"names":["serverOffsetMinutes","loadServerTimezone","async","resp","fetch","json","offsetMinutes","error","console","warn","formatTime","timestamp","useServerTimezone","isUtcTime","test","date","utcTimeStr","replace","Date","isNaN","getTime","localOffset","getTimezoneOffset","delta","setTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","result","formatTimeShort","formatSurgeryTime","surgery","surgery_start_time","surgery_end_time","start","end","ref","style","width","height","name","props","seriesData","type","Array","default","seriesName","Number","yAxisFormat","showRangeLabels","Boolean","setup","chartContainer","chartInstance","createChart","value","length","dispose","echarts","validData","filter","item","isArray","isFinite","option","title","undefined","tooltip","trigger","position","pt","legend","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","xAxis","boundaryGap","min","Math","map","d","max","yAxis","axisLabel","overflow","formatter","round","toString","toFixed","realtime","throttle","zoomLock","xAxisIndex","filterMode","preventDefaultMouseMove","showDetail","showDataShadow","bottom","moveHandleSize","series","symbol","sampling","data","lineStyle","areaStyle","opacity","setOption","resizeChart","resize","deep","window","addEventListener","removeEventListener","__exports__","render","class","borderBottom","marginTop","batchCount","selectedLogsCount","size","selectedLogs","device_id","placement","effect","transition","disabled","content","log","key","id","original_name","loading","showClipboard","exportToCSV","showSurgeryStatistics","showSurgeryStatsDialog","footer","description","surgeryStats","prop","label","row","postgresql_structure","surgery_stats","procedure","formatTimeForDisplay","start_time","end_time","fixed","visualizeSurgeryStat","previewSurgeryData","exportingRow","exportSurgeryRow","surgeryJsonDialogVisible","rows","surgeryJsonText","readonly","timeRange","format","defaultPickerRange","disableOutOfRangeDates","handleTimeRangeChange","searchKeyword","placeholder","clearable","handleSearch","onCompositionStart","onCompositionEnd","prefix","plain","showAdvancedFilter","leafConditionCount","filtersRoot","logic","clearFilters","searchExpression","filteredCount","paginatedEntries","stripe","getRowClassName","getRowStyle","forceRelayout","header","visible","activeColorPopoverRowId","reference","color_mark","backgroundColor","toggleColorPopover","colorOptions","color","selectColor","hoveredNameRowId","log_name","teleported","timestamp_text","toggleErrorCodeStatistics","error_code","showStatisticsForErrorCode","getErrorCodeCountDisplay","getErrorCodeStatisticsTooltip","text","explanation","display_params","param","index","activeParamPopoverRowId","handleVisualization","chartThumbnails","selectedParameter","idx","paramNamesLoading","isParameterAvailable","paramNames","confirmVisualization","handleContextAnalysis","handleLogCapture","activeNotesPopoverRowId","link","reloadNotes","getNotes","items","created_by","username","roleLabel","created_at","canEditNote","startEditNote","canDeleteNote","confirmDeleteNote","editingNoteId","editingNoteContent","maxlength","cancelEditNote","submitEditNote","layout","small","pageSize","total","page","p","changeNotesPage","newNoteContent","submitNewNote","openNotes","currentPage","totalCount","handleSizeChange","handleCurrentChange","contextAnalysisVisible","executeContextAnalysis","beforeMinutes","beforeSeconds","afterMinutes","afterSeconds","clipboardVisible","direction","sidebarActiveTab","stretch","clipboardCount","clipboardEntries","clipboardContent","clipboardDetailVisible","fillPercent","maxClipboardEntries","circle","clearClipboard","chart","showChartDetail","formatTimestamp","deleteChartThumbnail","exportClipboardToTxt","autosize","minRows","maxRows","chartDetailVisible","onChartDialogOpened","chartTitle","currentChartData","parameterValue","applyAdvancedFilters","useLocalAdvanced","clearAllConditionsOnly","conditions","advancedExpression","templates","applySelectedTemplate","selectedTemplateName","tpl","checked","onTemplateSingleSelect","addConditionToGroup","addGroupToGroup","group","getOperatorOptions","onFieldChange","onOperatorChange","removeNodeAt","accept","beforeImportTemplates","showCompareDialog","compareData","surgeryId","existingData","newData","differences","surgeryData","emit","get","modelValue","set","confirming","showDetailedCompare","activeTab","printedFields","Set","formatValue","fieldName","dataType","includes","has","add","trim","formatted","delete","JSON","stringify","processAllTimeFields","obj","Object","entries","isTimeField","toLowerCase","formatJSONForDisplay","processedData","parse","getTypeColor","colorMap","getTypeLabel","labelMap","confirmOverride","confirm","confirmButtonText","cancelButtonText","response","api","surgeryStatistics","confirmOverrideSurgeryData","success","message","closable","oldValue","newValue","structured_data","icon","components","Search","Download","ArrowLeft","DataAnalysis","Warning","TimeSeriesChart","SurgeryDataCompare","ExplanationCell","h","ConditionGroup","required","Function","isRoot","ElSelect","ElOption","ElInput","ElButton","ElRadioGroup","ElRadioButton","Self","renderCondition","node","parent","field","v","assign","operator","op","arr","slice","join","onClick","renderGroup","depth","children","store","route","batchLogEntries","totalPages","globalMinTs","globalMaxTs","advancedMode","contextAnalysisRow","split","line","cnt","pct","parameterSelectVisible","availableParameters","paramAvailability","selectKey","currentVisualizationRow","logCounts","errorCodeCounts","globalErrorCodeCounts","filteredErrorCodeCounts","statisticsCache","currentStatisticsKey","logIds","l","params","log_ids","filtersPayload","buildFiltersPayload","filters","search","_","fetchGlobalStatistics","logs","getStatistics","sessionStorage","setItem","now","keys","sample","fetchFilteredStatistics","cacheKey","newFilteredCounts","fetchStatisticsFromBackend","getErrorCodeCount","errorCode","useGlobal","source","globalCount","hasActiveFilters","hasSearch","hasAdvancedConditions","hasUserTimeRange","timeRangeLimit","loadCountsFromStorage","globalErrorCodeCountsData","getItem","statisticsCacheData","storedKey","filteredErrorCodeCountsData","logCountsData","errorCodeCountsData","cacheCount","showErrorCodeStatistics","info","duration","showClose","tableColumns","surgeryStatisticsVisible","analyzing","importExpressionText","groupToString","val","inner","child","segments","push","adv","countLeafConditions","reduce","acc","n","filteredEntries","list","e","evaluateAdvanced","times","loadSelectedLogs","fromParamsLogIds","fromQueryLogIds","query","singleIdParam","singleIdQuery","idsStr","ids","parseInt","dispatch","limit","allLogs","loadBatchLogEntries","resetData","signal","baseParams","serverTotalPages","serverPage","minTimestamp","maxTimestamp","statsPromises","Promise","all","catch","idToName","Map","processedEntries","entry","tsText","displayParams","param1","param2","param3","param4","log_id","remarks","loadColorMarksFromStorage","loadRemarksFromStorage","needInit","curStart","curEnd","curStartDate","curEndDate","outOfRange","isComposing","debouncedSearch","searchTimer","searchAbortController","abort","clearTimeout","AbortController","delay","calculateSearchDelay","setTimeout","baseDelay","handleQuery","s","changed","startOfDay","endOfDay","token","state","auth","URLSearchParams","base","url","open","handleLoadMore","allowAutoLoad","getSmartTimeFormatter","startTime","endTime","timeSpan","formatFileSize","bytes","k","sizes","i","floor","parseFloat","pow","getters","surgeryStatsLoading","analyzeByLogIds","taskId","attempts","maxAttempts","status","getAnalysisTaskStatus","r","warning","loadTemplates","res","getSearchTemplates","hasExportPermission","postgresql_row_preview","exportSingleSurgeryData","needsConfirmation","surgery_id","applyTemplateByName","find","t","file","first","numericFields","normalizeValue","isNumeric","a","b","numA","numB","trimmed","getFieldValue","toNumber","evalCondition","raw","isTimestamp","ok","re","RegExp","startsWith","endsWith","evaluateNode","results","some","every","exprPreviewRef","applyExpressionJSON","conds","scrollIntoView","behavior","block","applyExpressionSmart","analyzeSurgeryData","normalizeNode","normalizedValue","normalized","operatorOptionsByField","defaultOperatorOptions","cond","options","o","splice","saveColorMarksToStorage","colorMarks","forEach","stored","colorValue","className","hexToRgba","hex","alpha","g","updateClipboardContent","blob","Blob","URL","createObjectURL","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","saveClipboardContent","loadClipboardContent","saved","closeOnOutsideClick","target","btn","closest","pop","fullErrorCode","toUpperCase","errorCodeToQuery","subsystemToQuery","charAt","faultCodePart","substring","errorCodes","getByCodeAndSubsystem","generateChart","paramIndex","visualizationParams","parameter_index","subsystem","getVisualizationData","chartData","apiChartTitle","paramName","parameter","addChartToSidebar","chartWithNumber","createChartThumbnail","thumbnailElement","getElementById","offsetWidth","offsetHeight","existingInstance","thumbnailInstance","minX","maxX","thumbnailOption","grid","left","right","top","containLabel","show","axisLine","axisTick","scale","offset","resizeHandler","isDisposed","_echartsInstance","_resizeHandler","originalConsoleError","originalError","onerror","args","errorMessage","apply","msg","col","chartElement","dataBackground","selectedDataBackground","itemStyle","x","y","x2","y2","colorStops","global","clear","model","getModel","getComponent","dispatchAction","resizeError","simpleOption","animation","simpleError","chartId","findIndex","deleteCurrentChart","model2","exportChartAsImage","dataURL","getDataURL","pixelRatio","notesState","canCreateNote","getNotesKey","currentId","refEl","notes","create","current","user_id","update","log_entry_id","then","remove","baseTimestamp","beforeMs","afterMs","beforeTime","afterTime","baseRow","before","after","timeFilter","beforeText","afterText","normalizeTimeToISO","timeStr","utcTime","adaptSurgeryData","rawData","structuredData","metadata","is_remote","is_remote_surgery","has_fault","has_error","device_ids","source_log_ids","arms","power_cycles","arm1_usage","state_machine_changes","alarm_details","convertAnalysisDataToStructured","standardizedData","standardizeStructuredData","analysisData","structured","network_latency_ms","faults","state_machine","arm_switch_count","left_hand_clutch","right_hand_clutch","foot_clutch","endoscope_pedal","armUsage","instrumentUsage","usage","tool_type","instrumentName","udi","energy_activation","arm_id","instrument_usage","change","time","stateName","network_latency_data","latency","fault","code","power_on_times","shutdown_times","onTimes","offTimes","onIndex","offIndex","onTime","offTime","on_time","off_time","standardized","cycle","validateAdaptedData","adaptedData","hasRequiredFields","hasValidArms","armsCount","stateMachineCount","networkLatencyCount","getDataSourceType","visualizeSurgery","openInNewTab","queryId","Error","dataSourceType","_dataSource","_originalData","routeOptions","path","routeData","resolve","ElMessage"],"sourceRoot":""}