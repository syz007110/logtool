{"version":3,"file":"js/631.6d914dce.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/Logs.vue","webpack://logtool-frontend/./src/views/Logs.vue?e192"],"sourcesContent":["<template>\r\n  <div class=\"logs-container\">\r\n    <!-- 上传区域 -->\r\n    <el-card class=\"upload-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>日志上传</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-upload\r\n        ref=\"uploadRef\"\r\n        :action=\"uploadUrl\"\r\n        :headers=\"uploadHeaders\"\r\n        :before-upload=\"beforeUpload\"\r\n        :on-success=\"onUploadSuccess\"\r\n        :on-error=\"onUploadError\"\r\n        :auto-upload=\"false\"\r\n        :show-file-list=\"false\"\r\n        accept=\".log,.txt\"\r\n        drag\r\n      >\r\n        <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n        <div class=\"el-upload__text\">\r\n          将文件拖到此处，或<em>点击上传</em>\r\n        </div>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            只能上传 log/txt 文件，且不超过 100MB\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n      \r\n      <div class=\"upload-actions\">\r\n        <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">\r\n          开始上传\r\n        </el-button>\r\n        <el-button @click=\"clearUpload\">清空</el-button>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 日志列表 -->\r\n    <el-card class=\"list-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>日志列表</span>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"loadLogs\">\r\n            <el-icon><Refresh /></el-icon>\r\n            刷新\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-table\r\n        :data=\"logs\"\r\n        :loading=\"loading\"\r\n        style=\"width: 100%\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <el-table-column prop=\"filename\" label=\"文件名\" width=\"200\" />\r\n        <el-table-column prop=\"size\" label=\"文件大小\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatFileSize(row.size) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag :type=\"getStatusType(row.status)\">\r\n              {{ getStatusText(row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"uploadTime\" label=\"上传时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.uploadTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"parseTime\" label=\"解析时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ row.parseTime ? formatDate(row.parseTime) : '-' }}\r\n          </template>\r\n        </el-table-column>\r\n        \r\n        <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button \r\n              v-if=\"row.status === 'uploaded'\"\r\n              size=\"small\" \r\n              type=\"primary\"\r\n              @click=\"handleParse(row)\"\r\n              :loading=\"row.parsing\"\r\n            >\r\n              解析\r\n            </el-button>\r\n            \r\n            <el-button \r\n              size=\"small\" \r\n              type=\"success\"\r\n              @click=\"handleDownload(row)\"\r\n            >\r\n              下载\r\n            </el-button>\r\n            \r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"handleDelete(row)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <!-- 分页 -->\r\n      <div class=\"pagination-wrapper\">\r\n        <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :total=\"total\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Logs',\r\n  setup() {\r\n    const store = useStore()\r\n    \r\n    // 响应式数据\r\n    const loading = ref(false)\r\n    const uploading = ref(false)\r\n    const uploadRef = ref(null)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(20)\r\n    \r\n    // 计算属性\r\n    const logs = computed(() => store.getters['logs/logsList'])\r\n    const total = computed(() => store.getters['logs/totalCount'])\r\n    const uploadUrl = computed(() => '/api/logs/upload')\r\n    const uploadHeaders = computed(() => ({\r\n      Authorization: `Bearer ${store.state.auth.token}`\r\n    }))\r\n    \r\n    // 方法\r\n    const loadLogs = async () => {\r\n      try {\r\n        loading.value = true\r\n        await store.dispatch('logs/fetchLogs', {\r\n          page: currentPage.value,\r\n          limit: pageSize.value\r\n        })\r\n      } catch (error) {\r\n        ElMessage.error('加载日志失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    const handleSizeChange = (size) => {\r\n      pageSize.value = size\r\n      currentPage.value = 1\r\n      loadLogs()\r\n    }\r\n    \r\n    const handleCurrentChange = (page) => {\r\n      currentPage.value = page\r\n      loadLogs()\r\n    }\r\n    \r\n    const beforeUpload = (file) => {\r\n      const isLogFile = file.type === 'text/plain' || file.name.endsWith('.log')\r\n      const isLt100M = file.size / 1024 / 1024 < 100\r\n      \r\n      if (!isLogFile) {\r\n        ElMessage.error('只能上传 log/txt 文件!')\r\n        return false\r\n      }\r\n      if (!isLt100M) {\r\n        ElMessage.error('文件大小不能超过 100MB!')\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n    \r\n    const submitUpload = () => {\r\n      uploadRef.value.submit()\r\n    }\r\n    \r\n    const clearUpload = () => {\r\n      uploadRef.value.clearFiles()\r\n    }\r\n    \r\n    const onUploadSuccess = (response) => {\r\n      ElMessage.success('上传成功')\r\n      loadLogs()\r\n    }\r\n    \r\n    const onUploadError = (error) => {\r\n      ElMessage.error('上传失败')\r\n    }\r\n    \r\n    const handleParse = async (row) => {\r\n      try {\r\n        row.parsing = true\r\n        await store.dispatch('logs/parseLog', row.id)\r\n        ElMessage.success('解析成功')\r\n        loadLogs()\r\n      } catch (error) {\r\n        ElMessage.error('解析失败')\r\n      } finally {\r\n        row.parsing = false\r\n      }\r\n    }\r\n    \r\n    const handleDownload = async (row) => {\r\n      try {\r\n        const response = await store.dispatch('logs/downloadLog', row.id)\r\n        \r\n        // 创建下载链接\r\n        const blob = new Blob([response.data])\r\n        const url = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = url\r\n        link.download = row.filename\r\n        link.click()\r\n        window.URL.revokeObjectURL(url)\r\n        \r\n        ElMessage.success('下载成功')\r\n      } catch (error) {\r\n        ElMessage.error('下载失败')\r\n      }\r\n    }\r\n    \r\n    const handleDelete = async (row) => {\r\n      try {\r\n        await ElMessageBox.confirm('确定要删除这个日志文件吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        await store.dispatch('logs/deleteLog', row.id)\r\n        ElMessage.success('删除成功')\r\n        loadLogs()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          ElMessage.error('删除失败')\r\n        }\r\n      }\r\n    }\r\n    \r\n    const formatFileSize = (bytes) => {\r\n      if (bytes === 0) return '0 B'\r\n      const k = 1024\r\n      const sizes = ['B', 'KB', 'MB', 'GB']\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n    }\r\n    \r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '-'\r\n      return new Date(dateString).toLocaleString('zh-CN')\r\n    }\r\n    \r\n    const getStatusType = (status) => {\r\n      const typeMap = {\r\n        uploaded: 'warning',\r\n        parsed: 'success',\r\n        failed: 'danger'\r\n      }\r\n      return typeMap[status] || 'info'\r\n    }\r\n    \r\n    const getStatusText = (status) => {\r\n      const textMap = {\r\n        uploaded: '已上传',\r\n        parsed: '已解析',\r\n        failed: '解析失败'\r\n      }\r\n      return textMap[status] || status\r\n    }\r\n    \r\n    // 生命周期\r\n    onMounted(() => {\r\n      loadLogs()\r\n    })\r\n    \r\n    return {\r\n      loading,\r\n      uploading,\r\n      uploadRef,\r\n      currentPage,\r\n      pageSize,\r\n      logs,\r\n      total,\r\n      uploadUrl,\r\n      uploadHeaders,\r\n      loadLogs,\r\n      handleSizeChange,\r\n      handleCurrentChange,\r\n      beforeUpload,\r\n      submitUpload,\r\n      clearUpload,\r\n      onUploadSuccess,\r\n      onUploadError,\r\n      handleParse,\r\n      handleDownload,\r\n      handleDelete,\r\n      formatFileSize,\r\n      formatDate,\r\n      getStatusType,\r\n      getStatusText\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.logs-container {\r\n  height: 100%;\r\n}\r\n\r\n.upload-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.upload-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.list-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n</style> ","import { render } from \"./Logs.vue?vue&type=template&id=7fe58ff0&scoped=true\"\nimport script from \"./Logs.vue?vue&type=script&lang=js\"\nexport * from \"./Logs.vue?vue&type=script&lang=js\"\n\nimport \"./Logs.vue?vue&type=style&index=0&id=7fe58ff0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7fe58ff0\"]])\n\nexport default __exports__"],"names":["class","header","ref","action","uploadUrl","headers","uploadHeaders","beforeUpload","onUploadSuccess","onUploadError","accept","drag","tip","type","submitUpload","loading","uploading","clearUpload","size","loadLogs","data","logs","style","prop","label","width","default","row","formatFileSize","getStatusType","status","getStatusText","formatDate","uploadTime","parseTime","fixed","handleParse","parsing","handleDownload","handleDelete","currentPage","pageSize","total","layout","handleSizeChange","handleCurrentChange","name","setup","store","uploadRef","getters","Authorization","state","auth","token","async","value","dispatch","page","limit","error","file","isLogFile","endsWith","isLt100M","submit","clearFiles","response","success","id","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","filename","click","revokeObjectURL","confirm","confirmButtonText","cancelButtonText","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","dateString","Date","toLocaleString","typeMap","uploaded","parsed","failed","textMap","__exports__","render"],"sourceRoot":""}