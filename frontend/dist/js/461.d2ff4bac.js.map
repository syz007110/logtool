{"version":3,"file":"js/461.d2ff4bac.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/LogAnalysis.vue","webpack://logtool-frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://logtool-frontend/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://logtool-frontend/./node_modules/chart.js/dist/chart.js","webpack://logtool-frontend/./src/views/LogAnalysis.vue?0f44"],"sourcesContent":["<template>\n  <div class=\"log-analysis-container\">\n    <el-card class=\"analysis-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <div class=\"header-left\">\n            <el-button @click=\"goBack\" icon=\"ArrowLeft\" size=\"small\">\n              返回\n            </el-button>\n            <span class=\"title\">日志分析</span>\n            <el-tag v-if=\"logInfo.original_name\" type=\"info\" size=\"small\">\n              {{ logInfo.original_name }}\n            </el-tag>\n          </div>\n          <div class=\"header-right\">\n            <el-button @click=\"exportToCSV\" type=\"success\" size=\"small\">\n              <el-icon><Download /></el-icon>\n              导出CSV\n            </el-button>\n            <el-button @click=\"showSurgeryStatistics\" type=\"primary\" size=\"small\" style=\"margin-left: 10px;\">\n              <el-icon><DataAnalysis /></el-icon>\n              手术分析\n            </el-button>\n          </div>\n        </div>\n      </template>\n\n      <!-- 日志基本信息 -->\n      <div class=\"log-info\" v-if=\"logInfo.id\">\n        <el-descriptions :column=\"3\" border>\n          <el-descriptions-item label=\"文件名\">{{ logInfo.original_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"设备编号\">{{ logInfo.device_id }}</el-descriptions-item>\n          <el-descriptions-item label=\"文件大小\">{{ formatFileSize(logInfo.size) }}</el-descriptions-item>\n          <el-descriptions-item label=\"上传时间\">{{ formatDate(logInfo.upload_time) }}</el-descriptions-item>\n          <el-descriptions-item label=\"解析时间\">{{ formatDate(logInfo.parse_time) }}</el-descriptions-item>\n          <el-descriptions-item label=\"上传用户ID\">{{ logInfo.uploader_id }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n\n      <!-- 搜索和筛选 -->\n      <div class=\"search-section\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索释义内容或故障码\"\n          style=\"width: 300px; margin-right: 15px;\"\n          clearable\n          @input=\"handleSearch\"\n        >\n          <template #prefix>\n            <el-icon><Search /></el-icon>\n          </template>\n        </el-input>\n        \n        <el-date-picker\n          v-model=\"timeRange\"\n          type=\"datetimerange\"\n          range-separator=\"至\"\n          start-placeholder=\"开始时间\"\n          end-placeholder=\"结束时间\"\n          format=\"YYYY-MM-DD HH:mm:ss\"\n          value-format=\"YYYY-MM-DD HH:mm:ss\"\n          :disabled-date=\"disabledDate\"\n          style=\"width: 350px; margin-right: 15px;\"\n          @change=\"handleTimeRangeChange\"\n        />\n        <el-tag v-if=\"timeRangeLimit\" type=\"info\" size=\"small\" style=\"margin-left: 10px;\">\n          时间范围: {{ formatTimestamp(timeRangeLimit[0]) }} 至 {{ formatTimestamp(timeRangeLimit[1]) }}\n        </el-tag>\n        \n        <el-button @click=\"clearFilters\" type=\"info\" size=\"small\">\n          清除筛选\n        </el-button>\n      </div>\n\n      <!-- 日志条目表格 -->\n      <div class=\"entries-section\">\n        <div class=\"section-header\">\n          <h3>日志条目 ({{ filteredEntries.length }})</h3>\n        </div>\n\n        <el-table \n          :data=\"paginatedEntries\" \n          style=\"width: 100%\"\n          v-loading=\"loading\"\n          max-height=\"600\"\n          stripe\n        >\n          <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" sortable>\n            <template #default=\"{ row }\">\n              {{ formatTimestamp(row.timestamp) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"error_code\" label=\"故障码\" width=\"120\" sortable />\n          <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\n          <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\n          <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\n          <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\n          <el-table-column prop=\"explanation\" label=\"释义\" min-width=\"300\" show-overflow-tooltip />\n        </el-table>\n\n        <!-- 分页 -->\n        <div class=\"pagination-wrapper\">\n          <el-pagination\n            :current-page=\"currentPage\"\n            :page-size=\"pageSize\"\n            :page-sizes=\"[50, 100, 200, 500]\"\n            :total=\"filteredEntries.length\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 手术统计对话框 -->\n    <el-dialog \n      title=\"手术统计分析\" \n      v-model=\"surgeryStatisticsVisible\"\n      width=\"90%\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"surgery-statistics-content\">\n        <!-- 分析按钮 -->\n        <div class=\"analysis-section\" v-if=\"!surgeryData\">\n          <el-card>\n            <div class=\"analysis-content\">\n              <el-icon><DataAnalysis /></el-icon>\n              <h3>分析当前日志的手术数据</h3>\n              <p>将对当前日志文件进行手术统计分析</p>\n              <el-button type=\"primary\" @click=\"analyzeSurgeryData\" :loading=\"analyzing\">\n                开始分析\n              </el-button>\n            </div>\n          </el-card>\n        </div>\n\n        <!-- 手术统计内容 -->\n        <div v-else>\n          <!-- 导出按钮 -->\n          <div class=\"export-section\">\n            <el-button type=\"primary\" @click=\"exportSurgeryReport\">\n              <el-icon><Download /></el-icon>\n              导出手术报告 PDF\n            </el-button>\n          </div>\n\n          <!-- 手术时间信息 -->\n          <div class=\"time-info\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"6\">\n                <div class=\"time-card\">\n                  <div class=\"time-icon power-on\">\n                    <el-icon><SwitchButton /></el-icon>\n                  </div>\n                  <div class=\"time-content\">\n                    <div class=\"time-label\">开机时间</div>\n                    <div class=\"time-value\">\n                      <div v-for=\"(time, index) in getAllPowerOnTimes(surgeryData)\" :key=\"index\" class=\"time-item\">\n                        {{ formatTime(time) }}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-col>\n              <el-col :span=\"6\">\n                <div class=\"time-card\">\n                  <div class=\"time-icon power-off\">\n                    <el-icon><Close /></el-icon>\n                  </div>\n                  <div class=\"time-content\">\n                    <div class=\"time-label\">关机时间</div>\n                    <div class=\"time-value\">\n                      <div v-for=\"(time, index) in getAllPowerOffTimes(surgeryData)\" :key=\"index\" class=\"time-item\">\n                        {{ formatTime(time) }}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-col>\n              <el-col :span=\"6\">\n                <div class=\"time-card\">\n                  <div class=\"time-icon surgery-start\">\n                    <el-icon><VideoPlay /></el-icon>\n                  </div>\n                  <div class=\"time-content\">\n                    <div class=\"time-label\">手术开始时间</div>\n                    <div class=\"time-value\">{{ formatTime(surgeryData.surgery_start_time) }}</div>\n                  </div>\n                </div>\n              </el-col>\n              <el-col :span=\"6\">\n                <div class=\"time-card\">\n                  <div class=\"time-icon surgery-end\">\n                    <el-icon><VideoPause /></el-icon>\n                  </div>\n                  <div class=\"time-content\">\n                    <div class=\"time-label\">手术结束时间</div>\n                    <div class=\"time-value\">{{ formatTime(surgeryData.surgery_end_time) }}</div>\n                  </div>\n                </div>\n              </el-col>\n            </el-row>\n          </div>\n\n          <!-- 工具臂使用统计 -->\n          <div class=\"bg-white rounded-lg p-6 mb-6 border border-neutral-200\">\n            <div class=\"flex justify-between items-center mb-6\">\n              <h3 class=\"text-lg font-semibold text-neutral-700\">工具臂使用统计</h3>\n              <div class=\"text-sm text-neutral-500\">\n                总手术时长: <span class=\"font-medium text-neutral-700\">{{ surgeryData.total_duration }} 分钟</span>\n              </div>\n            </div>\n            \n            <!-- 主时间轴坐标轴 - 手术全程时间线 -->\n            <div class=\"timeline-axis mb-8\">\n              <!-- 时间刻度 -->\n              <div v-for=\"tick in getTimelineTicks(surgeryData.surgery_start_time, surgeryData.surgery_end_time)\" :key=\"tick.time.getTime()\">\n                <div class=\"timeline-tick\" :style=\"{ left: tick.position + '%' }\"></div>\n                <div class=\"timeline-label\" :style=\"{ left: tick.position + '%' }\">{{ formatTimeShort(tick.time) }}</div>\n              </div>\n              \n              <!-- 全程时间线 -->\n              <div class=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-neutral-200 to-neutral-300 rounded-full\"></div>\n              \n              <!-- 手术阶段标记 -->\n              <div class=\"absolute bottom-6 left-0 text-xs font-medium text-neutral-600 bg-white px-2 py-1 rounded-md shadow-sm border border-neutral-200\">\n                <i class=\"fa fa-play-circle mr-1 text-success\"></i>手术开始\n              </div>\n              <div class=\"absolute bottom-6 right-0 text-xs font-medium text-neutral-600 bg-white px-2 py-1 rounded-md shadow-sm border border-neutral-200\">\n                <i class=\"fa fa-stop-circle mr-1 text-danger\"></i>手术结束\n              </div>\n            </div>\n            \n            <!-- 工具臂时间线 -->\n            <div class=\"relative pl-14\">\n              <div \n                v-for=\"(armUsage, index) in getArmUsages(surgeryData)\" \n                :key=\"index\"\n                class=\"mb-10 relative\"\n              >\n                <div class=\"timeline-line\"></div>\n                <div class=\"timeline-dot\" :class=\"`tool-arm-${index + 1}`\"></div>\n                <div class=\"font-medium mb-4 flex items-center\">\n                  <span class=\"w-3 h-3 rounded-sm inline-block mr-2\" :class=\"`tool-arm-${index + 1}`\"></span>\n                  工具臂 {{ index + 1 }}\n                  <button class=\"toggle-details ml-3 px-3 py-1 text-xs font-medium bg-primary/10 text-primary rounded-full hover:bg-primary/20 transition-all duration-200 flex items-center border border-primary/20\" @click=\"toggleArmDetails(index)\">\n                    <span>详情</span>\n                    <i class=\"fa fa-chevron-down ml-1 transition-transform duration-300\" :class=\"{ 'rotate-180': armDetailsVisible[index] }\"></i>\n                  </button>\n                  <span class=\"ml-auto text-sm text-neutral-500\">总激活时间: {{ getArmTotalTime(armUsage) }}</span>\n                </div>\n                \n                <!-- 工具臂总激活时间 -->\n                <div class=\"relative h-8 mb-1\">\n                  <div class=\"timeline-segment\" :class=\"`tool-arm-${index + 1}`\" :style=\"getArmTimelineStyle(armUsage, surgeryData)\">\n                    <div class=\"h-full flex items-center justify-center text-white text-xs font-medium\">\n                      激活中\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- 工具臂详细器械使用时间 -->\n                <div v-show=\"armDetailsVisible[index]\" class=\"tool-details ml-6 mt-4 space-y-6\">\n                  <div \n                    v-for=\"(usage, usageIndex) in armUsage\" \n                    :key=\"usageIndex\"\n                    class=\"relative pl-4 border-l-2\" :class=\"`border-${getArmColorClass(index)}/30`\"\n                  >\n                    <div class=\"absolute left-[-6px] top-3 w-3 h-3 rounded-full\" :class=\"`bg-${getArmColorClass(index)}`\"></div>\n                    <div class=\"mb-2\">\n                      <div class=\"text-sm font-medium\">{{ usage.instrumentName }}</div>\n                      <div class=\"text-xs text-neutral-500\">UDI: {{ usage.udi }}</div>\n                    </div>\n                    <div class=\"relative h-6\">\n                      <div class=\"timeline-segment-sub\" :class=\"`tool-arm-${index + 1}`\" :style=\"getUsageTimelineStyle(usage, surgeryData)\"></div>\n                    </div>\n                  </div>\n                  \n                  <!-- 能量激发时间 -->\n                  <div class=\"text-sm text-neutral-500 mt-2 pl-1\">\n                    <i class=\"fa fa-bolt text-warning mr-1\"></i> 能量激发总时间: {{ getEnergyTime(armUsage) }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 安全报警信息 -->\n          <el-card class=\"alarm-card\">\n            <template #header>\n              <span>安全报警记录</span>\n              <span class=\"alarm-count\">\n                报警总数: {{ surgeryData.alarm_count }}\n              </span>\n            </template>\n          \n            <el-table :data=\"getAlarmDetails(surgeryData)\" stripe>\n              <el-table-column prop=\"time\" label=\"时间\" width=\"150\">\n                <template #default=\"scope\">\n                  {{ formatTime(scope.row.time) }}\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"type\" label=\"报警类型\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"scope.row.type === '错误' ? 'danger' : 'warning'\">\n                    {{ scope.row.type }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"message\" label=\"报警信息\" />\n              <el-table-column prop=\"status\" label=\"处理状态\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag type=\"success\">{{ scope.row.status }}</el-tag>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n\n          <!-- 状态机变化曲线和脚踏/手离合统计 -->\n          <el-row :gutter=\"20\">\n            <el-col :span=\"12\">\n              <el-card class=\"chart-card\">\n                <template #header>\n                  <span>状态机变化曲线</span>\n                </template>\n                <div class=\"chart-container\">\n                  <canvas id=\"stateMachineChart\"></canvas>\n                </div>\n              </el-card>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-card class=\"chart-card\">\n                <template #header>\n                  <span>脚踏和手离合信号统计</span>\n                </template>\n                <div class=\"chart-container\">\n                  <canvas id=\"footPedalChart\"></canvas>\n                </div>\n                        \n                <el-row :gutter=\"20\" class=\"stats-grid\">\n                  <el-col :span=\"12\">\n                    <div class=\"stats-card\">\n                      <h4>脚踏信号</h4>\n                      <ul>\n                                                 <li>\n                           <span>能量脚踏</span>\n                           <span class=\"count\">{{ surgeryData.foot_pedal_stats?.energy || 0 }}</span>\n                         </li>\n                         <li>\n                           <span>离合脚踏</span>\n                           <span class=\"count\">{{ surgeryData.foot_pedal_stats?.clutch || 0 }}</span>\n                         </li>\n                         <li>\n                           <span>镜头控制</span>\n                           <span class=\"count\">{{ surgeryData.foot_pedal_stats?.camera || 0 }}</span>\n                         </li>\n                      </ul>\n                    </div>\n                  </el-col>\n                  <el-col :span=\"12\">\n                    <div class=\"stats-card\">\n                      <h4>手离合信号</h4>\n                      <ul>\n                                                   <li v-for=\"i in 4\" :key=\"i\">\n                             <span>工具臂 {{ i }}</span>\n                             <span class=\"count\">{{ surgeryData.hand_clutch_stats?.[`arm${i}`] || 0 }}</span>\n                           </li>\n                      </ul>\n                    </div>\n                  </el-col>\n                </el-row>\n              </el-card>\n            </el-col>\n          </el-row>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { Search, Download, ArrowLeft, DataAnalysis, SwitchButton, Close, VideoPlay, VideoPause, ArrowUp, ArrowDown } from '@element-plus/icons-vue'\nimport { Chart, registerables } from 'chart.js'\nChart.register(...registerables)\nimport api from '@/api'\n\nexport default {\n  name: 'LogAnalysis',\n  components: {\n    Search,\n    Download,\n    ArrowLeft,\n    DataAnalysis,\n    SwitchButton,\n    Close,\n    VideoPlay,\n    VideoPause,\n    ArrowUp,\n    ArrowDown\n  },\n  setup() {\n    const store = useStore()\n    const route = useRoute()\n    const router = useRouter()\n    \n    const logId = route.params.id\n    const loading = ref(false)\n    const logInfo = ref({})\n    const logEntries = ref([])\n    const searchKeyword = ref('')\n    const timeRange = ref(null)\n    const currentPage = ref(1)\n    const pageSize = ref(100)\n    \n    // 手术统计相关\n    const surgeryStatisticsVisible = ref(false)\n    const surgeryData = ref(null)\n    const analyzing = ref(false)\n    const armDetailsVisible = reactive({})\n    \n    // 图表实例\n    let stateMachineChart = null\n    let footPedalChart = null\n\n    // 获取时间范围限制\n    const timeRangeLimit = computed(() => {\n      if (logEntries.value.length === 0) return null\n      \n      const timestamps = logEntries.value.map(entry => new Date(entry.timestamp))\n      const minTime = new Date(Math.min(...timestamps))\n      const maxTime = new Date(Math.max(...timestamps))\n      \n      return [minTime, maxTime]\n    })\n\n    // 过滤后的条目\n    const filteredEntries = computed(() => {\n      let entries = logEntries.value\n      \n      // 搜索过滤\n      if (searchKeyword.value) {\n        entries = entries.filter(entry => \n          entry.explanation.toLowerCase().includes(searchKeyword.value.toLowerCase()) ||\n          entry.error_code.toLowerCase().includes(searchKeyword.value.toLowerCase())\n        )\n      }\n      \n      // 时间范围过滤\n      if (timeRange.value && timeRange.value.length === 2) {\n        const [startTime, endTime] = timeRange.value\n        entries = entries.filter(entry => {\n          const entryTime = new Date(entry.timestamp)\n          const start = new Date(startTime)\n          const end = new Date(endTime)\n          return entryTime >= start && entryTime <= end\n        })\n      }\n      \n      return entries\n    })\n\n    // 分页后的条目\n    const paginatedEntries = computed(() => {\n      const start = (currentPage.value - 1) * pageSize.value\n      const end = start + pageSize.value\n      return filteredEntries.value.slice(start, end)\n    })\n\n    // 加载日志信息\n    const loadLogInfo = async () => {\n      try {\n        loading.value = true\n        const response = await store.dispatch('logs/fetchLogs', { page: 1, limit: 1000 })\n        const log = response.data.logs.find(l => l.id == logId)\n        if (log) {\n          logInfo.value = log\n        } else {\n          ElMessage.error('日志不存在')\n          goBack()\n        }\n      } catch (error) {\n        ElMessage.error('加载日志信息失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 加载日志条目\n    const loadLogEntries = async () => {\n      try {\n        loading.value = true\n        const response = await store.dispatch('logs/fetchLogEntries', logId)\n        logEntries.value = response.data?.entries || response.entries || []\n        \n        // 保存日志条目数据到sessionStorage\n        try {\n          const dataToSave = logEntries.value.map(entry => ({\n            timestamp: entry.timestamp,\n            error_code: entry.error_code,\n            param1: entry.param1,\n            param2: entry.param2,\n            param3: entry.param3,\n            param4: entry.param4,\n            explanation: entry.explanation\n          }))\n          \n          sessionStorage.setItem('logEntries', JSON.stringify(dataToSave))\n        } catch (error) {\n          ElMessage.warning('保存数据失败，可能影响手术分析功能')\n        }\n      } catch (error) {\n        ElMessage.error('加载日志条目失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 搜索处理\n    const handleSearch = () => {\n      currentPage.value = 1\n    }\n\n    // 时间范围变化处理\n    const handleTimeRangeChange = () => {\n      currentPage.value = 1\n    }\n\n    // 禁用日期函数\n    const disabledDate = (time) => {\n      if (!timeRangeLimit.value) return false\n      const [minTime, maxTime] = timeRangeLimit.value\n      return time < minTime || time > maxTime\n    }\n\n    // 清除筛选\n    const clearFilters = () => {\n      searchKeyword.value = ''\n      timeRange.value = null\n      currentPage.value = 1\n    }\n\n    // 导出CSV\n    const exportToCSV = () => {\n      const headers = ['时间戳', '故障码', '参数1', '参数2', '参数3', '参数4', '释义']\n      const csvContent = [\n        headers.join(','),\n        ...filteredEntries.value.map(entry => [\n          formatTimestamp(entry.timestamp),\n          entry.error_code,\n          entry.param1,\n          entry.param2,\n          entry.param3,\n          entry.param4,\n          `\"${entry.explanation.replace(/\"/g, '\"\"')}\"`\n        ].join(','))\n      ].join('\\n')\n\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      link.download = `${logInfo.value.original_name}_analysis.csv`\n      link.click()\n      URL.revokeObjectURL(link.href)\n      \n      ElMessage.success('CSV文件导出成功')\n    }\n\n    // 分页处理\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n    }\n\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n    }\n\n    // 返回上一页\n    const goBack = () => {\n      router.go(-1)\n    }\n\n    // 跳转到手术统计页面\n    const showSurgeryStatistics = () => {\n      // 确保有已排序的日志条目数据\n      if (logEntries.value.length === 0) {\n        ElMessage.warning('请先加载日志条目数据')\n        return\n      }\n      \n      // 保存日志条目数据到sessionStorage\n      try {\n        const dataToSave = logEntries.value.map(entry => ({\n          timestamp: entry.timestamp,\n          error_code: entry.error_code,\n          param1: entry.param1,\n          param2: entry.param2,\n          param3: entry.param3,\n          param4: entry.param4,\n          explanation: entry.explanation\n        }))\n        \n        sessionStorage.setItem('logEntries', JSON.stringify(dataToSave))\n        \n        // 设置自动分析标志\n        sessionStorage.setItem('autoAnalyze', 'true')\n        \n        // 在新窗口中打开手术统计页面\n        const routeData = router.resolve({\n          path: '/surgery-statistics',\n          query: { logId: logId.value }\n        })\n        window.open(routeData.href, '_blank')\n      } catch (error) {\n        ElMessage.error('保存数据失败')\n      }\n    }\n\n    // 分析手术数据\n    const analyzeSurgeryData = async () => {\n      analyzing.value = true\n      try {\n        const response = await api.surgeryStatistics.analyze(logId)\n        // 如果返回的是数组，取第一个手术数据\n        if (Array.isArray(response.data.data)) {\n          surgeryData.value = response.data.data[0] || null\n        } else {\n          surgeryData.value = response.data.data\n        }\n        ElMessage.success('手术数据分析完成')\n        nextTick(() => {\n          initCharts()\n        })\n      } catch (error) {\n        ElMessage.error('分析手术数据失败')\n      } finally {\n        analyzing.value = false\n      }\n    }\n\n    // 导出手术报告\n    const exportSurgeryReport = async () => {\n      try {\n        const response = await api.surgeryStatistics.exportReport(surgeryData.value.id)\n        ElMessage.success('报告导出功能开发中')\n      } catch (error) {\n        ElMessage.error('导出报告失败')\n      }\n    }\n\n    // 切换工具臂详情显示\n    const toggleArmDetails = (armIndex) => {\n      armDetailsVisible[armIndex] = !armDetailsVisible[armIndex]\n    }\n\n    // 获取工具臂使用情况\n    const getArmUsages = (surgery) => {\n      return [\n        surgery.arm1_usage || [],\n        surgery.arm2_usage || [],\n        surgery.arm3_usage || [],\n        surgery.arm4_usage || []\n      ].map(usage => {\n        if (typeof usage === 'string') {\n          try {\n            return JSON.parse(usage)\n          } catch {\n            return []\n          }\n        }\n        return usage || []\n      })\n    }\n\n    // 获取工具臂使用百分比\n    const getArmUsagePercentage = (armUsage) => {\n      if (!armUsage || armUsage.length === 0) return 0\n      return Math.min(90, armUsage.length * 20)\n    }\n\n    // 获取工具臂颜色\n    const getArmColor = (index) => {\n      const colors = ['#165DFF', '#36BFFA', '#0FC6C2', '#FF7D00']\n      return colors[index] || '#165DFF'\n    }\n\n    // 获取工具臂总时间\n    const getArmTotalTime = (armUsage) => {\n      if (!armUsage || armUsage.length === 0) return '0分钟'\n      return `${armUsage.length * 15}分钟`\n    }\n\n    // 获取工具臂时间线样式（时间对齐）\n    const getArmTimelineStyle = (armUsage, surgery) => {\n      if (!armUsage || armUsage.length === 0 || !surgery.surgery_start_time || !surgery.surgery_end_time) {\n        return { left: '0%', width: '0%' }\n      }\n      \n      // 计算工具臂使用的时间范围\n      const usageTimes = armUsage.map(usage => {\n        if (typeof usage === 'object' && usage.time) {\n          return new Date(usage.time).getTime()\n        }\n        return null\n      }).filter(time => time !== null)\n      \n      if (usageTimes.length === 0) return { left: '0%', width: '0%' }\n      \n      const startTime = Math.min(...usageTimes)\n      const endTime = Math.max(...usageTimes)\n      \n      const startPosition = getTimePosition(startTime, surgery.surgery_start_time, surgery.surgery_end_time)\n      const endPosition = getTimePosition(endTime, surgery.surgery_start_time, surgery.surgery_end_time)\n      \n      return {\n        left: `${startPosition}%`,\n        width: `${endPosition - startPosition}%`\n      }\n    }\n\n    // 获取使用时间线样式（时间对齐）\n    const getUsageTimelineStyle = (usage, surgery) => {\n      if (!usage || !surgery.surgery_start_time || !surgery.surgery_end_time) {\n        return { left: '0%', width: '0%' }\n      }\n      \n      let usageTime\n      if (typeof usage === 'object' && usage.time) {\n        usageTime = new Date(usage.time).getTime()\n      } else if (typeof usage === 'string') {\n        usageTime = new Date(usage).getTime()\n      } else {\n        return { left: '0%', width: '0%' }\n      }\n      \n      const position = getTimePosition(usageTime, surgery.surgery_start_time, surgery.surgery_end_time)\n      return { left: `${position}%`, width: '2%' }\n    }\n\n    // 获取能量时间\n    const getEnergyTime = (armUsage) => {\n      if (!armUsage || armUsage.length === 0) return '0分0秒'\n      return `${Math.floor(armUsage.length * 0.3)}分${armUsage.length % 60}秒`\n    }\n\n    // 获取工具臂颜色类\n    const getArmColorClass = (index) => {\n      const colors = ['primary', 'secondary', 'accent', 'warning']\n      return colors[index] || 'primary'\n    }\n\n    // 格式化短时间\n    const formatTimeShort = (time) => {\n      if (!time) return '-'\n      return new Date(time).toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n    }\n\n    // 获取中间时间\n    const getMidTime = (startTime, endTime, ratio) => {\n      if (!startTime || !endTime) return '-'\n      const start = new Date(startTime)\n      const end = new Date(endTime)\n      const mid = new Date(start.getTime() + (end.getTime() - start.getTime()) * ratio)\n      return mid.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n    }\n\n    // 计算时间在时间轴上的位置百分比\n    const getTimePosition = (time, startTime, endTime) => {\n      if (!time || !startTime || !endTime) return 0\n      const start = new Date(startTime).getTime()\n      const end = new Date(endTime).getTime()\n      const current = new Date(time).getTime()\n      return Math.max(0, Math.min(100, ((current - start) / (end - start)) * 100))\n    }\n\n    // 获取时间轴刻度位置\n    const getTimelineTicks = (startTime, endTime) => {\n      if (!startTime || !endTime) return []\n      const start = new Date(startTime)\n      const end = new Date(endTime)\n      const duration = end.getTime() - start.getTime()\n      \n      // 根据手术时长决定刻度间隔\n      let interval\n      if (duration <= 30 * 60 * 1000) { // 30分钟以内，5分钟间隔\n        interval = 5 * 60 * 1000\n      } else if (duration <= 2 * 60 * 60 * 1000) { // 2小时以内，15分钟间隔\n        interval = 15 * 60 * 1000\n      } else { // 超过2小时，30分钟间隔\n        interval = 30 * 60 * 1000\n      }\n      \n      const ticks = []\n      let current = start.getTime()\n      while (current <= end.getTime()) {\n        const position = getTimePosition(current, startTime, endTime)\n        ticks.push({\n          time: new Date(current),\n          position: position\n        })\n        current += interval\n      }\n      \n      return ticks\n    }\n\n    // 获取报警详情\n    const getAlarmDetails = (surgery) => {\n      if (!surgery || !surgery.alarm_details) return []\n      if (typeof surgery.alarm_details === 'string') {\n        try {\n          return JSON.parse(surgery.alarm_details)\n        } catch {\n          return []\n        }\n      }\n      return surgery.alarm_details || []\n    }\n\n    // 格式化时间\n    const formatTime = (time) => {\n      if (!time) return '-'\n      return new Date(time).toLocaleString()\n    }\n\n    // 初始化图表\n    const initCharts = () => {\n      if (!surgeryData.value) return\n\n      // 状态机变化图表\n      const stateMachineCtx = document.querySelector('#stateMachineChart')\n      if (stateMachineCtx && surgeryData.value.state_machine_changes) {\n        if (stateMachineChart) {\n          stateMachineChart.destroy()\n        }\n        \n        const stateData = surgeryData.value.state_machine_changes\n        if (Array.isArray(stateData) && stateData.length > 0) {\n          const labels = stateData.map(item => new Date(item.time).toLocaleTimeString())\n          const data = stateData.map(item => item.state)\n          \n          stateMachineChart = new Chart(stateMachineCtx, {\n            type: 'line',\n            data: {\n              labels,\n              datasets: [{\n                label: '系统状态',\n                data,\n                borderColor: '#165DFF',\n                backgroundColor: 'rgba(22, 93, 255, 0.1)',\n                fill: true,\n                tension: 0.4,\n                stepped: true\n              }]\n            },\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              scales: {\n                y: {\n                  beginAtZero: false,\n                  min: 0,\n                  max: 35,\n                  ticks: {\n                    stepSize: 5\n                  }\n                }\n              }\n            }\n          })\n        }\n      }\n\n      // 脚踏和手离合信号图表\n      const footPedalCtx = document.querySelector('#footPedalChart')\n      if (footPedalCtx) {\n        if (footPedalChart) {\n          footPedalChart.destroy()\n        }\n        \n        const footPedalData = surgeryData.value.foot_pedal_stats || {}\n        const handClutchData = surgeryData.value.hand_clutch_stats || {}\n        \n        footPedalChart = new Chart(footPedalCtx, {\n          type: 'bar',\n          data: {\n            labels: ['能量脚踏', '离合脚踏', '镜头控制', '工具臂1', '工具臂2', '工具臂3', '工具臂4'],\n            datasets: [{\n              label: '触发次数',\n              data: [\n                footPedalData.energy || 0,\n                footPedalData.clutch || 0,\n                footPedalData.camera || 0,\n                handClutchData.arm1 || 0,\n                handClutchData.arm2 || 0,\n                handClutchData.arm3 || 0,\n                handClutchData.arm4 || 0\n              ],\n              backgroundColor: [\n                '#165DFF', '#36BFFA', '#0FC6C2', \n                '#165DFF80', '#36BFFA80', '#0FC6C280', '#FF7D0080'\n              ]\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        })\n      }\n    }\n\n    // 格式化函数\n    const formatFileSize = (bytes) => {\n      if (bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = (dateString) => {\n      if (!dateString) return '-'\n      return new Date(dateString).toLocaleString('zh-CN')\n    }\n\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    // 获取所有开机时间\n    const getAllPowerOnTimes = (surgery) => {\n      if (!surgery) return []\n      \n      // 如果有开机时间数组，返回所有\n      if (surgery.power_on_times && surgery.power_on_times.length > 0) {\n        return surgery.power_on_times\n      }\n      \n      // 兼容旧版本：如果有单个开机时间，返回数组\n      if (surgery.power_on_time) {\n        return [surgery.power_on_time]\n      }\n      \n      return []\n    }\n\n    // 获取所有关机时间\n    const getAllPowerOffTimes = (surgery) => {\n      if (!surgery) return []\n      \n      // 如果有关机时间数组，返回所有\n      if (surgery.shutdown_times && surgery.shutdown_times.length > 0) {\n        return surgery.shutdown_times\n      }\n      \n      // 兼容旧版本：如果有单个关机时间，返回数组\n      if (surgery.power_off_time) {\n        return [surgery.power_off_time]\n      }\n      \n      return []\n    }\n\n    onMounted(() => {\n      loadLogInfo()\n      loadLogEntries()\n    })\n\n    return {\n      loading,\n      logInfo,\n      logEntries,\n      searchKeyword,\n      timeRange,\n      currentPage,\n      pageSize,\n      filteredEntries,\n      paginatedEntries,\n      loadLogInfo,\n      loadLogEntries,\n      handleSearch,\n      handleTimeRangeChange,\n      clearFilters,\n      exportToCSV,\n      handleSizeChange,\n      handleCurrentChange,\n      goBack,\n      showSurgeryStatistics,\n      analyzeSurgeryData,\n      exportSurgeryReport,\n      toggleArmDetails,\n      getArmUsages,\n      getArmUsagePercentage,\n      getArmColor,\n      getArmTotalTime,\n      getArmTimelineStyle,\n      getUsageTimelineStyle,\n      getEnergyTime,\n      getArmColorClass,\n      formatTimeShort,\n      getMidTime,\n      getTimePosition,\n      getTimelineTicks,\n      getAlarmDetails,\n      formatTime,\n      formatFileSize,\n      formatDate,\n      formatTimestamp,\n      disabledDate,\n      timeRangeLimit,\n      surgeryStatisticsVisible,\n      surgeryData,\n      analyzing,\n      armDetailsVisible,\n      getAllPowerOnTimes,\n      getAllPowerOffTimes\n    }\n  }\n}\n</script>\n\n<style scoped>\n.log-analysis-container {\n  padding: 20px;\n  height: 100vh;\n  overflow: hidden;\n}\n\n.analysis-card {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  min-height: 60px;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.title {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.log-info {\n  margin-bottom: 20px;\n}\n\n.search-section {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 15px;\n  background-color: #f5f7fa;\n  border-radius: 6px;\n}\n\n.entries-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  min-height: 0;\n  max-height: calc(100vh - 300px);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.section-header h3 {\n  margin: 0;\n  color: #303133;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  padding: 10px 0;\n}\n\n/* 手术统计对话框样式 */\n.surgery-statistics-content {\n  max-height: 70vh;\n  overflow-y: auto;\n}\n\n.analysis-section {\n  margin: 40px 0;\n}\n\n.analysis-content {\n  text-align: center;\n  padding: 40px;\n}\n\n.analysis-content .el-icon {\n  font-size: 48px;\n  color: #165dff;\n  margin-bottom: 16px;\n}\n\n.analysis-content h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: #1d2129;\n}\n\n.analysis-content p {\n  margin: 0 0 24px 0;\n  color: #86909c;\n}\n\n.export-section {\n  text-align: right;\n  margin-bottom: 20px;\n}\n\n.time-info {\n  margin-bottom: 20px;\n}\n\n.time-card {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background: #f7f8fa;\n  border-radius: 8px;\n  border: 1px solid #e5e6eb;\n}\n\n.time-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  color: white;\n}\n\n.time-icon.power-on {\n  background: #165dff;\n}\n\n.time-icon.power-off {\n  background: #f53f3f;\n}\n\n.time-icon.surgery-start {\n  background: #00b42a;\n}\n\n.time-icon.surgery-end {\n  background: #ff7d00;\n}\n\n.time-content {\n  flex: 1;\n}\n\n.time-label {\n  font-size: 12px;\n  color: #86909c;\n  margin-bottom: 4px;\n}\n\n.time-value {\n  font-size: 14px;\n  font-weight: 500;\n  color: #1d2129;\n}\n\n.arm-usage-card {\n  margin-bottom: 20px;\n}\n\n.arm-usage-card .el-card__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.total-duration {\n  font-size: 14px;\n  color: #86909c;\n}\n\n.arm-usage-content {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.arm-item {\n  margin-bottom: 20px;\n  padding: 16px;\n  border: 1px solid #e5e6eb;\n  border-radius: 8px;\n}\n\n.arm-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.arm-name {\n  font-weight: 500;\n  color: #1d2129;\n}\n\n.toggle-btn {\n  color: #165dff;\n}\n\n.arm-progress {\n  margin-bottom: 12px;\n}\n\n.progress-text {\n  font-size: 12px;\n  color: white;\n}\n\n.arm-details {\n  border-top: 1px solid #e5e6eb;\n  padding-top: 12px;\n}\n\n.usage-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f2f3f5;\n}\n\n.usage-item:last-child {\n  border-bottom: none;\n}\n\n.usage-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.instrument-name {\n  font-weight: 500;\n  color: #1d2129;\n}\n\n.udi-code {\n  font-size: 12px;\n  color: #86909c;\n}\n\n.usage-time {\n  font-size: 12px;\n  color: #86909c;\n}\n\n.alarm-card {\n  margin-bottom: 20px;\n}\n\n.alarm-card .el-card__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.alarm-count {\n  font-size: 14px;\n  color: #86909c;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n}\n\n.chart-container {\n  height: 300px;\n  position: relative;\n}\n\n.stats-grid {\n  margin-top: 20px;\n}\n\n.stats-card {\n  background: #f7f8fa;\n  padding: 16px;\n  border-radius: 8px;\n  border: 1px solid #e5e6eb;\n}\n\n.stats-card h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  color: #1d2129;\n}\n\n.stats-card ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.stats-card li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 4px 0;\n  font-size: 12px;\n}\n\n.stats-card .count {\n  font-weight: 500;\n  color: #165dff;\n}\n\n/* 时间轴样式 */\n.timeline-line {\n  position: absolute;\n  left: 3.5rem;\n  top: 0;\n  bottom: 0;\n  width: 0.125rem;\n  background-color: #E5E6EB;\n}\n\n.timeline-dot {\n  position: absolute;\n  left: 3.5rem;\n  top: 0.75rem;\n  width: 0.75rem;\n  height: 0.75rem;\n  border-radius: 9999px;\n  margin-left: -0.375rem;\n  border: 2px solid #FFFFFF;\n}\n\n.timeline-axis {\n  position: relative;\n  height: 3rem;\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 2rem;\n  background: linear-gradient(to bottom, transparent 0%, transparent 80%, #E5E7EB 80%, #E5E7EB 100%);\n  border-bottom: 2px solid #E5E7EB;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.timeline-tick {\n  position: absolute;\n  width: 0.25rem;\n  height: 1rem;\n  background-color: #9CA3AF;\n  bottom: 0;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.timeline-label {\n  position: absolute;\n  bottom: -2rem;\n  font-size: 0.75rem;\n  color: #4B5563;\n  transform: translateX(-50%);\n  font-weight: 500;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 2px 6px;\n  border-radius: 4px;\n  backdrop-filter: blur(4px);\n}\n\n.timeline-segment {\n  position: absolute;\n  height: 1.5rem;\n  border-radius: 9999px;\n  transition: all 0.2s;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n}\n\n.timeline-segment:hover {\n  opacity: 0.9;\n}\n\n.timeline-segment-sub {\n  position: absolute;\n  height: 1rem;\n  border-radius: 9999px;\n  transition: all 0.2s;\n  cursor: pointer;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.timeline-segment-sub:hover {\n  opacity: 0.9;\n}\n\n/* 工具臂颜色 */\n.tool-arm-1 { background-color: #165DFF; }\n.tool-arm-2 { background-color: #36BFFA; }\n.tool-arm-3 { background-color: #0FC6C2; }\n.tool-arm-4 { background-color: #FF7D00; }\n\n/* 颜色定义 */\n.text-primary { color: #165DFF; }\n.text-secondary { color: #36BFFA; }\n.text-accent { color: #0FC6C2; }\n.text-warning { color: #FF7D00; }\n.text-danger { color: #F53F3F; }\n.text-success { color: #00B42A; }\n.text-neutral { color: #4E5969; }\n\n.bg-primary { background-color: #165DFF; }\n.bg-secondary { background-color: #36BFFA; }\n.bg-accent { background-color: #0FC6C2; }\n.bg-warning { background-color: #FF7D00; }\n.bg-danger { background-color: #F53F3F; }\n.bg-success { background-color: #00B42A; }\n.bg-neutral { background-color: #4E5969; }\n\n.bg-primary\\/10 { background-color: rgba(22, 93, 255, 0.1); }\n.bg-secondary\\/10 { background-color: rgba(54, 191, 250, 0.1); }\n.bg-accent\\/10 { background-color: rgba(15, 198, 194, 0.1); }\n.bg-warning\\/10 { background-color: rgba(255, 125, 0, 0.1); }\n.bg-danger\\/10 { background-color: rgba(245, 63, 63, 0.1); }\n.bg-success\\/10 { background-color: rgba(0, 180, 42, 0.1); }\n.bg-neutral\\/10 { background-color: rgba(78, 89, 105, 0.1); }\n\n.border-primary { border-color: #165DFF; }\n.border-secondary { border-color: #36BFFA; }\n.border-accent { border-color: #0FC6C2; }\n.border-warning { border-color: #FF7D00; }\n.border-danger { border-color: #F53F3F; }\n.border-success { border-color: #00B42A; }\n.border-neutral { border-color: #4E5969; }\n\n.border-primary\\/30 { border-color: rgba(22, 93, 255, 0.3); }\n.border-secondary\\/30 { border-color: rgba(54, 191, 250, 0.3); }\n.border-accent\\/30 { border-color: rgba(15, 198, 194, 0.3); }\n.border-warning\\/30 { border-color: rgba(255, 125, 0, 0.3); }\n\n/* 工具类 */\n.flex { display: flex; }\n.items-center { align-items: center; }\n.justify-between { justify-content: space-between; }\n.justify-end { justify-content: flex-end; }\n.space-x-2 > * + * { margin-left: 0.5rem; }\n.space-y-6 > * + * { margin-top: 1.5rem; }\n\n.mb-1 { margin-bottom: 0.25rem; }\n.mb-2 { margin-bottom: 0.5rem; }\n.mb-4 { margin-bottom: 1rem; }\n.mb-6 { margin-bottom: 1.5rem; }\n.mb-8 { margin-bottom: 2rem; }\n.mb-10 { margin-bottom: 2.5rem; }\n\n.mt-2 { margin-top: 0.5rem; }\n.mt-4 { margin-top: 1rem; }\n\n.ml-1 { margin-left: 0.25rem; }\n.ml-2 { margin-left: 0.5rem; }\n.ml-6 { margin-left: 1.5rem; }\n\n.mr-1 { margin-right: 0.25rem; }\n.mr-2 { margin-right: 0.5rem; }\n\n.p-4 { padding: 1rem; }\n.p-6 { padding: 1.5rem; }\n\n.gap-4 { gap: 1rem; }\n\n.w-3 { width: 0.75rem; }\n.h-3 { height: 0.75rem; }\n.h-6 { height: 1.5rem; }\n.h-8 { height: 2rem; }\n\n.text-xs { font-size: 0.75rem; }\n.text-sm { font-size: 0.875rem; }\n.text-lg { font-size: 1.125rem; }\n\n.font-medium { font-weight: 500; }\n.font-semibold { font-weight: 600; }\n\n.rounded { border-radius: 0.25rem; }\n.rounded-lg { border-radius: 0.5rem; }\n.rounded-full { border-radius: 9999px; }\n.rounded-sm { border-radius: 0.125rem; }\n\n.border { border-width: 1px; }\n.border-l-2 { border-left-width: 2px; }\n\n.border-neutral-200 { border-color: #E5E6EB; }\n.border-neutral-300 { border-color: #C9CDD4; }\n\n.bg-white { background-color: #FFFFFF; }\n.bg-neutral-50 { background-color: #F2F3F5; }\n\n.text-white { color: #FFFFFF; }\n.text-neutral-500 { color: #86909C; }\n.text-neutral-600 { color: #4E5969; }\n.text-neutral-700 { color: #1D2129; }\n\n.relative { position: relative; }\n.absolute { position: absolute; }\n\n.left-0 { left: 0; }\n.right-0 { right: 0; }\n.bottom-0 { bottom: 0; }\n.top-3 { top: 0.75rem; }\n\n.transform { transform: translateZ(0); }\n.-translate-x-1\\/2 { transform: translateX(-50%); }\n.-ml-1\\.5 { margin-left: -0.375rem; }\n\n.inline-block { display: inline-block; }\n\n.hidden { display: none; }\n\n.transition-transform { transition: transform 0.3s ease; }\n.transition-all { transition: all 0.3s ease; }\n\n.rotate-180 { transform: rotate(180deg); }\n\n.hover\\:underline:hover { text-decoration: underline; }\n\n/* 详情按钮样式 */\n.toggle-details {\n  background: linear-gradient(135deg, rgba(22, 93, 255, 0.1) 0%, rgba(22, 93, 255, 0.05) 100%);\n  border: 1px solid rgba(22, 93, 255, 0.2);\n  box-shadow: 0 1px 3px rgba(22, 93, 255, 0.1);\n  backdrop-filter: blur(4px);\n}\n\n/* 多个时间显示样式 */\n.time-item {\n  margin-bottom: 4px;\n  padding: 2px 0;\n  font-size: 13px;\n  color: #606266;\n}\n\n.time-item:last-child {\n  margin-bottom: 0;\n}\n\n.time-item:not(:last-child) {\n  border-bottom: 1px solid #EBEEF5;\n  padding-bottom: 4px;\n}\n\n.time-value {\n  min-height: 20px;\n}\n\n.toggle-details:hover {\n  background: linear-gradient(135deg, rgba(22, 93, 255, 0.15) 0%, rgba(22, 93, 255, 0.08) 100%);\n  border-color: rgba(22, 93, 255, 0.3);\n  box-shadow: 0 2px 6px rgba(22, 93, 255, 0.15);\n  transform: translateY(-1px);\n}\n</style> ","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { render } from \"./LogAnalysis.vue?vue&type=template&id=07df2471&scoped=true\"\nimport script from \"./LogAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./LogAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./LogAnalysis.vue?vue&type=style&index=0&id=07df2471&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07df2471\"]])\n\nexport default __exports__"],"names":["class","header","goBack","icon","size","logInfo","type","original_name","exportToCSV","showSurgeryStatistics","style","column","border","label","device_id","formatFileSize","formatDate","upload_time","parse_time","uploader_id","searchKeyword","placeholder","clearable","handleSearch","prefix","timeRange","format","disabledDate","handleTimeRangeChange","formatTimestamp","timeRangeLimit","clearFilters","filteredEntries","length","data","paginatedEntries","stripe","prop","width","sortable","default","row","timestamp","loading","currentPage","pageSize","total","layout","handleSizeChange","handleCurrentChange","title","surgeryStatisticsVisible","surgeryData","exportSurgeryReport","gutter","span","getAllPowerOnTimes","time","index","key","formatTime","getAllPowerOffTimes","surgery_start_time","surgery_end_time","total_duration","getTimelineTicks","tick","getTime","position","formatTimeShort","getArmUsages","armUsage","toggleArmDetails","armDetailsVisible","getArmTotalTime","getArmTimelineStyle","usage","usageIndex","getArmColorClass","instrumentName","udi","getUsageTimelineStyle","getEnergyTime","alarm_count","getAlarmDetails","scope","status","id","foot_pedal_stats","energy","clutch","camera","i","hand_clutch_stats","analyzeSurgeryData","analyzing","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","dash","dashOffset","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","axisID","axisNumber","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipSelf","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","selfJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","components","Search","Download","ArrowLeft","DataAnalysis","SwitchButton","Close","VideoPlay","VideoPause","ArrowUp","ArrowDown","setup","store","router","logId","logEntries","stateMachineChart","footPedalChart","minTime","maxTime","explanation","error_code","startTime","endTime","entryTime","loadLogInfo","async","response","dispatch","page","log","logs","loadLogEntries","dataToSave","param1","param2","param3","param4","sessionStorage","setItem","warning","headers","csvContent","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","success","go","routeData","query","open","api","surgeryStatistics","analyze","initCharts","exportReport","armIndex","surgery","arm1_usage","arm2_usage","arm3_usage","arm4_usage","getArmUsagePercentage","getArmColor","usageTimes","startPosition","getTimePosition","endPosition","usageTime","toLocaleTimeString","getMidTime","alarm_details","toLocaleString","stateMachineCtx","querySelector","state_machine_changes","stateData","state","footPedalCtx","footPedalData","handClutchData","arm1","arm2","arm3","arm4","bytes","sizes","toFixed","dateString","getFullYear","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","power_on_times","power_on_time","shutdown_times","power_off_time","__exports__"],"sourceRoot":""}