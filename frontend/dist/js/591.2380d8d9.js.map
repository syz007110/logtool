{"version":3,"file":"js/591.2380d8d9.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/BatchAnalysis.vue","webpack://logtool-frontend/./src/views/BatchAnalysis.vue?7d02"],"sourcesContent":["<template>\n  <div class=\"batch-analysis-container\">\n    <!-- 主要内容 -->\n    <div class=\"analysis-card-wrapper\">\n      <el-card class=\"analysis-card\">\n      <div class=\"card-header\" :style=\"{ borderBottom: 'none' }\">\n        <div class=\"header-left\">\n          <span class=\"title\">批量日志分析</span>\n          <el-tag v-if=\"batchCount > 0 && selectedLogsCount > 0\" type=\"info\" size=\"small\">\n              设备编号：{{ selectedLogs[0]?.device_id || '未知' }}\n            </el-tag>\n          <el-tooltip placement=\"bottom\" effect=\"light\" transition=\"el-fade-in-linear\" popper-class=\"selected-files-popper\" :disabled=\"selectedLogsCount === 0\">\n            <template #content>\n              <div class=\"selected-files-tooltip\">\n                <el-tag v-for=\"log in selectedLogs\" :key=\"log.id\" size=\"small\" style=\"margin: 2px 4px 2px 0;\">\n                  {{ log.original_name }}\n                </el-tag>\n              </div>\n            </template>       \n            <el-tag type=\"info\" size=\"small\">\n              已选择 {{ selectedLogsCount }} 个日志文件\n            </el-tag>\n          </el-tooltip>\n        </div>\n        <div class=\"header-right\">\n          <el-button \n            v-if=\"!loading && batchCount > 0\" \n            @click=\"exportToCSV\" \n            type=\"success\" \n            size=\"small\"\n          >\n            <el-icon><Download /></el-icon>\n            导出CSV\n          </el-button>\n          <el-button \n            v-if=\"!loading && selectedLogsCount > 0 && batchCount > 0\" \n            @click=\"showSurgeryStatistics\" \n            type=\"primary\" \n            size=\"small\" \n            style=\"margin-left: 10px;\"\n          >\n            <el-icon><DataAnalysis /></el-icon>\n            手术分析\n          </el-button>\n        </div>\n      </div>\n\n      <!-- 搜索和筛选 -->\n      <div class=\"search-section\" :style=\"{ marginTop: '8px' }\">\n        <div class=\"search-grid\">\n          <!-- 1/4 时间搜索框 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">时间范围</div>\n            <el-date-picker\n              v-model=\"timeRange\"\n              type=\"datetimerange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始时间\"\n              end-placeholder=\"结束时间\"\n              format=\"YYYY-MM-DD HH:mm:ss\"\n              value-format=\"YYYY-MM-DD HH:mm:ss\"\n              class=\"time-range\"\n              size=\"small\"\n               :default-value=\"defaultPickerRange\"\n              :disabled-date=\"disableOutOfRangeDates\"\n              @change=\"handleTimeRangeChange\"\n            />\n          </div>\n          \n          <!-- 2/4 简单搜索框 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">关键字</div>\n            <el-input\n              v-model=\"searchKeyword\"\n              placeholder=\"搜索释义内容或故障码\"\n              class=\"search-input\"\n              clearable\n              @input=\"handleSearch\"\n              size=\"small\"\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </div>\n\n          <!-- 3/4 高级搜索入口 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">高级搜索</div>\n            <div class=\"advanced-actions\">\n              <el-button size=\"small\" type=\"primary\" plain @click=\"showAdvancedFilter = true\">打开高级筛选</el-button>\n              <div class=\"advanced-summary\" v-if=\"leafConditionCount > 0\">\n                已添加 {{ leafConditionCount }} 个条件（逻辑：{{ filtersRoot.logic }}）\n              </div>\n            </div>\n          </div>\n\n          <!-- 4/4 清除搜索 -->\n          <div class=\"grid-item\">\n            <div class=\"item-title\">清除搜索</div>\n            <el-button size=\"small\" @click=\"clearFilters\">清除所有条件</el-button>\n          </div>\n        </div>\n\n        <!-- 搜索表达式展示 -->\n        <div class=\"search-expression\" v-if=\"searchExpression\">\n          <span class=\"label\">搜索表达式：</span>\n          <span class=\"expr\">{{ searchExpression }}</span>\n        </div>\n      </div>\n\n      <!-- 日志条目表格 -->\n      <div class=\"entries-section\">\n        <div class=\"section-header\">\n          <h3>日志条目 ({{ filteredCount }})</h3>\n        </div>\n\n        <!-- 加载状态 -->\n        <div v-if=\"loading\" class=\"loading-section\">\n          <el-empty description=\"正在加载日志数据...\" />\n        </div>\n\n        <!-- 数据表格 -->\n        <div v-else class=\"table-container\">\n          <el-table \n            :data=\"paginatedEntries\" \n            style=\"width: 100%\"\n            v-loading=\"loading\"\n            height=\"60vh\"\n            stripe\n            @current-change=\"forceRelayout\"\n            @selection-change=\"forceRelayout\"\n            @sort-change=\"forceRelayout\"\n            @filter-change=\"forceRelayout\"\n            @expand-change=\"forceRelayout\"\n          >\n            <el-table-column prop=\"log_name\" label=\"日志文件\" width=\"150\">\n              <template #default=\"{ row }\">\n                <ExplanationCell :text=\"row.log_name\" />\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" sortable>\n              <template #default=\"{ row }\">\n                {{ formatTimestamp(row.timestamp) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"error_code\" label=\"故障码\" width=\"120\" sortable />\n            <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\n            <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\n            <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\n            <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\n            <el-table-column prop=\"explanation\" label=\"释义\" min-width=\"300\">\n              <template #default=\"{ row }\">\n                <ExplanationCell :text=\"row.explanation\" />\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-wrapper\" v-if=\"filteredCount > 0\">\n          <el-pagination\n            :current-page=\"currentPage\"\n            :page-size=\"pageSize\"\n            :page-sizes=\"[50, 100, 200, 500]\"\n            :total=\"filteredEntries.length\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n      </el-card>\n    </div>\n\n    <!-- 高级筛选弹窗 -->\n    <el-dialog v-model=\"showAdvancedFilter\" title=\"高级筛选\" width=\"880px\">\n      <div class=\"advanced-filter\">\n        <!-- 1. 条件组（支持嵌套） -->\n        <div class=\"section\">\n          <div class=\"section-title-row\">\n            <div class=\"section-title\">1. 条件组（支持嵌套）</div>\n            <div class=\"ops-right\">\n              <el-switch\n                v-model=\"useLocalAdvanced\"\n                size=\"small\"\n                active-text=\"本地\"\n                inactive-text=\"服务端\"\n                inline-prompt\n              />\n              <el-button \n                size=\"small\" \n                type=\"danger\" \n                text \n                @click=\"clearAllConditionsOnly\" \n                :disabled=\"!filtersRoot.conditions || filtersRoot.conditions.length === 0\"\n              >清空所有条件</el-button>\n            </div>\n          </div>\n          <div class=\"expr-preview\" v-if=\"advancedExpression\" ref=\"exprPreviewRef\">\n            <span class=\"label\">表达式预览：</span>\n            <span class=\"expr\">{{ advancedExpression }}</span>\n          </div>\n          <!-- 常用搜索表达式（内嵌于条件组下，位于表达式预览下侧） -->\n          <div class=\"common-templates\" v-if=\"templates && templates.length\">\n            <div class=\"section-title\">常用搜索表达式</div>\n            <div class=\"tags-ops\">\n              <el-button size=\"small\" type=\"primary\" plain @click=\"applySelectedTemplate\" :disabled=\"!selectedTemplateName\">应用选择表达式</el-button>\n              <span class=\"hint\">选择表达式并应用，条件会自动填充进“添加条件”区域</span>\n            </div>\n            <div class=\"tags-wrap antd-tags single-select\">\n              <a-checkable-tag\n                v-for=\"tpl in templates\"\n                :key=\"tpl.name\"\n                :checked=\"selectedTemplateName === tpl.name\"\n                @change=\"(checked) => onTemplateSingleSelect(tpl.name, checked)\"\n                class=\"tpl-tag bordered\"\n              >\n                {{ tpl.name }}\n              </a-checkable-tag>\n            </div>\n          </div>\n          <div class=\"group-root\">\n            <div class=\"group-header\">\n              <span>根组逻辑：</span>\n              <el-radio-group v-model=\"filtersRoot.logic\">\n            <el-radio-button label=\"AND\">AND</el-radio-button>\n            <el-radio-button label=\"OR\">OR</el-radio-button>\n          </el-radio-group>\n              <div class=\"group-actions\">\n                <el-button size=\"small\" type=\"primary\" @click=\"addConditionToGroup(filtersRoot)\">添加条件</el-button>\n                <el-button size=\"small\" @click=\"addGroupToGroup(filtersRoot)\">添加子组</el-button>\n        </div>\n            </div>\n            <ConditionGroup\n              :group=\"filtersRoot\"\n              :get-operator-options=\"getOperatorOptions\"\n              :on-field-change=\"onFieldChange\"\n              :on-operator-change=\"onOperatorChange\"\n              :add-condition-to-group=\"addConditionToGroup\"\n              :add-group-to-group=\"addGroupToGroup\"\n              :remove-node-at=\"removeNodeAt\"\n              :is-root=\"true\"\n            />\n          </div>\n        </div>\n\n        <!-- 2. 导入表达式 -->\n        <div class=\"section\">\n          <div class=\"section-title\">2. 导入表达式</div>\n        <div class=\"import-row\">\n          <el-upload \n            :show-file-list=\"false\" \n            accept=\"application/json\"\n            :before-upload=\"beforeImportTemplates\"\n          >\n              <el-button size=\"small\">从文件导入(JSON)</el-button>\n          </el-upload>\n        </div>\n        </div>\n\n        <!-- 3. 输入自然语言 -->\n        <div class=\"section\">\n          <div class=\"section-title\">3. 输入自然语言</div>\n          <div class=\"import-text\">\n            <el-input\n              v-model=\"naturalLanguageText\"\n              type=\"textarea\"\n              :rows=\"3\"\n              placeholder=\"请输入自然语言，例如：1号臂相关的日志 且 时间在 2024-01-01 到 2024-02-01 之间\"\n            />\n            <div class=\"import-actions\">\n              <el-button size=\"small\" type=\"primary\" plain @click=\"applyNaturalLanguage\" :disabled=\"!naturalLanguageText\">解析并应用</el-button>\n              <el-button size=\"small\" text @click=\"naturalLanguageText = ''\" :disabled=\"!naturalLanguageText\">清空</el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"showAdvancedFilter = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"applyAdvancedFilters\">应用</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick, h, resolveComponent } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { Search, Download, ArrowLeft, DataAnalysis, Warning } from '@element-plus/icons-vue'\nimport api from '@/api'\n\nexport default {\n  name: 'BatchAnalysis',\n  components: {\n    Search,\n    Download,\n    ArrowLeft,\n    DataAnalysis,\n    Warning,\n    ExplanationCell: {\n      name: 'ExplanationCell',\n      props: { text: { type: String, default: '' } },\n      setup(props) {\n        const containerRef = ref(null)\n        const needsTooltip = ref(false)\n        let resizeObserver = null\n\n        const measure = () => {\n          const el = containerRef.value\n          if (!el) return\n          // 使用 > 而非 >=，并允许 1px 阈值容错\n          needsTooltip.value = (el.scrollWidth - el.clientWidth) > 1\n        }\n\n        const handleMouseEnter = () => {\n          // 悬停时再即时测量，保证分页切换后也能正确判断\n          measure()\n        }\n\n        onMounted(async () => {\n          await nextTick()\n          measure()\n          if ('ResizeObserver' in window) {\n            resizeObserver = new ResizeObserver(() => measure())\n            if (containerRef.value) resizeObserver.observe(containerRef.value)\n          } else {\n            window.addEventListener('resize', measure)\n          }\n        })\n\n        onBeforeUnmount(() => {\n          if (resizeObserver && containerRef.value) resizeObserver.unobserve(containerRef.value)\n          if (resizeObserver) resizeObserver.disconnect()\n          resizeObserver = null\n          window.removeEventListener('resize', measure)\n        })\n\n        return () => h(resolveComponent('el-tooltip'), {\n          content: props.text,\n          placement: 'top',\n          effect: 'dark',\n          popperClass: 'explanation-tooltip dark',\n          teleported: true,\n          showAfter: 120,\n          disabled: !needsTooltip.value\n        }, {\n          default: () => h('span', {\n            ref: containerRef,\n            class: 'explanation-ellipsis',\n            style: 'display:inline-block;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;',\n            onMouseenter: handleMouseEnter\n          }, props.text)\n        })\n      }\n    },\n    ConditionGroup: {\n      name: 'ConditionGroup',\n      props: {\n        group: { type: Object, required: true },\n        getOperatorOptions: { type: Function, required: true },\n        onFieldChange: { type: Function, required: true },\n        onOperatorChange: { type: Function, required: true },\n        addConditionToGroup: { type: Function, required: true },\n        addGroupToGroup: { type: Function, required: true },\n        removeNodeAt: { type: Function, required: true },\n        isRoot: { type: Boolean, default: false }\n      },\n      setup(props) {\n        const ElSelect = resolveComponent('el-select')\n        const ElOption = resolveComponent('el-option')\n        const ElInput = resolveComponent('el-input')\n        const ElButton = resolveComponent('el-button')\n        const ElRadioGroup = resolveComponent('el-radio-group')\n        const ElRadioButton = resolveComponent('el-radio-button')\n        const Self = resolveComponent('ConditionGroup')\n\n        const renderCondition = (node, idx, parent) => {\n          return h('div', { class: 'condition', key: idx }, [\n            h(ElSelect, {\n              modelValue: node.field,\n              style: 'width: 140px;',\n              placeholder: '字段',\n              'onUpdate:modelValue': (v) => { node.field = v; props.onFieldChange(node) }\n            }, {\n              default: () => [\n                h(ElOption, { label: '时间戳', value: 'timestamp' }),\n                h(ElOption, { label: '故障码', value: 'error_code' }),\n                h(ElOption, { label: '参数1', value: 'param1' }),\n                h(ElOption, { label: '参数2', value: 'param2' }),\n                h(ElOption, { label: '参数3', value: 'param3' }),\n                h(ElOption, { label: '参数4', value: 'param4' }),\n                h(ElOption, { label: '释义', value: 'explanation' })\n              ]\n            }),\n            h(ElSelect, {\n              modelValue: node.operator,\n              style: 'width: 150px; margin-left: 8px;',\n              placeholder: '操作符',\n              'onUpdate:modelValue': (v) => { node.operator = v; props.onOperatorChange(node) }\n            }, {\n              default: () => (props.getOperatorOptions(node.field) || []).map(op => h(ElOption, { label: op.label, value: op.value, key: op.value }))\n            }),\n            node.operator === 'between'\n              ? [\n                  h(ElInput, {\n                    modelValue: Array.isArray(node.value) ? node.value[0] : '',\n                    placeholder: '起',\n                    style: 'width: 140px; margin-left:8px;',\n                    'onUpdate:modelValue': (v) => { const arr = Array.isArray(node.value) ? node.value.slice(0,2) : ['', '']; arr[0] = v; node.value = arr }\n                  }),\n                  h(ElInput, {\n                    modelValue: Array.isArray(node.value) ? node.value[1] : '',\n                    placeholder: '止',\n                    style: 'width: 140px; margin-left:8px;',\n                    'onUpdate:modelValue': (v) => { const arr = Array.isArray(node.value) ? node.value.slice(0,2) : ['', '']; arr[1] = v; node.value = arr }\n                  })\n                ]\n              : h(ElInput, {\n                  modelValue: Array.isArray(node.value) ? node.value.join(',') : (node.value ?? ''),\n                  placeholder: '值',\n                  style: 'width: 300px; margin-left:8px;',\n                  'onUpdate:modelValue': (v) => { node.value = v }\n                }),\n            h(ElButton, { type: 'danger', text: true, style: 'margin-left:8px;', onClick: () => props.removeNodeAt(parent, idx) }, { default: () => '删除' })\n          ])\n        }\n\n        const renderGroup = (group, parent, depth = 0) => {\n          const children = Array.isArray(group.conditions) ? group.conditions : []\n          const style = depth > 0 ? `margin-left: ${depth * 12}px;` : ''\n          return h('div', { class: 'group-box', style }, [\n            ...children.map((node, idx) => {\n              if (node && node.field) {\n                return renderCondition(node, idx, group)\n              }\n              return h('div', { class: 'group-box', key: idx, style: `margin-left: ${(depth + 1) * 12}px;` }, [\n                h('div', { class: 'group-header nested' }, [\n                  h('span', null, '组逻辑：'),\n                  h(ElRadioGroup, {\n                    modelValue: node.logic || 'AND',\n                    'onUpdate:modelValue': (v) => { node.logic = v }\n                  }, {\n                    default: () => [\n                      h(ElRadioButton, { label: 'AND' }, { default: () => 'AND' }),\n                      h(ElRadioButton, { label: 'OR' }, { default: () => 'OR' })\n                    ]\n                  }),\n                  h('div', { class: 'group-actions' }, [\n                    h(ElButton, { size: 'small', type: 'primary', onClick: () => props.addConditionToGroup(node) }, { default: () => '添加条件' }),\n                    h(ElButton, { size: 'small', onClick: () => props.addGroupToGroup(node) }, { default: () => '添加子组' }),\n                    h(ElButton, { size: 'small', type: 'danger', text: true, onClick: () => props.removeNodeAt(group, idx) }, { default: () => '删除组' })\n                  ])\n                ]),\n                h(Self, {\n                  group: node,\n                  getOperatorOptions: props.getOperatorOptions,\n                  onFieldChange: props.onFieldChange,\n                  onOperatorChange: props.onOperatorChange,\n                  addConditionToGroup: props.addConditionToGroup,\n                  addGroupToGroup: props.addGroupToGroup,\n                  removeNodeAt: props.removeNodeAt\n                , depth: (depth + 1) })\n              ])\n            }),\n            h('div', { class: 'group-actions' }, [\n              h(ElButton, { size: 'small', type: 'primary', onClick: () => props.addConditionToGroup(group) }, { default: () => '添加条件' }),\n              h(ElButton, { size: 'small', onClick: () => props.addGroupToGroup(group) }, { default: () => '添加子组' })\n            ])\n          ])\n        }\n\n        return () => renderGroup(props.group, props.group, 0)\n      }\n    }\n  },\n  setup() {\n    const store = useStore()\n    const route = useRoute()\n    const router = useRouter()\n    \n    const loading = ref(false)\n    const selectedLogs = ref([])\n    const batchLogEntries = ref([])\n    const searchKeyword = ref('')\n    const timeRange = ref(null)\n    const currentPage = ref(1)\n    const pageSize = ref(100)\n    const advancedMode = ref(false)\n    const useLocalAdvanced = ref(false)\n\n    // 高级筛选弹窗与条件\n    const showAdvancedFilter = ref(false)\n    const filtersRoot = ref({ logic: 'AND', conditions: [] })\n    \n    // 手术统计相关\n    const surgeryStatisticsVisible = ref(false)\n    const surgeryData = ref(null)\n    const analyzing = ref(false)\n    const templates = ref([])\n    const selectedTemplateName = ref('')\n    const importExpressionText = ref('')\n    const naturalLanguageText = ref('')\n\n    // 搜索表达式（显示在搜索卡片中）\n    const groupToString = (node) => {\n      if (!node) return ''\n      // 叶子条件\n      if (node.field && node.operator) {\n        const val = Array.isArray(node.value) ? node.value.join(',') : (node.value ?? '')\n        return `${node.field} ${node.operator} ${val}`\n      }\n      // 分组：始终使用括号包裹，不再在前缀标注逻辑 [AND]/[OR]\n      if (Array.isArray(node.conditions)) {\n        const logic = node.logic || 'AND'\n        const inner = node.conditions\n          .map(child => groupToString(child))\n          .filter(Boolean)\n          .join(` ${logic} `)\n        if (!inner) return ''\n        // 根组与子组均仅使用括号包裹，逻辑通过括号内部的连接词体现\n        if (node === filtersRoot.value) {\n          return `(${inner})`\n        }\n        return `(${inner})`\n      }\n      return ''\n    }\n    const searchExpression = computed(() => {\n      const segments = []\n      if (timeRange.value && timeRange.value.length === 2) {\n        const [start, end] = timeRange.value\n        segments.push(`时间: ${formatTimestamp(start)} ~ ${formatTimestamp(end)}`)\n      }\n      if (searchKeyword.value) {\n        segments.push(`关键字(全部): ${searchKeyword.value}`)\n      }\n      const adv = groupToString(filtersRoot.value)\n      if (adv) segments.push(`${adv}`)\n      // 用 AND 串联，直观体现与关系\n      return segments.join(' AND ')\n    })\n\n    // 仅用于高级筛选弹窗内部的表达式展示，不在这里加“时间/关键字”前缀\n    const advancedExpression = computed(() => {\n      const adv = groupToString(filtersRoot.value)\n      return adv || ''\n    })\n\n    const countLeafConditions = (node) => {\n      if (!node) return 0\n      if (node.field && node.operator) return 1\n      if (Array.isArray(node.conditions)) return node.conditions.reduce((acc, n) => acc + countLeafConditions(n), 0)\n      return 0\n    }\n    const leafConditionCount = computed(() => countLeafConditions(filtersRoot.value))\n\n    // 过滤后的条目\n    const filteredEntries = computed(() => {\n      const list = Array.isArray(batchLogEntries.value) ? batchLogEntries.value : []\n      let entries = list\n\n      // 搜索过滤\n      if (searchKeyword.value) {\n        const kw = searchKeyword.value.toLowerCase()\n        entries = entries.filter(entry => \n          String(entry.explanation || '').toLowerCase().includes(kw) ||\n          String(entry.error_code || '').toLowerCase().includes(kw)\n        )\n      }\n\n      // 时间范围过滤\n      if (timeRange.value && timeRange.value.length === 2) {\n        const [startTime, endTime] = timeRange.value\n        const start = new Date(startTime)\n        const end = new Date(endTime)\n        entries = entries.filter(entry => {\n          const entryTime = new Date(entry.timestamp)\n          return entryTime >= start && entryTime <= end\n        })\n      }\n\n      // 本地高级筛选\n      if (advancedMode.value && useLocalAdvanced.value && leafConditionCount.value > 0) {\n        entries = entries.filter(e => evaluateAdvanced(e))\n      }\n\n      return entries\n    })\n\n    const batchCount = computed(() => Array.isArray(batchLogEntries.value) ? batchLogEntries.value.length : 0)\n    const selectedLogsCount = computed(() => Array.isArray(selectedLogs.value) ? selectedLogs.value.length : 0)\n    const filteredCount = computed(() => Array.isArray(filteredEntries.value) ? filteredEntries.value.length : 0)\n\n    // 计算时间范围限制（取已加载条目中的最早与最晚）\n    const timeRangeLimit = computed(() => {\n      const entries = batchLogEntries.value\n      if (!entries || entries.length === 0) return null\n      const times = entries\n        .map(e => new Date(e.timestamp))\n        .filter(d => !isNaN(d))\n      if (times.length === 0) return null\n      const min = new Date(Math.min(...times))\n      const max = new Date(Math.max(...times))\n      return [min, max]\n    })\n\n    // 分页后的条目\n    const paginatedEntries = computed(() => {\n      const start = (currentPage.value - 1) * pageSize.value\n      const end = start + pageSize.value\n      return filteredEntries.value.slice(start, end)\n    })\n\n    // 从路由参数获取选中的日志\n    const loadSelectedLogs = async () => {\n      // 支持多种来源：params.logIds / query.logIds / params.id / query.id\n      const fromParamsLogIds = route.params?.logIds\n      const fromQueryLogIds = route.query?.logIds\n      const singleIdParam = route.params?.id\n      const singleIdQuery = route.query?.id\n\n      let idsStr = fromParamsLogIds || fromQueryLogIds || singleIdParam || singleIdQuery\n      if (!idsStr) return\n\n      const ids = String(idsStr)\n        .split(',')\n        .map(id => parseInt(id))\n        .filter(n => !Number.isNaN(n))\n\n      if (ids.length === 0) return\n\n      try {\n        // 从API获取所有日志信息\n        const response = await store.dispatch('logs/fetchLogs', { page: 1, limit: 1000 })\n        const allLogs = response.data.logs\n        selectedLogs.value = allLogs.filter(log => ids.includes(log.id))\n      } catch (error) {\n        ElMessage.error('获取日志信息失败')\n      }\n    }\n\n    // 加载批量日志条目\n    const loadBatchLogEntries = async () => {\n      // 如果没有选中的日志，直接返回\n      if (selectedLogs.value.length === 0) {\n        return\n      }\n      \n      try {\n        loading.value = true\n        batchLogEntries.value = []\n        if (advancedMode.value || leafConditionCount.value > 0) {\n          if (useLocalAdvanced.value) {\n            // 本地执行：先加载所有条目，再前端过滤\n            const allEntries = []\n            for (const log of selectedLogs.value) {\n              try {\n                const response = await store.dispatch('logs/fetchLogEntries', log.id)\n                const entries = response.data?.entries || response.entries || []\n                const entriesWithLogName = entries.map(entry => ({\n                  ...entry,\n                  log_name: log.original_name,\n                }))\n                allEntries.push(...entriesWithLogName)\n              } catch (error) {\n                ElMessage.warning(`获取日志 ${log.original_name} 条目失败`)\n              }\n            }\n            batchLogEntries.value = allEntries.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))\n            ElMessage.success(`批量分析完成，共 ${batchLogEntries.value.length} 条记录（本地筛选）`)\n            return\n          }\n          // 服务端过滤（分页抓取，直到取完全部记录）\n          const logIds = selectedLogs.value.map(l => l.id).join(',')\n          const filtersPayload = buildFiltersPayload()\n          const baseParams = {\n            log_ids: logIds\n          }\n          if (filtersPayload) {\n            baseParams.filters = JSON.stringify(filtersPayload)\n          }\n          // 与简易搜索联动：时间与关键词（与高级条件为 AND 关系）\n          if (timeRange.value && timeRange.value.length === 2) {\n            baseParams.start_time = timeRange.value[0]\n            baseParams.end_time = timeRange.value[1]\n          }\n          if (searchKeyword.value) baseParams.search = searchKeyword.value\n\n          const idToName = new Map(selectedLogs.value.map(l => [l.id, l.original_name]))\n          const all = []\n          let page = 1\n          const limit = 2000 // 单次抓取批量大小\n          let total = 0\n          while (true) {\n            const response = await store.dispatch('logs/fetchBatchLogEntries', { ...baseParams, page, limit })\n            const entries = response.data?.entries || []\n            total = response.data?.total ?? (page === 1 ? entries.length : total)\n            if (entries.length === 0) break\n            all.push(...entries.map(e => ({ ...e, log_name: idToName.get(e.log_id) || '' })))\n            if (all.length >= total) break\n            page += 1\n          }\n          batchLogEntries.value = all\n          ElMessage.success(`加载完成，共 ${batchLogEntries.value.length} 条记录`)\n        } else {\n          // 现有逻辑：客户端聚合\n          const allEntries = []\n          for (const log of selectedLogs.value) {\n            try {\n              const response = await store.dispatch('logs/fetchLogEntries', log.id)\n              const entries = response.data?.entries || response.entries || []\n              const entriesWithLogName = entries.map(entry => ({\n                ...entry,\n                log_name: log.original_name,\n              }))\n              allEntries.push(...entriesWithLogName)\n            } catch (error) {\n              ElMessage.warning(`获取日志 ${log.original_name} 条目失败`)\n            }\n          }\n          batchLogEntries.value = allEntries.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))\n          ElMessage.success(`批量分析完成，共 ${batchLogEntries.value.length} 条记录`)\n        }\n      } catch (error) {\n        ElMessage.error('批量分析失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 搜索处理\n    const handleSearch = () => {\n      currentPage.value = 1\n    }\n\n    const handleQuery = async () => {\n      currentPage.value = 1\n      // 自动选择：有高级条件或时间/关键词等条件时走服务端；否则本地\n      if (leafConditionCount.value > 0) {\n        await loadBatchLogEntries()\n      }\n    }\n\n    // 时间范围变化处理\n    const handleTimeRangeChange = () => {\n      // 越界纠正\n      if (timeRangeLimit.value && timeRange.value && timeRange.value.length === 2) {\n        const [min, max] = timeRangeLimit.value\n        let [start, end] = timeRange.value\n        const s = new Date(start)\n        const e = new Date(end)\n        let changed = false\n        if (s < min) { start = min; changed = true }\n        if (e > max) { end = max; changed = true }\n        if (changed) timeRange.value = [formatTimestamp(start), formatTimestamp(end)]\n      }\n      currentPage.value = 1\n    }\n\n    // 清除筛选\n    const clearFilters = async () => {\n      searchKeyword.value = ''\n      timeRange.value = null\n      filtersRoot.value = { logic: 'AND', conditions: [] }\n      advancedMode.value = false\n      currentPage.value = 1\n      // 立即重新加载，显示全部条目\n      await loadBatchLogEntries()\n    }\n\n    // 仅清空高级条件，不影响其他筛选（供弹窗内一键清空使用）\n    const clearAllConditionsOnly = () => {\n      if (filtersRoot.value && Array.isArray(filtersRoot.value.conditions)) {\n        filtersRoot.value.conditions = []\n      } else {\n        filtersRoot.value = { logic: 'AND', conditions: [] }\n      }\n      currentPage.value = 1\n    }\n\n    // 禁用超出范围的日期\n    const startOfDay = (d) => new Date(d.getFullYear(), d.getMonth(), d.getDate())\n    const endOfDay = (d) => new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59, 999)\n    const disableOutOfRangeDates = (date) => {\n      if (!timeRangeLimit.value || !date) return false\n      const [min, max] = timeRangeLimit.value\n      return date < startOfDay(new Date(min)) || date > endOfDay(new Date(max))\n    }\n\n    // 打开面板时默认展示的页（左右两侧月份/日期依据最小、最大值）\n    const defaultPickerRange = computed(() => {\n      if (!timeRangeLimit.value) return null\n      return [timeRangeLimit.value[0], timeRangeLimit.value[1]]\n    })\n\n    // 导出CSV\n    const exportToCSV = () => {\n      const headers = ['日志文件', '时间戳', '故障码', '参数1', '参数2', '参数3', '参数4', '释义']\n      const csvContent = [\n        headers.join(','),\n        ...filteredEntries.value.map(entry => [\n          entry.log_name,\n          formatTimestamp(entry.timestamp),\n          entry.error_code,\n          entry.param1,\n          entry.param2,\n          entry.param3,\n          entry.param4,\n          `\"${entry.explanation.replace(/\"/g, '\"\"')}\"`\n        ].join(','))\n      ].join('\\n')\n\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      const isSingle = selectedLogs.value.length === 1\n      const singleName = isSingle ? `${selectedLogs.value[0].original_name}_analysis.csv` : null\n      link.download = isSingle ? singleName : `batch_logs_analysis_${new Date().toISOString().slice(0, 10)}.csv`\n      link.click()\n      URL.revokeObjectURL(link.href)\n      \n      ElMessage.success('CSV文件导出成功')\n    }\n\n    // 分页处理\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n    }\n\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n    }\n\n    // 表格分页/排序等交互后，强制触发一次重测量以保证 tooltip 判断正确\n    const forceRelayout = () => {\n      // 通过下一个 tick 触发组件中的 ResizeObserver/测量逻辑生效\n      // 这里不直接操作 DOM，由子组件在 mouseenter 与 observer 中测量\n    }\n\n    // 格式化时间戳\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    // 格式化文件大小\n    const formatFileSize = (bytes) => {\n      if (!bytes || bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    // 无\n\n    // 跳转到手术统计页面\n    const showSurgeryStatistics = async () => {\n      // 确保有已排序的日志条目数据\n      if (batchLogEntries.value.length === 0) {\n        ElMessage.warning('请先加载日志条目数据')\n        return\n      }\n      \n      // 传递选中的日志ID到手术统计页面\n      const logIds = selectedLogs.value.map(log => log.id)\n      \n      // 设置自动分析标志\n      sessionStorage.setItem('autoAnalyze', 'true')\n      \n      // 在新窗口中打开手术统计页面，通过URL参数传递日志ID\n      const routeData = router.resolve({\n        path: '/surgery-statistics',\n        query: { logIds: logIds.join(',') }\n      })\n      window.open(routeData.href, '_blank')\n    }\n\n    // 模板相关\n    const loadTemplates = async () => {\n      try {\n        const res = await api.logs.getSearchTemplates()\n        templates.value = res.data.templates || []\n      } catch {}\n    }\n\n    const applyTemplateByName = (name) => {\n      const tpl = templates.value.find(t => t.name === name)\n      if (!tpl) return\n      // 覆盖当前高级条件\n      filtersRoot.value = {\n        logic: tpl.filters?.logic || 'AND',\n        conditions: Array.isArray(tpl.filters?.conditions) ? [...tpl.filters.conditions] : []\n      }\n      // 不立即执行，用户可继续编辑\n    }\n\n    const beforeImportTemplates = async (file) => {\n      try {\n        const text = await file.text()\n        const json = JSON.parse(text)\n        // 不保存为常用模板，仅解析并填充到“添加条件”区域\n        let logic = 'AND'\n        let conditions = []\n        if (json && (Array.isArray(json.conditions) || Array.isArray(json.filters?.conditions))) {\n          logic = json.logic || json.filters?.logic || 'AND'\n          conditions = Array.isArray(json.conditions) ? json.conditions : (json.filters?.conditions || [])\n        } else if (Array.isArray(json.templates) && json.templates.length > 0) {\n          const first = json.templates[0]\n          logic = first?.filters?.logic || 'AND'\n          conditions = Array.isArray(first?.filters?.conditions) ? first.filters.conditions : []\n        }\n        if (conditions.length > 0) {\n          filtersRoot.value = { logic, conditions: [...conditions] }\n          ElMessage.success('已从文件填充到高级条件')\n        } else {\n          ElMessage.warning('未识别到可用的表达式内容')\n        }\n      } catch (e) {\n        ElMessage.error('解析失败：' + e.message)\n      }\n      return false\n    }\n\n    // AntD CheckableTag 单选模板处理\n    const onTemplateSingleSelect = (name, checked) => {\n      selectedTemplateName.value = checked ? name : ''\n    }\n\n    const numericFields = new Set(['param1', 'param2', 'param3', 'param4'])\n    const normalizeValue = (field, operator, value) => {\n      const op = String(operator || '').toLowerCase()\n      const isNumeric = numericFields.has(field)\n      if (op === 'between' || op === 'notbetween') {\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',')\n        const a = (arr[0] ?? '').toString().trim()\n        const b = (arr[1] ?? '').toString().trim()\n        if (isNumeric) {\n          return [Number(a), Number(b)]\n        }\n        return [a, b]\n      }\n      if (op === 'in' || op === 'notin') {\n        const arr = Array.isArray(value) ? value : [value]\n        const trimmed = arr.map(s => s.toString().trim()).filter(s => s !== '')\n        if (isNumeric) {\n          return trimmed.map(v => Number(v)).filter(v => !Number.isNaN(v))\n        }\n        return trimmed\n      }\n      if (isNumeric) {\n        const n = Number(value)\n        return Number.isNaN(n) ? value : n\n      }\n      return value\n    }\n\n    // 本地执行高级筛选\n    const getFieldValue = (entry, field) => {\n      if (field === 'timestamp') return new Date(entry.timestamp)\n      return entry[field]\n    }\n\n    const toNumber = (val) => {\n      const n = Number(val)\n      return Number.isNaN(n) ? null : n\n    }\n\n    const evalCondition = (field, operator, value, entry) => {\n      const op = String(operator || '').toLowerCase()\n      const raw = getFieldValue(entry, field)\n      if (raw === undefined || raw === null) return false\n\n      const isNumeric = numericFields.has(field)\n      const isTimestamp = field === 'timestamp'\n\n      if (op === 'between' || op === 'notbetween') {\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',')\n        if (arr.length < 2) return false\n        if (isNumeric) {\n          const a = toNumber(arr[0]); const b = toNumber(arr[1]);\n          if (a === null || b === null) return false\n          const n = toNumber(raw)\n          if (n === null) return false\n          const ok = n >= Math.min(a,b) && n <= Math.max(a,b)\n          return op === 'between' ? ok : !ok\n        }\n        if (isTimestamp) {\n          const a = new Date(arr[0]); const b = new Date(arr[1])\n          const t = new Date(raw)\n          const ok = t >= (a < b ? a : b) && t <= (a < b ? b : a)\n          return op === 'between' ? ok : !ok\n        }\n        const s = String(raw)\n        const ok = s >= String(arr[0]) && s <= String(arr[1])\n        return op === 'between' ? ok : !ok\n      }\n\n      if (op === 'in' || op === 'notin') {\n        const arr = Array.isArray(value) ? value : String(value ?? '').split(',').map(v => v.trim()).filter(Boolean)\n        if (isNumeric) {\n          const set = new Set(arr.map(toNumber).filter(v => v !== null))\n          const n = toNumber(raw)\n          const ok = n !== null && set.has(n)\n          return op === 'in' ? ok : !ok\n        }\n        const set = new Set(arr.map(v => v.toString()))\n        const ok = set.has(String(raw))\n        return op === 'in' ? ok : !ok\n      }\n\n      if (op === 'regex') {\n        try {\n          const re = new RegExp(String(value))\n          return re.test(String(raw))\n        } catch { return false }\n      }\n\n      if (op === 'contains' || op === 'like') {\n        return String(raw).toLowerCase().includes(String(value ?? '').toLowerCase())\n      }\n      if (op === 'notcontains') {\n        return !String(raw).toLowerCase().includes(String(value ?? '').toLowerCase())\n      }\n      if (op === 'startswith') {\n        return String(raw).startsWith(String(value ?? ''))\n      }\n      if (op === 'endswith') {\n        return String(raw).endsWith(String(value ?? ''))\n      }\n\n      if (isNumeric) {\n        const n = toNumber(raw); const v = toNumber(value)\n        if (n === null || v === null) return false\n        switch (op) {\n          case '=': return n === v\n          case '!=': case '<>': return n !== v\n          case '>': return n > v\n          case '>=': return n >= v\n          case '<': return n < v\n          case '<=': return n <= v\n          default: return false\n        }\n      }\n      if (isTimestamp) {\n        const t = new Date(raw).getTime(); const v = new Date(value).getTime()\n        switch (op) {\n          case '=': return t === v\n          case '!=': case '<>': return t !== v\n          case '>': return t > v\n          case '>=': return t >= v\n          case '<': return t < v\n          case '<=': return t <= v\n          default: return false\n        }\n      }\n      const s = String(raw); const v = String(value ?? '')\n      switch (op) {\n        case '=': return s === v\n        case '!=': case '<>': return s !== v\n        case '>': return s > v\n        case '>=': return s >= v\n        case '<': return s < v\n        case '<=': return s <= v\n        default: return false\n      }\n    }\n\n    const evaluateNode = (node, entry) => {\n      if (!node) return true\n      if (node.field && node.operator) {\n        return evalCondition(node.field, node.operator, node.value, entry)\n      }\n      if (Array.isArray(node.conditions)) {\n        const logic = node.logic || 'AND'\n        const results = node.conditions.map(child => evaluateNode(child, entry))\n        return logic === 'OR' ? results.some(Boolean) : results.every(Boolean)\n      }\n      return true\n    }\n\n    const evaluateAdvanced = (entry) => evaluateNode(filtersRoot.value, entry)\n\n    const exprPreviewRef = ref(null)\n\n    const applyExpressionJSON = async () => {\n      if (!importExpressionText.value) return\n      try {\n        const obj = JSON.parse(importExpressionText.value)\n        if (obj && (Array.isArray(obj.conditions) || Array.isArray(obj.filters?.conditions))) {\n          const logic = obj.logic || obj.filters?.logic || 'AND'\n          const conds = Array.isArray(obj.conditions) ? obj.conditions : obj.filters?.conditions\n          filtersRoot.value = { logic, conditions: Array.isArray(conds) ? [...conds] : [] }\n          // 仅填充，不立即执行；等待点击“应用”\n          ElMessage.success('表达式已填充，请点击“应用”执行搜索')\n          showAdvancedFilter.value = true\n          await nextTick()\n          if (exprPreviewRef.value && exprPreviewRef.value.scrollIntoView) {\n            exprPreviewRef.value.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n          }\n        } else {\n          ElMessage.error('JSON格式不正确，缺少 conditions')\n        }\n      } catch (e) {\n        ElMessage.error('解析失败：' + e.message)\n      }\n    }\n\n    const applyExpressionSmart = async () => {\n      if (!importExpressionText.value) return\n      // 1) 优先尝试 JSON\n      try {\n        const obj = JSON.parse(importExpressionText.value)\n        if (obj && (Array.isArray(obj.conditions) || Array.isArray(obj.filters?.conditions))) {\n          const logic = obj.logic || obj.filters?.logic || 'AND'\n          const conds = Array.isArray(obj.conditions) ? obj.conditions : obj.filters?.conditions\n          filtersRoot.value = { logic, conditions: Array.isArray(conds) ? [...conds] : [] }\n          ElMessage.success('表达式已填充，请点击“应用”执行搜索')\n          return\n        }\n      } catch (_) {}\n      // 2) 自然语言解析\n      try {\n        const { data } = await api.logs.nlpToFilters(importExpressionText.value)\n        if (data && data.filters && (Array.isArray(data.filters.conditions) || Array.isArray(data.filters?.filters?.conditions))) {\n          const logic = data.filters.logic || data.filters?.filters?.logic || 'AND'\n          const conds = Array.isArray(data.filters.conditions) ? data.filters.conditions : data.filters?.filters?.conditions\n          const nextConds = Array.isArray(conds) ? [...conds] : []\n          filtersRoot.value = {\n            logic,\n            conditions: nextConds.length > 0 ? nextConds : [{ field: 'explanation', operator: 'contains', value: String(importExpressionText.value || '').trim() }]\n          }\n          ElMessage.success('已从自然语言解析为高级条件，请点击“应用”执行搜索')\n          showAdvancedFilter.value = true\n          await nextTick()\n          if (exprPreviewRef.value && exprPreviewRef.value.scrollIntoView) {\n            exprPreviewRef.value.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n          }\n        } else {\n          ElMessage.warning('未能识别可用条件')\n        }\n      } catch (e) {\n        ElMessage.error('自然语言解析失败：' + (e?.response?.data?.message || e.message))\n      }\n    }\n\n    const applyNaturalLanguage = async () => {\n      if (!naturalLanguageText.value) return\n      try {\n        const { data } = await api.logs.nlpToFilters(naturalLanguageText.value)\n        if (data && data.filters && (Array.isArray(data.filters.conditions) || Array.isArray(data.filters?.filters?.conditions))) {\n          const logic = data.filters.logic || data.filters?.filters?.logic || 'AND'\n          const conds = Array.isArray(data.filters.conditions) ? data.filters.conditions : data.filters?.filters?.conditions\n          const nextConds = Array.isArray(conds) ? [...conds] : []\n          filtersRoot.value = {\n            logic,\n            conditions: nextConds.length > 0 ? nextConds : [{ field: 'explanation', operator: 'contains', value: String(naturalLanguageText.value || '').trim() }]\n          }\n          ElMessage.success('已从自然语言解析为高级条件，请点击“应用”执行搜索')\n          showAdvancedFilter.value = true\n          await nextTick()\n          if (exprPreviewRef.value && exprPreviewRef.value.scrollIntoView) {\n            exprPreviewRef.value.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n          }\n        } else {\n          ElMessage.warning('未能识别可用条件')\n        }\n      } catch (e) {\n        ElMessage.error('自然语言解析失败：' + (e?.response?.data?.message || e.message))\n      }\n    }\n\n    // 分析手术数据（批量分析）\n    const analyzeSurgeryData = async () => {\n      analyzing.value = true\n      try {\n        // 使用统一的接口，一次性分析所有选中的日志\n        const logIds = selectedLogs.value.map(log => log.id)\n        const response = await api.surgeryStatistics.analyzeByLogIds(logIds)\n        \n        if (response.data.success) {\n          ElMessage.success(response.data.message || `成功分析出 ${response.data.data?.length || 0} 场手术`)\n        } else {\n          ElMessage.error(response.data.message || '批量分析手术数据失败')\n        }\n      } catch (error) {\n        ElMessage.error('批量分析手术数据失败: ' + (error.response?.data?.message || error.message))\n      } finally {\n        analyzing.value = false\n      }\n    }\n\n    // 构建filters payload\n    const buildFiltersPayload = () => {\n      const normalizeNode = (node) => {\n        if (!node) return null\n        if (node.field && node.operator) {\n          if (node.value === undefined || node.value === null || node.value === '') return null\n          return {\n            field: node.field,\n            operator: node.operator,\n            value: normalizeValue(node.field, node.operator, node.value)\n          }\n        }\n        if (Array.isArray(node.conditions)) {\n          const children = node.conditions.map(normalizeNode).filter(Boolean)\n          if (children.length === 0) return null\n          return { logic: node.logic || 'AND', conditions: children }\n        }\n        return null\n      }\n      const normalized = normalizeNode(filtersRoot.value)\n      return normalized\n    }\n\n    // 不同字段对应的可选操作符\n    const operatorOptionsByField = {\n      timestamp: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' }\n      ],\n      error_code: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' },\n        { label: '正则', value: 'regex' },\n        { label: '前缀', value: 'startsWith' },\n        { label: '后缀', value: 'endsWith' }\n      ],\n      param1: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      param2: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      param3: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      param4: [\n        { label: '=', value: '=' },\n        { label: '!=', value: '!=' },\n        { label: '>', value: '>' },\n        { label: '>=', value: '>=' },\n        { label: '<', value: '<' },\n        { label: '<=', value: '<=' },\n        { label: 'Between', value: 'between' },\n        { label: 'In', value: 'in' },\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' }\n      ],\n      explanation: [\n        { label: '包含(Like)', value: 'contains' },\n        { label: '不包含', value: 'notcontains' },\n        { label: '正则', value: 'regex' },\n        { label: '前缀', value: 'startsWith' },\n        { label: '后缀', value: 'endsWith' }\n      ]\n    }\n\n    const defaultOperatorOptions = [\n      { label: '=', value: '=' },\n      { label: '!=', value: '!=' }\n    ]\n\n    const getOperatorOptions = (field) => {\n      if (!field) return defaultOperatorOptions\n      return operatorOptionsByField[field] || defaultOperatorOptions\n    }\n\n    const onFieldChange = (cond) => {\n      if (!cond) return\n      const options = getOperatorOptions(cond.field)\n      // 若当前操作符不在可选集合内，重置为第一个\n      if (!options.some(o => o.value === cond.operator)) {\n        cond.operator = options[0]?.value\n      }\n      // 值类型重置\n      if (String(cond.operator).toLowerCase() === 'between') {\n        cond.value = Array.isArray(cond.value) ? cond.value.slice(0, 2) : ['', '']\n      } else {\n        cond.value = Array.isArray(cond.value) ? cond.value.join(',') : (cond.value ?? '')\n      }\n    }\n\n    const addConditionToGroup = (group) => {\n      if (!group.conditions) group.conditions = []\n      group.conditions.push({ field: 'error_code', operator: 'contains', value: '' })\n    }\n    const addGroupToGroup = (group) => {\n      if (!group.conditions) group.conditions = []\n      group.conditions.push({ logic: 'AND', conditions: [] })\n    }\n    const removeNodeAt = (group, idx) => {\n      if (Array.isArray(group.conditions) && idx >= 0 && idx < group.conditions.length) {\n        group.conditions.splice(idx, 1)\n      }\n    }\n    const applyAdvancedFilters = async () => {\n      // 直接根据当前条件构建 payload 并执行\n      showAdvancedFilter.value = false\n      advancedMode.value = true\n      currentPage.value = 1\n      await loadBatchLogEntries()\n    }\n\n    const applySelectedTemplate = () => {\n      if (!selectedTemplateName.value) return\n      const tpl = templates.value.find(t => t.name === selectedTemplateName.value)\n      if (!tpl) return\n      filtersRoot.value = {\n        logic: tpl.filters?.logic || 'AND',\n        conditions: Array.isArray(tpl.filters?.conditions) ? [...tpl.filters.conditions] : []\n      }\n      // 不立即执行搜索，用户可继续增删条件\n    }\n\n    const onOperatorChange = (cond) => {\n      if (!cond) return\n      const op = String(cond.operator || '').toLowerCase()\n      if (op === 'between') {\n        if (!Array.isArray(cond.value)) {\n          cond.value = ['', '']\n        } else if (cond.value.length < 2) {\n          cond.value = [cond.value[0] || '', cond.value[1] || '']\n        }\n      } else {\n        if (Array.isArray(cond.value)) {\n          cond.value = cond.value.join(',')\n        }\n      }\n    }\n\n    onMounted(async () => {\n      await loadSelectedLogs()\n      await loadBatchLogEntries()\n      await loadTemplates()\n      // 默认选择全部时间范围（最早至最晚）\n      if (timeRangeLimit.value) {\n        timeRange.value = [\n          formatTimestamp(timeRangeLimit.value[0]),\n          formatTimestamp(timeRangeLimit.value[1])\n        ]\n      }\n    })\n\n    return {\n      loading,\n      selectedLogs,\n      batchLogEntries,\n      searchKeyword,\n      timeRange,\n      currentPage,\n      pageSize,\n      advancedMode,\n        useLocalAdvanced,\n      showAdvancedFilter,\n      filtersRoot,\n      filteredEntries,\n      paginatedEntries,\n      searchExpression,\n      advancedExpression,\n      // counts for template conditions\n      batchCount,\n      selectedLogsCount,\n      filteredCount,\n      leafConditionCount,\n      loadSelectedLogs,\n      loadBatchLogEntries,\n      handleSearch,\n      handleQuery,\n      handleTimeRangeChange,\n      clearFilters,\n      exportToCSV,\n      handleSizeChange,\n      handleCurrentChange,\n      forceRelayout,\n      formatTimestamp,\n      formatFileSize,\n      showSurgeryStatistics,\n      analyzeSurgeryData,\n      surgeryStatisticsVisible,\n      surgeryData,\n      analyzing,\n      timeRangeLimit,\n      defaultPickerRange,\n      disableOutOfRangeDates,\n      templates,\n      applyTemplateByName,\n      beforeImportTemplates,\n      selectedTemplateName,\n      onTemplateSingleSelect,\n      applySelectedTemplate,\n      importExpressionText,\n      naturalLanguageText,\n      applyExpressionJSON,\n      applyExpressionSmart,\n      applyNaturalLanguage,\n      addConditionToGroup,\n      addGroupToGroup,\n      removeNodeAt,\n      exprPreviewRef,\n      applyAdvancedFilters,\n      clearAllConditionsOnly,\n      // expose helpers for operator dropdowns\n      getOperatorOptions,\n      onFieldChange,\n      onOperatorChange\n    }\n  }\n}\n</script>\n\n<style scoped>\n.batch-analysis-container {\n  padding: 0;\n  height: 100vh;\n  overflow: auto;\n  background-color: #f5f7fa;\n  box-sizing: border-box;\n}\n\n.analysis-card {\n  /* 使用外层 wrapper 控制留白，卡片高度自适应 */\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: 16px;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n  overflow: visible;\n}\n\n.analysis-card-wrapper {\n  padding: 16px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: none;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.title {\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.log-info {\n  margin: 10px 20px;\n}\n\n.log-info .el-descriptions {\n  font-size: 12px;\n}\n\n.log-info .el-descriptions__label {\n  font-size: 11px;\n  font-weight: 600;\n}\n\n.log-info .el-descriptions__label,\n.log-info .el-descriptions__content {\n  white-space: normal;\n  word-break: break-word;\n}\n\n/* 自定义列宽样式 */\n.log-info .el-descriptions__body {\n  width: 100%;\n}\n\n.log-info .el-descriptions__table {\n  width: 100%;\n  table-layout: fixed;\n}\n\n.log-info .el-descriptions__cell {\n  padding: 8px 12px;\n  vertical-align: top;\n}\n\n/* 文件名列 - 较宽 */\n.log-info .el-descriptions__cell:nth-child(1) {\n  width: 50%;\n}\n\n/* 设备编号列 - 较窄 */\n.log-info .el-descriptions__cell:nth-child(2) {\n  width: 15%;\n}\n\n/* 文件大小列 - 较窄 */\n.log-info .el-descriptions__cell:nth-child(3) {\n  width: 20%;\n}\n\n/* 上传用户ID列 - 较宽 */\n.log-info .el-descriptions__cell:nth-child(4) {\n  width: 15%;\n}\n\n.logs-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n}\n\n.search-section {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 0 20px 10px 20px;\n  padding: 10px 12px;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n}\n\n.search-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 12px;\n  align-items: start;\n}\n\n.grid-item {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.item-title {\n  font-size: 12px;\n  color: #909399;\n}\n\n.search-input {\n  width: 100%;\n}\n\n.keyword-field-select {\n  width: 110px;\n}\n\n.time-range {\n  width: 100%;\n}\n\n.advanced-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.advanced-summary {\n  font-size: 12px;\n  color: #606266;\n}\n\n.search-expression {\n  margin-top: 6px;\n  font-size: 12px;\n  color: #606266;\n  padding: 6px 8px;\n  background: #f9fafb;\n  border: 1px dashed #e4e7ed;\n  border-radius: 6px;\n}\n\n.search-expression .label {\n  color: #909399;\n  margin-right: 6px;\n}\n\n/* 高级筛选弹窗结构化分区 */\n.advanced-filter .section {\n  margin-bottom: 16px;\n  background: #fff;\n}\n.advanced-filter .section-title {\n  font-size: 13px;\n  font-weight: 600;\n  margin-bottom: 8px;\n  color: #606266;\n}\n.section-title-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n.logic-row {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n.advanced-filter .conditions .condition + .condition {\n  margin-top: 2px;\n}\n\n/* 高级搜索组逻辑：根据层级缩进显示 */\n.advanced-filter .group-box {\n  border-left: 2px dashed #e4e7ed;\n  margin-left: 10px;\n  padding-left: 10px;\n}\n.advanced-filter .group-header.nested {\n  margin-left: 8px;\n}\n.advanced-filter .group-root {\n  margin-top: 10px;\n}\n.template-tags, .tags-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n}\n.tags-ops {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n.tags-ops .hint {\n  font-size: 12px;\n  color: #909399;\n}\n.ops-right {\n  display: flex;\n  gap: 8px;\n}\n.expr-preview {\n  margin: 6px 0 10px 0;\n  font-size: 12px;\n  color: #606266;\n  padding: 6px 8px;\n  background: #f9fafb;\n  border: 1px dashed #e4e7ed;\n  border-radius: 6px;\n}\n.expr-preview .label {\n  color: #909399;\n  margin-right: 6px;\n}\n.antd-tags .tpl-tag {\n  margin: 4px 6px 0 0;\n}\n.antd-tags .tpl-tag.bordered {\n  border: 1px dashed #d9d9d9;\n  padding: 0 10px;\n}\n.antd-tags.single-select .tpl-tag.ant-tag-checkable-checked {\n  border-color: #1677ff;\n  color: #1677ff;\n  background: #e6f4ff;\n}\n.import-text {\n  margin-top: 8px;\n}\n.import-actions {\n  margin-top: 8px;\n  display: flex;\n  gap: 8px;\n}\n\n.entries-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 10px 20px;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n}\n\n.table-container {\n  flex: 1;\n  overflow: hidden;\n  padding: 0 20px 20px 20px;\n}\n\n/* 让释义列的 tooltip 在表格外也能显示 */\n.explanation-tooltip {\n  max-width: 60vw;\n  white-space: normal;\n  word-break: break-word;\n  z-index: 3000;\n}\n\n.el-popper.explanation-tooltip {\n  overflow: visible;\n}\n\n.explanation-ellipsis {\n  display: inline-block;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 黑色背景的暗色气泡 */\n.explanation-tooltip.dark {\n  background: rgba(0,0,0,0.85);\n  color: #fff;\n  border: none;\n}\n.explanation-tooltip.dark .el-tooltip__popper {\n  background: rgba(0,0,0,0.85);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 12px 20px 0 20px;\n}\n\n.section-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 14px;\n}\n\n.loading-section {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n  background-color: #fafafa;\n  border-radius: 8px;\n  margin: 20px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin: 10px 20px;\n  padding: 8px 0;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebeef5;\n}\n</style>\n\n<style>\n/* tooltip 悬浮效果（仅阴影与圆角，无缩放生长动效） */\n.selected-files-popper {\n  box-shadow: var(--el-box-shadow-light, 0 8px 24px rgba(0, 0, 0, 0.12));\n  border: 1px solid #ebeef5;\n  border-radius: 6px;\n  padding: 6px 8px;\n}\n\n.selected-files-tooltip {\n  max-width: 480px;\n  max-height: 240px;\n  overflow: auto;\n  display: flex;\n  flex-wrap: wrap;\n}\n</style>","import { render } from \"./BatchAnalysis.vue?vue&type=template&id=8e70de52&scoped=true\"\nimport script from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./BatchAnalysis.vue?vue&type=style&index=0&id=8e70de52&scoped=true&lang=css\"\nimport \"./BatchAnalysis.vue?vue&type=style&index=1&id=8e70de52&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8e70de52\"]])\n\nexport default __exports__"],"names":["class","style","borderBottom","marginTop","ref","batchCount","selectedLogsCount","type","size","selectedLogs","device_id","placement","effect","transition","disabled","content","log","key","id","original_name","loading","exportToCSV","showSurgeryStatistics","timeRange","format","defaultPickerRange","disableOutOfRangeDates","handleTimeRangeChange","searchKeyword","placeholder","clearable","handleSearch","prefix","plain","showAdvancedFilter","leafConditionCount","filtersRoot","logic","clearFilters","searchExpression","filteredCount","description","data","paginatedEntries","height","stripe","forceRelayout","prop","label","width","default","row","text","log_name","sortable","formatTimestamp","timestamp","explanation","currentPage","pageSize","total","filteredEntries","length","layout","handleSizeChange","handleCurrentChange","title","footer","applyAdvancedFilters","useLocalAdvanced","clearAllConditionsOnly","conditions","advancedExpression","templates","applySelectedTemplate","selectedTemplateName","tpl","name","checked","onTemplateSingleSelect","addConditionToGroup","addGroupToGroup","group","getOperatorOptions","onFieldChange","onOperatorChange","removeNodeAt","accept","beforeImportTemplates","naturalLanguageText","rows","applyNaturalLanguage","components","Search","Download","ArrowLeft","DataAnalysis","Warning","ExplanationCell","props","String","setup","containerRef","needsTooltip","resizeObserver","measure","el","value","scrollWidth","clientWidth","handleMouseEnter","async","window","ResizeObserver","observe","addEventListener","unobserve","disconnect","removeEventListener","h","popperClass","teleported","showAfter","onMouseenter","ConditionGroup","Object","required","Function","isRoot","Boolean","ElSelect","ElOption","ElInput","ElButton","ElRadioGroup","ElRadioButton","Self","renderCondition","node","idx","parent","modelValue","field","v","operator","map","op","Array","isArray","arr","slice","join","onClick","renderGroup","depth","children","store","route","router","batchLogEntries","advancedMode","surgeryStatisticsVisible","surgeryData","analyzing","importExpressionText","groupToString","val","inner","child","filter","segments","start","end","push","adv","countLeafConditions","reduce","acc","n","list","entries","kw","toLowerCase","entry","includes","error_code","startTime","endTime","Date","entryTime","e","evaluateAdvanced","timeRangeLimit","times","d","isNaN","min","Math","max","loadSelectedLogs","fromParamsLogIds","params","logIds","fromQueryLogIds","query","singleIdParam","singleIdQuery","idsStr","ids","split","parseInt","Number","response","dispatch","page","limit","allLogs","logs","error","loadBatchLogEntries","allEntries","entriesWithLogName","warning","sort","a","b","success","l","filtersPayload","buildFiltersPayload","baseParams","log_ids","filters","JSON","stringify","start_time","end_time","search","idToName","Map","all","get","log_id","handleQuery","s","changed","startOfDay","getFullYear","getMonth","getDate","endOfDay","date","headers","csvContent","param1","param2","param3","param4","replace","blob","Blob","link","document","createElement","href","URL","createObjectURL","isSingle","singleName","download","toISOString","click","revokeObjectURL","year","month","padStart","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatFileSize","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","sessionStorage","setItem","routeData","resolve","path","open","loadTemplates","res","api","getSearchTemplates","applyTemplateByName","find","t","file","json","parse","first","message","numericFields","Set","normalizeValue","isNumeric","has","toString","trim","trimmed","getFieldValue","toNumber","evalCondition","raw","undefined","isTimestamp","ok","set","re","RegExp","test","startsWith","endsWith","getTime","evaluateNode","results","some","every","exprPreviewRef","applyExpressionJSON","obj","conds","scrollIntoView","behavior","block","applyExpressionSmart","_","nlpToFilters","nextConds","analyzeSurgeryData","surgeryStatistics","analyzeByLogIds","normalizeNode","normalized","operatorOptionsByField","defaultOperatorOptions","cond","options","o","splice","__exports__","render"],"sourceRoot":""}