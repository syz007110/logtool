{"version":3,"file":"js/780.4bc4038a.js","mappings":"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","sources":["webpack://logtool-frontend/./src/views/BatchAnalysis.vue","webpack://logtool-frontend/./src/views/BatchAnalysis.vue?7d02"],"sourcesContent":["<template>\n  <div class=\"batch-analysis-container\">\n    <!-- 主要内容 -->\n    <el-card class=\"analysis-card\">\n      <div class=\"card-header\">\n        <div class=\"header-left\">\n          <span class=\"title\">批量日志分析</span>\n          <el-tag type=\"info\" size=\"small\">\n            已选择 {{ selectedLogs.length }} 个日志文件\n          </el-tag>\n          <el-tag v-if=\"batchLogEntries.length > 0\" type=\"success\" size=\"small\">\n            共 {{ batchLogEntries.length }} 条记录\n          </el-tag>\n        </div>\n        <div class=\"header-right\">\n          <el-button \n            v-if=\"!loading && batchLogEntries.length > 0\" \n            @click=\"exportToCSV\" \n            type=\"success\" \n            size=\"small\"\n          >\n            <el-icon><Download /></el-icon>\n            导出CSV\n          </el-button>\n          <el-button \n            v-if=\"!loading && selectedLogs.length > 0 && batchLogEntries.length > 0\" \n            @click=\"showSurgeryStatistics\" \n            type=\"primary\" \n            size=\"small\" \n            style=\"margin-left: 10px;\"\n          >\n            <el-icon><DataAnalysis /></el-icon>\n            手术分析\n          </el-button>\n        </div>\n      </div>\n\n      <!-- 日志基本信息 -->\n      <div class=\"log-info\" v-if=\"selectedLogs.length > 0\">\n        <el-descriptions :column=\"4\" border size=\"small\">\n          <el-descriptions-item label=\"文件名\" :span=\"4\">\n            <div class=\"logs-list\">\n              <el-tag v-for=\"log in selectedLogs\" :key=\"log.id\" size=\"small\" style=\"margin-right: 4px;\">\n                {{ log.original_name }}\n              </el-tag>\n            </div>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"设备编号\" :span=\"1\">\n            <el-tag size=\"small\">\n              {{ selectedLogs[0]?.device_id || '未知' }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"文件大小\" :span=\"1\">\n            <div class=\"logs-list\">\n              <el-tag v-for=\"log in selectedLogs\" :key=\"log.id\" size=\"small\" style=\"margin-right: 4px;\">\n                {{ formatFileSize(log.size) }}\n              </el-tag>\n            </div>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"上传用户ID\" :span=\"1\">\n            <div class=\"logs-list\">\n              <el-tag v-for=\"log in selectedLogs\" :key=\"log.id\" size=\"small\" style=\"margin-right: 4px;\">\n                {{ log.uploader_id || '未知' }}\n              </el-tag>\n            </div>\n          </el-descriptions-item>\n        </el-descriptions>\n      </div>\n\n      <!-- 搜索和筛选 -->\n      <div class=\"search-section\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索释义内容或故障码\"\n          style=\"width: 250px; margin-right: 15px;\"\n          clearable\n          @input=\"handleSearch\"\n        >\n          <template #prefix>\n            <el-icon><Search /></el-icon>\n          </template>\n        </el-input>\n        \n        <el-date-picker\n          v-model=\"timeRange\"\n          type=\"datetimerange\"\n          range-separator=\"至\"\n          start-placeholder=\"开始时间\"\n          end-placeholder=\"结束时间\"\n          format=\"YYYY-MM-DD HH:mm:ss\"\n          value-format=\"YYYY-MM-DD HH:mm:ss\"\n          style=\"width: 300px; margin-right: 15px;\"\n          @change=\"handleTimeRangeChange\"\n        />\n        <el-tag v-if=\"timeRangeLimit\" type=\"info\" size=\"small\" style=\"margin-left: 10px;\">\n          可选范围: {{ formatTimestamp(timeRangeLimit[0]) }} 至 {{ formatTimestamp(timeRangeLimit[1]) }}\n        </el-tag>\n        \n        <el-button \n          v-if=\"timeRangeLimit\" \n          @click=\"setFullTimeRange\" \n          type=\"primary\" \n          size=\"small\"\n          style=\"margin-left: 10px;\"\n        >\n          选择全部时间\n        </el-button>\n        \n        <el-button @click=\"clearFilters\" type=\"info\" size=\"small\">\n          清除筛选\n        </el-button>\n      </div>\n\n      <!-- 日志条目表格 -->\n      <div class=\"entries-section\">\n        <div class=\"section-header\">\n          <h3>日志条目 ({{ filteredEntries.length }})</h3>\n        </div>\n\n        <!-- 加载状态 -->\n        <div v-if=\"loading\" class=\"loading-section\">\n          <el-empty description=\"正在加载日志数据...\" />\n        </div>\n\n        <!-- 数据表格 -->\n        <div v-else class=\"table-container\">\n          <el-table \n            :data=\"paginatedEntries\" \n            style=\"width: 100%\"\n            v-loading=\"loading\"\n            height=\"calc(100vh - 350px)\"\n            stripe\n          >\n            <el-table-column prop=\"log_name\" label=\"日志文件\" width=\"150\" />\n            <el-table-column prop=\"timestamp\" label=\"时间戳\" width=\"180\" sortable>\n              <template #default=\"{ row }\">\n                {{ formatTimestamp(row.timestamp) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"error_code\" label=\"故障码\" width=\"120\" sortable />\n            <el-table-column prop=\"param1\" label=\"参数1\" width=\"100\" />\n            <el-table-column prop=\"param2\" label=\"参数2\" width=\"100\" />\n            <el-table-column prop=\"param3\" label=\"参数3\" width=\"100\" />\n            <el-table-column prop=\"param4\" label=\"参数4\" width=\"100\" />\n            <el-table-column prop=\"explanation\" label=\"释义\" min-width=\"300\" show-overflow-tooltip />\n          </el-table>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-wrapper\" v-if=\"filteredEntries.length > 0\">\n          <el-pagination\n            :current-page=\"currentPage\"\n            :page-size=\"pageSize\"\n            :page-sizes=\"[50, 100, 200, 500]\"\n            :total=\"filteredEntries.length\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { Search, Download, ArrowLeft, DataAnalysis, Warning } from '@element-plus/icons-vue'\nimport api from '@/api'\n\nexport default {\n  name: 'BatchAnalysis',\n  components: {\n    Search,\n    Download,\n    ArrowLeft,\n    DataAnalysis,\n    Warning\n  },\n  setup() {\n    const store = useStore()\n    const route = useRoute()\n    const router = useRouter()\n    \n    const loading = ref(false)\n    const selectedLogs = ref([])\n    const batchLogEntries = ref([])\n    const searchKeyword = ref('')\n    const timeRange = ref(null)\n    const currentPage = ref(1)\n    const pageSize = ref(100)\n    \n    // 手术统计相关\n    const surgeryStatisticsVisible = ref(false)\n    const surgeryData = ref(null)\n    const analyzing = ref(false)\n\n    // 获取时间范围限制\n    const timeRangeLimit = computed(() => {\n      if (batchLogEntries.value.length === 0) return null\n      \n      const timestamps = batchLogEntries.value.map(entry => new Date(entry.timestamp))\n      const minTime = new Date(Math.min(...timestamps))\n      const maxTime = new Date(Math.max(...timestamps))\n      \n      return [minTime, maxTime]\n    })\n\n    // 过滤后的条目\n    const filteredEntries = computed(() => {\n      let entries = batchLogEntries.value\n      \n      // 搜索过滤\n      if (searchKeyword.value) {\n        entries = entries.filter(entry => \n          entry.explanation.toLowerCase().includes(searchKeyword.value.toLowerCase()) ||\n          entry.error_code.toLowerCase().includes(searchKeyword.value.toLowerCase())\n        )\n      }\n      \n      // 时间范围过滤\n      if (timeRange.value && timeRange.value.length === 2) {\n        const [startTime, endTime] = timeRange.value\n        entries = entries.filter(entry => {\n          const entryTime = new Date(entry.timestamp)\n          const start = new Date(startTime)\n          const end = new Date(endTime)\n          return entryTime >= start && entryTime <= end\n        })\n      }\n      \n      return entries\n    })\n\n    // 分页后的条目\n    const paginatedEntries = computed(() => {\n      const start = (currentPage.value - 1) * pageSize.value\n      const end = start + pageSize.value\n      return filteredEntries.value.slice(start, end)\n    })\n\n    // 从路由参数获取选中的日志\n    const loadSelectedLogs = async () => {\n      const logIds = route.params.logIds\n      if (logIds) {\n        const ids = logIds.split(',').map(id => parseInt(id))\n        try {\n          // 从API获取所有日志信息\n          const response = await store.dispatch('logs/fetchLogs', { page: 1, limit: 1000 })\n          const allLogs = response.data.logs\n          selectedLogs.value = allLogs.filter(log => ids.includes(log.id))\n        } catch (error) {\n          ElMessage.error('获取日志信息失败')\n        }\n      }\n    }\n\n    // 加载批量日志条目\n    const loadBatchLogEntries = async () => {\n      // 如果没有选中的日志，直接返回\n      if (selectedLogs.value.length === 0) {\n        return\n      }\n      \n      try {\n        loading.value = true\n        batchLogEntries.value = []\n        \n        // 获取所有选中日志的条目\n        const allEntries = []\n        for (const log of selectedLogs.value) {\n          try {\n            const response = await store.dispatch('logs/fetchLogEntries', log.id)\n            const entries = response.data?.entries || response.entries || []\n            \n            // 为每个条目添加日志文件名信息\n            const entriesWithLogName = entries.map(entry => ({\n              ...entry,\n              log_name: log.original_name,\n            }))\n            \n            allEntries.push(...entriesWithLogName)\n          } catch (error) {\n            ElMessage.warning(`获取日志 ${log.original_name} 条目失败`)\n          }\n        }\n        \n        // 按时间戳排序\n        batchLogEntries.value = allEntries.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))\n        \n        // 不再保存到sessionStorage，改为在手术分析页面重新加载\n        // 这样可以避免大数据量的存储问题\n        \n        ElMessage.success(`批量分析完成，共 ${batchLogEntries.value.length} 条记录`)\n      } catch (error) {\n        ElMessage.error('批量分析失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 搜索处理\n    const handleSearch = () => {\n      currentPage.value = 1\n    }\n\n    // 时间范围变化处理\n    const handleTimeRangeChange = () => {\n      currentPage.value = 1\n    }\n\n    // 清除筛选\n    const clearFilters = () => {\n      searchKeyword.value = ''\n      timeRange.value = null\n      currentPage.value = 1\n    }\n\n    // 导出CSV\n    const exportToCSV = () => {\n      const headers = ['日志文件', '时间戳', '故障码', '参数1', '参数2', '参数3', '参数4', '释义']\n      const csvContent = [\n        headers.join(','),\n        ...filteredEntries.value.map(entry => [\n          entry.log_name,\n          formatTimestamp(entry.timestamp),\n          entry.error_code,\n          entry.param1,\n          entry.param2,\n          entry.param3,\n          entry.param4,\n          `\"${entry.explanation.replace(/\"/g, '\"\"')}\"`\n        ].join(','))\n      ].join('\\n')\n\n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      link.download = `batch_logs_analysis_${new Date().toISOString().slice(0, 10)}.csv`\n      link.click()\n      URL.revokeObjectURL(link.href)\n      \n      ElMessage.success('批量CSV文件导出成功')\n    }\n\n    // 分页处理\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n    }\n\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n    }\n\n    // 格式化时间戳\n    const formatTimestamp = (timestamp) => {\n      if (!timestamp) return '-'\n      const date = new Date(timestamp)\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n    }\n\n    // 格式化文件大小\n    const formatFileSize = (bytes) => {\n      if (!bytes || bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    // 设置时间范围为全部\n    const setFullTimeRange = () => {\n      if (timeRangeLimit.value) {\n        timeRange.value = [timeRangeLimit.value[0], timeRangeLimit.value[1]]\n      }\n    }\n\n    // 跳转到手术统计页面\n    const showSurgeryStatistics = async () => {\n      // 确保有已排序的日志条目数据\n      if (batchLogEntries.value.length === 0) {\n        ElMessage.warning('请先加载日志条目数据')\n        return\n      }\n      \n      // 传递选中的日志ID到手术统计页面\n      const logIds = selectedLogs.value.map(log => log.id)\n      \n      // 设置自动分析标志\n      sessionStorage.setItem('autoAnalyze', 'true')\n      \n      // 在新窗口中打开手术统计页面，通过URL参数传递日志ID\n      const routeData = router.resolve({\n        path: '/surgery-statistics',\n        query: { logIds: logIds.join(',') }\n      })\n      window.open(routeData.href, '_blank')\n    }\n\n    // 分析手术数据（批量分析）\n    const analyzeSurgeryData = async () => {\n      analyzing.value = true\n      try {\n        // 使用统一的接口，一次性分析所有选中的日志\n        const logIds = selectedLogs.value.map(log => log.id)\n        const response = await api.surgeryStatistics.analyzeByLogIds(logIds)\n        \n        if (response.data.success) {\n          ElMessage.success(response.data.message || `成功分析出 ${response.data.data?.length || 0} 场手术`)\n        } else {\n          ElMessage.error(response.data.message || '批量分析手术数据失败')\n        }\n      } catch (error) {\n        ElMessage.error('批量分析手术数据失败: ' + (error.response?.data?.message || error.message))\n      } finally {\n        analyzing.value = false\n      }\n    }\n\n    onMounted(async () => {\n      await loadSelectedLogs()\n      await loadBatchLogEntries()\n    })\n\n    return {\n      loading,\n      selectedLogs,\n      batchLogEntries,\n      searchKeyword,\n      timeRange,\n      currentPage,\n      pageSize,\n      filteredEntries,\n      paginatedEntries,\n      timeRangeLimit,\n      loadSelectedLogs,\n      loadBatchLogEntries,\n      handleSearch,\n      handleTimeRangeChange,\n      clearFilters,\n      exportToCSV,\n      handleSizeChange,\n      handleCurrentChange,\n      formatTimestamp,\n      formatFileSize,\n      setFullTimeRange,\n      showSurgeryStatistics,\n      analyzeSurgeryData,\n      surgeryStatisticsVisible,\n      surgeryData,\n      analyzing\n    }\n  }\n}\n</script>\n\n<style scoped>\n.batch-analysis-container {\n  padding: 0;\n  height: 100vh;\n  overflow: hidden;\n  background-color: #f5f7fa;\n}\n\n.analysis-card {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  border-radius: 0;\n  border: none;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: white;\n  border-bottom: 1px solid #e6e6e6;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.title {\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.log-info {\n  margin: 10px 20px;\n}\n\n.log-info .el-descriptions {\n  font-size: 12px;\n}\n\n.log-info .el-descriptions__label {\n  font-size: 11px;\n  font-weight: 600;\n}\n\n.log-info .el-descriptions__label,\n.log-info .el-descriptions__content {\n  white-space: normal;\n  word-break: break-word;\n}\n\n/* 自定义列宽样式 */\n.log-info .el-descriptions__body {\n  width: 100%;\n}\n\n.log-info .el-descriptions__table {\n  width: 100%;\n  table-layout: fixed;\n}\n\n.log-info .el-descriptions__cell {\n  padding: 8px 12px;\n  vertical-align: top;\n}\n\n/* 文件名列 - 较宽 */\n.log-info .el-descriptions__cell:nth-child(1) {\n  width: 50%;\n}\n\n/* 设备编号列 - 较窄 */\n.log-info .el-descriptions__cell:nth-child(2) {\n  width: 15%;\n}\n\n/* 文件大小列 - 较窄 */\n.log-info .el-descriptions__cell:nth-child(3) {\n  width: 20%;\n}\n\n/* 上传用户ID列 - 较宽 */\n.log-info .el-descriptions__cell:nth-child(4) {\n  width: 15%;\n}\n\n.logs-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n}\n\n.search-section {\n  display: flex;\n  align-items: center;\n  margin: 0 20px 10px 20px;\n  padding: 10px 12px;\n  background-color: white;\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.entries-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 10px 20px;\n  background-color: white;\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.table-container {\n  flex: 1;\n  overflow: hidden;\n  padding: 0 20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 15px 20px 0 20px;\n}\n\n.section-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 14px;\n}\n\n.loading-section {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n  background-color: #fafafa;\n  border-radius: 6px;\n  margin: 20px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin: 10px 20px;\n  padding: 8px 0;\n  background-color: white;\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n</style> ","import { render } from \"./BatchAnalysis.vue?vue&type=template&id=6c2e2c2d&scoped=true\"\nimport script from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./BatchAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./BatchAnalysis.vue?vue&type=style&index=0&id=6c2e2c2d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6c2e2c2d\"]])\n\nexport default __exports__"],"names":["class","type","size","selectedLogs","length","batchLogEntries","loading","exportToCSV","showSurgeryStatistics","style","column","border","label","span","log","key","id","original_name","device_id","formatFileSize","uploader_id","searchKeyword","placeholder","clearable","handleSearch","prefix","timeRange","format","handleTimeRangeChange","formatTimestamp","timeRangeLimit","setFullTimeRange","clearFilters","filteredEntries","description","data","paginatedEntries","height","stripe","prop","width","sortable","default","row","timestamp","currentPage","pageSize","total","layout","handleSizeChange","handleCurrentChange","name","components","Search","Download","ArrowLeft","DataAnalysis","Warning","setup","store","route","router","surgeryStatisticsVisible","surgeryData","analyzing","value","timestamps","map","entry","Date","minTime","Math","min","maxTime","max","entries","filter","explanation","toLowerCase","includes","error_code","startTime","endTime","entryTime","start","end","slice","loadSelectedLogs","async","logIds","params","ids","split","parseInt","response","dispatch","page","limit","allLogs","logs","error","loadBatchLogEntries","allEntries","entriesWithLogName","log_name","push","warning","sort","a","b","success","headers","csvContent","join","param1","param2","param3","param4","replace","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","toISOString","click","revokeObjectURL","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","sessionStorage","setItem","routeData","resolve","path","query","window","open","analyzeSurgeryData","api","surgeryStatistics","analyzeByLogIds","message","__exports__","render"],"sourceRoot":""}